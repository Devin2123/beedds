#pragma warning disable 219

@___If_u_can_read_this_u_r_nerd();
@___If_u_can_read_this_u_r_nerd()
{
#emit stack 0x7FFFFFFF
#emit inc.s cellmax
static const ___[][] = {"AntiDeAMX"};
#emit retn
#emit load.s.pri ___
#emit proc
#emit proc
#emit fill cellmax
#emit proc
#emit stor.alt ___
#emit strb.i 2
#emit switch 4
#emit retn
L1:
#emit jump L1
#emit zero cellmin
}
AntiDeAMX()
{
      new a[][] =
      {
          "Unarmed (Fist)",
          "Brass K"
      };
      #pragma unused a
}
#include <a_samp>
#include <mxINI>
#include <nex-ac>
#include <streamer>
//#include <FakeOnline>
#include <SKY>
#include <weapon-config>
#include <foreach>
#include <a_mysql>
#include <regex>
#include <sscanf2>
#include <a_actor>
#include <Pawn.CMD>
#include <a_zones>
#include <a_http>
#include <player_geolocation>
//==============================================================================
stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}
//===================================[MYSQL]====================================
enum MYSQL_SETTINGS
{
	DOOME_HOST, DOOME_USERNAME, DOOME_PASSWORD, DOOME_DATABASE
}
new MySQLSettings[MYSQL_SETTINGS][30];
new NameServer[128],AdminName[30],vksoz[60],vkgr[60],StartLVL,StartCash,StartBank;
//===============================[FULL DOSTUP]==================================
#define FD1	"0" //??????????
#define FD2 "0" //#2 ??????????
#define FD3 "0" //???.??????????
#define FD4 "0" //????????

#define AntiBan1 "0"//Commands that are protected are /offadmin, /offban, /delacc, /avig (in /aad the founder is indicated)
#define AntiBan2 "0"//??????? ??????? ?????? ??? ?????? - /offadmin, /offban, /delacc, /avig (? /aad ??????????? ??? ??????????)
#define AntiBan3 "0"//??????? ??????? ?????? ??? ?????? - /offadmin, /offban, /delacc
#define AntiBan4 "0"//??????? ??????? ?????? ??? ?????? - /offadmin

#define DKA "Asif_Khan"// ?????? ? ???????? (/anticheat)
//================================[INFO SERVER]=================================
#define NAME_MAP 		"Asian"//?????? ?? ???? ? ?? ???????? ?????????, ???-?? ????? ????? ??????!
#define NAME_SITY 		"Asian City"//???????? ?????? - ??????, ????? ???-?? ?????? ??? ????????!

#define NAME_SERVER		"Asian Role-Play"
#define PAGE_SITE 		"discord.gg/y3SaFeFK"
#define PAGE_VK			"Asif_Khan"
#define PAGE_VK_FREE    "Asif_Khan"
#define PAGE_FORUM		"discord.gg/y3SaFeFK"

#define NICK_NPC		"Asif_Khan"
#define NICK_NPC2		"Asif_Khan"
//==============================================================================
#define TABLE_BIZZ          						"bizz"
#define TABLE_ACCOUNT 								"accounts"
#define TABLE_HOUSE 								"house"
#define TABLE_OTHER									"other"
#define TABLE_MERIA								    "meria"
#define TABLE_BANLOG								"banlog"
#define TABLE_GANGZONE                              "gangzone"
#define TABLE_PICK                                  "mayor"
#define TABLE_GREENZONE                             "greenzone"
#define TABLE_BANK                                  "bank"
// ÒÀÁËÈÖÛ ËÎÃÎÂ
#define TABLE_LOGBANK                               "transfers_log"
#define TABLE_CAPTCHALOG                            "captchalog"
//==============================================================================
#define publics:%0(%1) forward %0(%1); public %0(%1)
#define Cvet_0 0xFFFFFF20
#define Cvet_1 0xFF0000FF
#define Cvet_2 0x808080FF
#define Cvet_3 0x008000FF
#define Cvet_4 0xFFFF00FF
#define Cvet_5 0x0000FFFF
#define Cvet_6 0xFFA500FF
#define Cvet_7 0x32CD32FF
#define Cvet_8 0xFF00FFFF
#define Cvet_9 0xDC143CFF
#define Cvet_11 0xFFD700FF
#define Cvet_12 0x808000FF
#define Cvet_13 0xFF6347FF
#define Cvet_14 0xEE82EEFF
#define Cvet_15 0xFFFFFFFF
//==============================================================================
#define CBLUE              0x4682B4AA
#define COLOR_ISPOLZUY     0x7FB151FF
#define COLOR_GRAD1        0xB4B5B7FF
#define COLOR_BLUE         0x33AAFFFF
#define COLOR_GRAD2        0xBFC0C2FF
#define COLOR_INDIGO       0x4B00B0AA
#define COLOR_GRAD3        0xCBCCCEFF
#define COLOR_GRAD4        0xD8D8D8FF
#define COLOR_GRAD6        0xF0F0F0FF
#define COLOR_BLACK        0x000000AA
#define COLOR_GREY         0xAFAFAFAA
#define COLOR_GREEN        0x33AA33AA
#define COLOR_ORANGE       0xFF9900AA
#define COLOR_RED          0xAA3333AA
#define COLOR_LIGHTRED     0xFF6347AA
#define COLOR_LIGHTBLUE    0x33CCFFAA
#define COLOR_LIGHTGREEN   0x9ACD32AA
#define COLOR_YELLOW       0xFFFF00AA
#define COLOR_YELLOW2      0xF5DEB3AA
#define COLOR_WHITE        0xFFFFFFAA
#define COLOR_REDD         0xFF0000AA
#define COLOR_BROW         0xA85400AA
#define COLOR_FADE1        0xE6E6E6E6
#define COLOR_FADE2        0xC8C8C8C8
#define COLOR_FADE3        0xAAAAAAAA
#define COLOR_FADE4        0x8C8C8C8C
#define COLOR_FADE5        0x6E6E6E6E
#define COLOR_PURPLE       0xC2A2DAAA
#define COLOR_DBLUE        0x2641FEAA
#define COLOR_ALLDEPT      0xFF8282AA
#define COLOR_NEWS         0xFFA500AA
#define COLOR_OOC          0xE0FFFFAA
#define COLOR_BOX          0x00000050
#define COLOR_BBLUE        0x20A9FFAA
#define TEAM_BLUE_COLOR    0x8D8DFF00
#define TEAM_GROVE_COLOR   0x00D900C8
#define TEAM_VAGOS_COLOR   0xFFC801C8
#define TEAM_BALLAS_COLOR  0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x01FCFFC8
#define TEAM_CYAN_COLOR    0xFF8282AA
#define TEAM_ORANGE_COLOR  0xFF830000
#define COLOR_ORANGE 	   0xFF9900AA
#define COLOR_RED          0xAA3333AA //ýòî äëÿ öâåòà
#define COLOR_YELLOW3 	   0xFFCC00AA
#define COLOR_SILVER       0xC0C0C0FF
#define COLOR_SHBAR 	   0x6053F3FF
#define COLOR_SHBAR_BG 	   0x000000FF
#define COLOR_SHBAR_BG2    0xB8CEF6FF
#define dColorGun						9164
#define dColorGun2 						9165
#define publics:%0(%1)												forward %0(%1); public %0(%1)
/******************************************************************************/
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define HOLDING(%0) ((newkeys & (%0)) == (%0))
#define RandomEx(%1,%2) (random(%2-%1)+%1)
// Êàçèíî:
#define VW_DRAGONS 50
#define VW_CALIGULAS 51
#define DRAGONS_FRAC 27 // íîìåð ôðàêöèè 4 äðàêîíû
#define CALIGULAS_FRAC 28 // íîìåð ôðàêöèè êàëèãóëà
#define D_DUTY 15000
#define D_ROULE 16000
#define D_DICE 17000
#define D_BLACKJACK 18000
#define MAX_DICETABLES 8
#define MAX_ROULETABLES 12
#define MAX_BLACKJACKTABLES 12
//
#define D_ATUNE 450
#define ANTI_FLOODS     1
#define DIALOG_STYLE_PASSWORD 3
#define VEHICLE_PARAMS_OFF  0
#define VEHICLE_PARAMS_ON   1
#define ONE_HUNDRED_MSECOND             1000
#define DIALOG_STYLE_MSG4  0
#define MAX_BUSINESS (200)
#define DIALOG_STYLE_INPUT  1
#define DIALOG_STYLE_LIST  2
#define MAX_ADVERT_COUNT 15 // Ìàêñèìàëüíîå êîë-âî îáúÿâëåíèé
#define KEY_AIM 128
#define SMALL_SIZE 64
#define Max
#define MAX_PROMO 20
#define YouCanNot 									"You do not have this function!"
#define SendMes(%1,%2,%3)    format(stringer1,sizeof(stringer1),%3), SendClientMessage(%1,%2,stringer1)
#define SCM 				 SendClientMessage
#define MAX_PAYNSPRAY           10
#define IsValidEmail(%1) \
    regex_match(%1, "|([a-z0-9_\\.\\-]{1,20})@([a-z0-9\\.\\-]{1,20})\\.([a-z]{2,4})|is")
#define IsValidRpName(%1) \
    (4 <= strlen(%1) <= 20 && regex_match(%1, "[A-Z]+[a-zA-Z]*_[A-Z]+[a-zA-Z]*"))
#define YouCanNotAdminDuty    "Login first"
#define FRACTIONS_NUM (29)
#define FD(%0) (!strcmp(PlayerInfo[%0][pNames], FD1) || !strcmp(PlayerInfo[%0][pNames], FD2) || !strcmp(PlayerInfo[%0][pNames], FD3) || !strcmp(PlayerInfo[%0][pNames], FD4))
#define DAC !strcmp(PlayerInfo[playerid][pNames], DKA, false)
new FractionVxod[FRACTIONS_NUM][60];
new FractionNamess[FRACTIONS_NUM][MAX_PLAYER_NAME];
new FractionHasLeader[FRACTIONS_NUM];

//==============================================================================
/******************************************************************************/
#pragma disablerecursion
forward AntiBH(playerid);//òàéìåð1
forward AntiBH1(playerid);//òàéìåð2
forward OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward AdminFly(playerid);
forward Float:SetPlayerToFacePos(playerid, Float:X, Float:Y);
/******************************************************************************/
#define MAX_FACTIONS 29
#define MAX_LEADER_NAME_LENGTH 35

enum aRendinfo
{
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			//Model
	aCost,			//Öåíà
	Float:aPos_X,	//Êîðäèíàòà X
	Float:aPos_Y,	//Êîðäèíàòà Y
	Float:aPos_Z,	//Êîðäèíàòà Z
	Float:aPos_A,	//Óãîë ïîâîðîòà
	aColor_1,		//Öâåò 1
	aColor_2		//Öâåò 2
};
enum SETTINGS_DATA
{
	CheatSetting[53]
};
new SettingInfo[SETTINGS_DATA];
#define Reptext_SIZE (130)
enum RepGB {
    Reptext[Reptext_SIZE]//
};
enum RepGB2 {
    Reptex2[130],//
}
new RepInfo[MAX_PLAYERS][RepGB];
//Àäìèíêà
new ConfigAdminka[3];
new ConfigActive = 0;
//
new Adminka = 0;
new admtext[240];
new YesAdminka;
new AdmLvl;
new vehiclerc[MAX_PLAYERS];
//Ðàçäà÷à
new YesRubles, PrizeDist;
new WaitDist = 0;
new EnabledDist = 1;
new CondDist = 1;
new InterDist = 30;
new TimeToDist = 0;
new Distribution = 0;
new distrib[240];
// HostNames
new ServerName[3][64];
new NameEnabled[3];
new rentcar;
new rentspawn;
new gangsquest;
// NEWS BY Moon Weaksize
new spawndoor;
new respawndoor;
new armysteal;
new armysteal2;
new medcardpic;
new dmzone;
new dmzone1;
new dmzonejoin;
new actormed;
new Text:GenuineLogo[6];
/*new Text:gcrp0;
new Text:gcrp1;
new Text:gcrp2;
new Text:gcrp3;
new Text:gcrp4;
new Text:gcrp5;
new Text:gcrp6;
new Text:gcrp7;
new Text:gcrp8;
new Text:gcrp9;
new Text:gcrp10;
new Text:gcrp11;
new Text:gcrp12;
new Text:gcrp13;
new Text:gcrp14;*/
new Text:Kenji[8];
new Text:samp4;
new HackerJob[MAX_PLAYERS];
new HJLimitTimer;
new Text:work0;
new Text:work1;
new Text:work2;
new Text:work3;
new Text:work4;
new Text:work5;
new Text:work6;
new total[MAX_PLAYERS];
new clearmusor;
new musor[MAX_PLAYERS];
new object1[MAX_PLAYERS];
new object2[MAX_PLAYERS];
new object3[MAX_PLAYERS];
new object4[MAX_PLAYERS];
new object5[MAX_PLAYERS];
new object6[MAX_PLAYERS];
// DEFINES BY Moon Weaksize
#define MUSOR 300
#define FILTERSCRIPT
//=================================================
//new rc_pickup;
new Teleport;
new BlNick[MAX_PLAYERS];
new Objects[MAX_PLAYERS][11];
new Float:TeleportFloat[3];
new TeleportInfo[2];
new Text:hello_server[8];
new dicetime;
new FaggioBikes[45];
new PlayerIp[MAX_PLAYERS][32+1];
new bool:b_Ghetto[5 char];
new bool:flying[MAX_PLAYERS];
new ArendInfo[][aRendinfo] =
{//ID, price, coordinates X, Y, Z, color 1, color 2
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 300000 ,1911.4460449,-2244.1708984,14.5469999,230.0000000,-1,-1 }, // Airpark1 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 350000 ,1911.4453125,-2326.3439941,14.5469999,229.9987793,-1,-1 }, // Airpark2 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 420000 ,1911.7080078,-2272.2089844,14.5469999,229.9987793,-1,-1 }, // Airpark3 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 519, 630000 ,1911.4453125,-2298.4736328,14.5469999,229.9987793,-1,-1 }, // Airpark4 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 450000 ,1986.0634766,-2253.0969238,14.0970001,129.9957275,-1,-1 }, // Airpark5 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 600000 ,1986.0634766,-2272.3020020,14.0970001,129.9957275,-1,-1 }, // Airpark6 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 1200000 ,1986.0634766,-2290.2519531,14.0970001,129.9957275,-1,-1 }, // Airpark7 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 1250000 ,1986.0639648,-2307.8798828,14.0970001,129.9957275,-1,-1 }, // Airpark8 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 1550000 ,1986.0634766,-2344.1740723,14.0970001,129.9957275,-1,-1 }, // Airpark9 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 3000000 ,1986.0634766,-2325.7392578,14.0970001,129.9957275,-1,-1 }, // Airpark10 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 1000000 ,1861.5699463,-2284.2351074,13.8120003,300.0000000,-1,-1 }, // Airpark11 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 880000 ,1861.5699463,-2269.3369141,13.8120003,300.0000000,-1,-1 }, // Airpark12 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 1400000 ,1861.5699463,-2296.8530273,13.8120003,300.0000000,-1,-1 }, // Airpark13 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 469, 850000 ,1895.4709473,-2292.8100586,13.6470003,270.0000000,-1,-1 }, // Airpark14 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 469, 1700000 ,1881.0760498,-2299.4060059,13.6470003,270.0000000,-1,-1 }, // Airpark15 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 469, 1550000 ,1881.0760498,-2286.8278809,13.6470003,270.0000000,-1,-1 }, // Airpark16 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 563, 1900000 ,1881.4890137,-2326.4860840,25.5900002,0.0000000,-1,-1 }, // Airpark17 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 563, 1900000 ,1866.1040039,-2326.4860840,25.5970001,0.0000000,-1,-1 }, // Airpark18 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 417, 2000000 ,1880.9959717,-2243.5029297,23.7049999,180.0000000,-1,-1 }, // Airpark19 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 417, 2000000 ,1865.8010254,-2243.5029297,23.7110004,180.0000000,-1,-1 }, // Airpark20 ËÑ
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 50000 ,523.6040039,-1291.3409424,17.1819992,0.0000000,-1,-1 },//Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 50000 ,327.5866,-1809.2540,4.6220,0.9719,-1,-1 },//Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 50000 ,527.7349854,-1291.3769531,17.2450008,0.0000000,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 50000 ,324.3883,-1809.4557,4.6220,359.9984,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 50000 ,334.4073,-1788.5521,4.7547,178.3377,-1,-1 },//Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 50000 ,337.5338,-1788.7452,4.6212,179.4663,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 63000 ,531.9589844,-1291.5660400,17.1420002,0.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 63000 ,330.8795,-1809.3622,4.6220,358.2563,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 49000 ,536.7410278,-1291.5119629,17.0520000,0.0000000,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 49000 ,347.0609,-1809.5153,4.6220,359.9814,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 49500 ,541.0540161,-1292.0629883,16.9340000,0.0000000,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 49500 ,350.2350,-1809.3156,4.6220,359.5803,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 80000 ,528.5289917,-1280.3249512,16.9419994,220.0000000,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 80000 ,311.5371,-1809.6342,4.6220,358.9674,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 170000 ,531.4060059,-1278.4449463,17.0340004,220.0000000,-1,-1 }, //Super GT
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 170000 ,327.9750,-1788.7878,4.6109,176.1494,-1,-1 }, //Super GT
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 40000 ,534.3989868,-1276.0620117,17.0919991,220.0000000,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 40000 ,334.0984,-1809.3370,4.6220,359.7085,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,324.6861,-1788.4365,4.4922,180.4502,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 170000 ,537.7470093,-1273.8289795,17.0919991,220.0000000,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 170000 ,540.7529907,-1271.2929688,17.0070000,220.0000000,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 170000 ,317.9624,-1809.4966,4.6220,359.3589,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 100000 ,543.7979736,-1268.7829590,16.9979992,220.0000000,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 100000 ,314.6944,-1809.4600,4.6220,0.4280,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 140000 ,546.9940186,-1266.2130127,17.0919991,220.0000000,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 140000 ,311.7464,-1788.2052,4.2033,180.7068,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,551.0490112,-1263.4470215,17.0419998,220.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,315.0270,-1788.3524,4.3662,179.0408,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,545.0469971,-1291.6590576,17.0419998,359.9957275,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 200000 ,549.9730225,-1291.6760254,17.0529995,0.0000000,-1,-1 }, //Sultan
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 130000 ,567.4240112,-1287.7750244,16.9519997,102.0000000,-1,-1 }, //Uranus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 200000 ,566.7059937,-1283.6190186,16.9480000,102.0000000,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,565.4819946,-1279.2340088,17.1420002,102.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,318.2239,-1788.1189,4.4786,180.5789,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,321.3834,-1788.2512,4.4033,180.3419,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 70000 ,564.8140259,-1274.6230469,16.9960003,102.0000000,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 70000 ,337.1626,-1809.3209,4.6220,359.6717,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 70000 ,340.6049,-1809.6180,4.6220,357.6861,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,343.8618,-1809.5323,4.6220,1.0013,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1991.4699707,276.2290039,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1991.6660156,272.7380066,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1991.8039551,270.1709900,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1992.0639648,267.4509888,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 468, 25000 ,-1992.1779785,265.1329956,34.9319992,270.0000000,-1,-1 }, //Sanchez
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1991.7729492,260.6340027,34.7760010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1992.0260010,258.1619873,34.7760010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1992.4790039,255.5330048,34.7690010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1993.0699463,252.3220062,34.7690010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 586, 24000 ,-1993.4840088,248.7680054,34.7690010,270.0000000,-1,-1 }, //Wayfarer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 30000 ,-1994.2679443,245.7619934,34.8460007,270.0000000,-1,-1 }, //PCJ-600
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 30000 ,-1994.5760498,243.5260010,34.8460007,270.0000000,-1,-1 }, //PCJ-600
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 461, 30000 ,-1994.8780518,240.9199982,34.8460007,270.0000000,-1,-1 }, //PCJ-600
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 40000 ,-1989.7060547,308.7940063,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 40000 ,-1989.7792969,300.7001953,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 40000 ,-1989.7880859,303.4785156,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 522, 90000 ,-1989.7148438,306.0712891,34.8400002,270.0000000,-1,-1 }, //NRG-500
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1990.4709473,240.3020020,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1987.5030518,240.2760010,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1984.4530029,240.2669983,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 521, 44000 ,-1981.0030518,240.3289948,34.8320007,0.0000000,-1,-1 }, //FCR-900
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 110000 ,-1947.4980469,257.3869934,35.3180008,0.0000000,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 50100 ,-1953.1219482,257.2730103,35.2239990,0.0000000,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 130000 ,-1958.0600586,257.3340149,35.2330017,0.0000000,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 150000 ,-1944.8389893,273.0010071,35.3240013,90.0000000,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 150000 ,321.1870,-1809.3546,4.6220,0.3012,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 80000 ,-1944.5030518,265.6380005,35.3240013,90.0000000,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,-1958.4520264,304.8699951,35.2690010,180.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,-1956.9410400,279.3240051,35.3689995,140.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 120000 ,-1956.4219971,262.1619873,41.0499992,230.0000000,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 30000 ,-1956.2280273,270.6180115,40.8569984,230.0000000,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 67000 ,-1946.3079834,274.4540100,40.7389984,180.0000000,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 402, 95000 ,2148.9899902,1409.0209961,10.7600002,0.0000000,-1,-1 }, //Buffalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 1200000 ,2142.2580566,1408.5920410,10.6199999,0.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 100000 ,2135.8278809,1408.9189453,10.6700001,0.0000000,-1,-1 }, //Cheetah
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 429, 111000 ,2129.3159180,1408.6700439,10.5699997,0.0000000,-1,-1 }, //Banshee
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 1200000 ,2123.1340332,1408.8940430,10.5769997,0.0000000,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 451, 1200000 ,324.3883,-1809.4557,4.6220,359.9984,-1,-1 }, //Turismo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 110000 ,2116.7619629,1409.0209961,10.6700001,0.0000000,-1,-1 }, //ZR-350
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 480, 100000 ,2110.5639648,1408.8260498,10.6700001,0.0000000,-1,-1 }, //Comet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 506, 170000 ,2103.7609863,1409.1290283,10.6120005,0.0000000,-1,-1 }, //Super GT
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 541, 200000 ,2097.8220215,1408.5310059,10.5200005,0.0000000,-1,-1 }, //Bullet
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 558, 80000 ,2097.9030762,1398.5009766,10.5240002,180.0000000,-1,-1 }, //Uranus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 559, 120000 ,2104.2690430,1398.3179932,10.5740004,180.0000000,-1,-1 }, //Jester
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 190000 ,2110.4919434,1398.4549561,10.6250000,180.0000000,-1,-1 }, //Sultan
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 562, 180000 ,2117.0810547,1398.5830078,10.5740004,180.0000000,-1,-1 }, //Elegy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 565, 135000 ,2123.5371094,1398.5279541,10.5039997,180.0000000,-1,-1 }, //Flash
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 587, 103000 ,2129.7780762,1398.3570557,10.6230001,180.0000000,-1,-1 }, //Euros
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 130000 ,2148.9670410,1398.4289551,10.7130003,180.0000000,-1,-1 }, //Alpha
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 603, 120000 ,2142.6679688,1398.1269531,10.8149996,180.0000000,-1,-1 }, //Phoenix
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 200000 ,2136.0170898,1397.9630127,10.6199999,180.0000000,-1,-1 }, //Infernus
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,201.6529999,-1919.3530273,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,179.9129944,-1919.1800537,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,166.4360046,-1919.6970215,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,173.4335938,-1919.3906250,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,189.1464844,-1918.9531250,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 150000 ,195.3964844,-1919.1718750,0.0000000,180.0000000,-1,-1 }, //Squalo
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,223.2310028,-1919.4499512,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,212.7001953,-1918.8652344,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,218.0605469,-1919.2587891,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 452, 200000 ,228.1609955,-1919.5439453,0.0000000,180.0000000,-1,-1 }, //Speeder
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 453, 180000 ,237.3939972,-1919.3310547,0.0000000,180.0000000,-1,-1 }, //Reefer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 150000 ,263.8150024,-1920.0319824,0.0000000,180.0000000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 230000 ,251.1840057,-1918.5570068,0.0000000,180.0000000,-1,-1 }, //Jetmax
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 453, 260000 ,257.1910095,-1919.2840576,0.0000000,180.0000000,-1,-1 }, //Reefer
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 270000 ,244.4218750,-1920.0117188,0.0000000,180.0000000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 484, 220000 ,277.8869934,-1921.7320557,0.0000000,180.0000000,-1,-1 }, //Marquis
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 484, 220000 ,271.1484375,-1921.6894531,0.0000000,180.0000000,-1,-1 }, //Marquis
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,297.1010132,-1922.8590088,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,292.1799927,-1916.7382812,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,297.1010132,-1916.7382812,0.0051701,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,286.7399902,-1916.7382812,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,286.7399902,-1922.8590088,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,292.1799927,-1922.8590088,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,292.1799927,-1929.1049805,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,297.1010132,-1929.1044922,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,286.7399902,-1929.1044922,0.0000000,180.0000000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 150000 ,718.0416,-2705.1785,9.0000,0.0000,-1,-1 }, //helicopter
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 230000 ,717.1964,-2740.4985,9.0000,0.0000,-1,-1 }, //helicopter
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 150000 ,600.0245,-2669.4751,0.4779,0.0000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 230000 ,585.3885,-2669.9546,0.4779,0.0000,-1,-1 }, //Jetmax
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 150000 ,617.7123,-2669.8381,0.4779,0.0000,-1,-1 }, //Tropic
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 230000 ,633.8150,-2669.4695,0.4779,0.0000,-1,-1 }, //Jetmax
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 100000 ,648.4157,-2669.8179,0.4779,0.0000,-1,-1 }, //Dinghy
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 100000 ,591.1024,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 100000 ,589.3212,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 100000 ,587.4610,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 200000 ,585.4816,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 200000 ,583.4824,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 200000 ,581.3430,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 180000 ,579.5439,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 150000 ,577.3852,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 230000 ,575.2054,-2715.1133,2.0000,180.0000,-1,-1 }, //quadbike
	{ INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 471, 260000 ,572.9269,-2715.1133,2.0000,180.0000,-1,-1 } //quadbike
};
enum Bazar
{
	aID,
	Float:BazX,
	Float:BazY,
	Float:BazZ,
	bMoney,
	BName[40]
}

new Text:td_logo[9];
new PlayerText:td_speed[MAX_PLAYERS][18];


new BazarAcc[8][Bazar] =
{
	{0,1153.68,-1467.36,15.8,9000,"Unique bandans (1st cell)"},
	{19095,1154.57,-1470.02,15.8,23000,"90's hat (1st cell)"},
	{19096,1154.85,-1470.89,15.8,23000,"90's hat (1st cell)"},
	{19097,1155.14,-1471.78,15.8,23000,"90's hat (1st cell))"},
	{19098,1156.99,-1477.31,15.8,23000,"90's hat (1st cell))"},
	{19099,1157.25,-1478.12,15.8,31000,"Black Sheriff Hat (1st slot)"},
	{19100,1157.54,-1479.0,15.8,31000,"Black Sheriff Hat (1st slot)"},
	{19528,1151.64,-1511.14,15.8,25000,"Souvenir Mage Hat (1st slot)"}
};
new realtorFreePickup, realtorFreeBusiness, realtorInfo;
new adons;
new TempBGObject[MAX_PLAYERS] = {-1, ...};
new adminprice = 39;
new helpprice = 29;
//new rankprice = 500;
new Visitors = 0;
new server_online = 0;
new Buyitem[MAX_PLAYERS] = {-1, ...};
new PlayerText:InfoText[MAX_PLAYERS] = {PlayerText:-1, ...};
new Text:Boxmenu0;
new Text:Boxmenu1;
new Text:Boxmenu2;
new Text:boxaccept;
new Text:boxcancel;
new Text:Boxmenu3;
new Text:ButtonLeft;
new Text:ButtonRight;
new Text:ButtonUp;
new Text:ButtonDown;
new Text:ButtonCancel;
new Text:ButtonSelect;
new ItemsId[][] =
{
	{ 19421,19422,19423,19424,1}, //Íàóøíèêè
	{ 19069,19068,19067,19554,18953,18954,1},//Øàïêè
	{ 18968,18967,18969,1},//Ïàíàìêè
	{ 18955,18956,18957,18959,18926,18927,18928,18929,18930,18931,18932,18933,1},//Êåïêè
	{ 19104,19105,19106,19107,19108,19109,1},//Êàñêè
	{ 18925,18922,18923,18924,18921,1},//Áåðåòû
	{ 19519,19274,1},//Ïàðèêè
	{ 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033,1},//Î÷êè
	{ 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,1 }, //Áàíäàíû
	{ 18947,18948,18949,18950,18951,1 }, //Øëÿïû
	{ 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053,1 }, //×àñû
	{ 3026,371,19559,1 },//ïîðòôåëè
	{ 18970, 18973, 18972, 18971,1 },//Øëÿïû
	{ 18910, 18909, 18908, 18907, 18906,1 }// Áàíäàíû íà ãîëîâó
};
new ItemsCost[][] =
{
	{ 30000,30000,30000,30000,1}, //Íàóøíèêè
	{ 15000,15000,20000,25000,17000,17000,1},//Øàïêè
	{ 9000,9000,9000,1},//Ïàíàìêè
	{ 9000,9000,9000,12000,9000,9000,15000,15000,9000,9000,9000,15000,1},//Êåïêè
	{ 5000,5000,5000,5000,5000,5000,1},//Êàñêè
	{ 8000,8000,8000,9000,11000,1},//Áåðåòû
	{ 15000,15000,1},//Ïàðèêè
	{ 6000,8000,4000,5000,6000,7000,7000,7000,10000,11000,11000,11000,11000,11000,10000,8000,11000,11000,1},//Î÷êè
	{ 6000,6000,6000,8000,8000,8000,8000,7000,7000,7000,1 }, //Áàíäàíû
	{ 30000,30000,30000,30000,30000,1 }, //Øëÿïû
	{ 80000,700000,60000,60000,60000,10000,10000,10000,20000,24000,24000,15000,24000,1 }, //×àñû
	{10000,8000,9000,1},//ïîðòôåëè
	{40000,40000,50000,40000,1},//øëÿïû
	{6000,6000,6000,6000,6000,1}//Áàíäàíû
};
static
	armedbody_pTick[MAX_PLAYERS];
static const GetMemberPrice[29] = {
	0,//Äëÿ õóéíè
	60, // LSPD
	75, // FBI
	70, // Àâèíîñåö
	60, // Ì×Ñ ËÑ
	50, // LCN
	50, // Yakuza
	80, // City Hall
	0, // Çàïðåùåííî
	0, // Çàïðåùåííî
	60, // SFPD
	75, // Instructors
	45, // Ballas
	45, // Vagos
	50, // RM
	45, // Groove
	70, // Sa News
	45, // Aztecas
	45, // Rifa
	70, // Zone 51
	0, //
	60, // LVPD
	0, //
	65, // Hitman
	50, // Street racers
	75, // Swat
	250, // ÀÏ
	35, // Casino 4 Dragons
	35 // Casino Calligulas
};

static const Float:GZLogo[39][5] = {
	{2392.8920898,-1557.3609619,28.7500000,0.0000000,270.0000000}, // (1)
	{2535.7580566,-1436.9289551,24.7500000,0.0000000,90.0000000}, // (2)
	{2598.2680664,-1404.6579590,37.2379990,0.0000000,90.0000000}, // (3)
	{2545.7319336,-1271.9429932,53.6040001,0.0000000,270.0000000}, // (4)
	{2482.1350098,-1348.5140381,35.6040001,0.0000000,270.0000000}, // (5)
	{2398.3391113,-1209.0140381,29.0400009,90.0000000,180.0000000}, // (6)
	{2352.0239258,-1265.8170166,23.2609997,180.0000000,270.0000000}, // (7)
	{2381.0000000,-1398.0500488,24.7910004,180.0000000,90.0000000}, // (8)
	{2281.8510742,-1553.0329590,34.8790016,270.0000000,180.0000000}, // (9)
	{2118.0249023,-1498.0429688,11.1719999,251.9890137,341.9890137}, // (10)
	{2016.487670,-1299.762695,24.687915,90.0000000,0.0000000}, // (11)
	{1855.7500000,-1120.1009521,24.7259998,180.0000000,270.0000000}, // (12)
	{2037.6009521,-1013.5200195,35.2820015,185.9945068,275.9945068}, // (13)
	{2104.6059570,-1009.5969849,59.6529999,165.9930420,255.9930420}, // (14)
	{2142.2700195,-1027.6650391,64.2770004,257.4924316,347.4924316}, // (15)
	{2242.6560059,-1119.9310303,47.1959991,337.4920654,67.4920654}, // (16)
	{2124.5939941,-1178.5610352,25.1599998,0.0000000,270.0000000}, // (17)
	{2663.5280762,-1553.2020264,27.4109993,90.0000000,0.0000000}, // (18)
	{2847.1130371,-1522.0250244,16.2759991,90.0000000,0.0000000}, // (19)
	{2788.5249023,-1457.2879639,36.9389992,180.0000000,90.0000000}, // (20)
	{2804.5048828,-1424.3280029,57.0180016,270.0000000,180.0000000}, // (21)
	{2753.1640625,-1183.1600342,70.2220001,270.0000000,180.0000000}, // (22)
	{2788.9899902,-1948.1409912,14.2969999,270.0000000,180.0000000}, // (23)
	{2749.6669922,-2039.3089600,13.9130001,270.0000000,0.0000000}, // (24)
	{2516.4689941,-2121.5891113,14.3970003,270.0000000,180.0000000}, // (25)
	{2432.7209473,-2130.6608887,28.9699993,0.0000000,270.0000000}, // (26)
	{2336.2060547,-1994.7320557,26.6469994,0.0000000,270.0000000}, // (27)
	{2170.7548828,-1968.3199463,14.6929998,90.0000000,180.0000000}, // (28)
	{2131.8369141,-2010.3360596,8.9499998,43.9835205,313.9835205}, // (29)
	{1703.0460205,-2082.3710938,14.3830004,0.0000000,90.0000000}, // (30)
	{1937.9449463,-2135.3659668,22.5739994,348.0000000,78.0000000}, // (31)
	{1836.2320557,-1814.4830322,5.1859999,257.9974365,347.9974365}, // (32)
	{1997.7900391,-1777.1080322,18.4529991,270.0000000,0.0000000}, // (33)
	{2251.3798828,-1705.5930176,18.4769993,0.0000000,90.0000000}, // (34)
	{2440.9160156,-1760.8409424,14.6940002,0.0000000,90.0000000}, // (35)
	{2654.6350098,-2029.6989746,14.3039999,90.0000000,0.0000000}, // (36)
	{2518.9541016,-1969.9310303,14.6230001,180.0000000,90.0000000}, // (37)
	{2404.9370117,-2039.2419434,14.3420000,270.0000000,180.0000000}, // (38)
	{2231.0410156,-1993.9460449,30.6380005,314.4890137,224.4890137} // (39)
};
//Ïîêóïêà êîìàíä
enum
{
  CMD_setadmin,
  CMD_setleader,
  CMD_banip,
  CMD_gzcolor,
  CMD_acar,
  CMD_ghetto,
  CMD_sethelper,
  CMD_avig,
  CMD_aunvig,
  CMD_offhelper,
  CMD_offleader,
  CMD_NUM//êîë-âî êîìàíä â ýòîì ñïèñêå (íå òðîãàòü, îñòàâèòü âêîíöå) //11111111111
};
static const stock CMD_names[CMD_NUM][32] =
{
	"/setadmins",
	"/setleader",
	"/banip",
	"/gzcolor",
 	"/acar",
	"/ghetto",
	"/sethelper",
	"/avig",
	"/aunvig",
	"/offhelper",
	"/offleader"
};
static const stock CMD_desc[CMD_NUM] [128] =
{
	"- Assigning administrators",
	"- Assign the image",
	"- Lock the IP address of the game",
	"- Cut the gang zone",
	"- Create an Adam's Infernus",
	"- Resolve/Disable Bandam Capture",
	"- Assign the helper",
	"- Send the client to the administrator",
	"- Remove your administrator",
	"- Assign/remove helper in offline",
	"- Remove leader in offline"
};
static const stock CMD_price[CMD_NUM] = {
	3000, // setadmin
	2000, // setleader
	400, // banip
	200, // gzcolor
	0, // acar
	200,
	1000,
	2000,
	2000,
	2000,
	0
};
///
enum GzLinfo
{
	gID[2],
	gOwner[2],
Float:gFinish[2],
	gIcon,
	Text3D:g3D
};
new GZLogoInfo[sizeof(GZLogo)][GzLinfo];
new TotalGraf[5];
new PlayerBigEarsConnect[MAX_PLAYERS char] = true;
// ÊÎÍÂÅÐÒÈÐÎÂÀÍÈÅ UNIX âðåìåíè:
#define EPOCH_YR        1970            /* EPOCH = Jan 1 1970 00:00:00 */
#define SECS_DAY        (24 * 60 * 60)
#define LEAPYEAR(%0)    (!((%0) % 4) && (((%0) % 100) || !((%0) % 400)))
#define YEARSIZE(%0)    (LEAPYEAR(%0) ? 366 : 365)

static const _ytab[2][12] = {
	{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 },
	{ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }
};
static const allow_guns_print[13]={22,23,24,25,27,28,29,30,31,32,33,35,36};
static const _weapon_color_name[6][10]={"Army","Green","Orange","Blue","Pink","Gold"};
static const _weapon_colors[6] =
{
	0xFF4B53FF, // Army
	0xFF9EAFFF, // Green
	0xFFFFAEFF, // Orange
	0xFF0073FF, // LSPD
	0xFFFF14FF, // Pink
	0xFFFFD7FF // Gold
};
new P_VOKZALLS[2];
new Text: TD_Reg1[11];
new Text: TD_Reg2[8];
new Text: TD_Reg3[28];
new Text: TD_Reg4[8];
new PlayerText: PTD_Reg1[MAX_PLAYERS][3];
new PlayerText: PTD_Reg2[MAX_PLAYERS][4];
new PlayerText: PTD_Reg3[MAX_PLAYERS][3];
enum cheatinfo
{
   cheatid1
}
enum config
{
	sDist,
	sDistRub,
	sDonPower
}
new Config[config];
new CheatInfo[MAX_PLAYERS][cheatinfo];
new CheatInfo1[MAX_PLAYERS][cheatinfo];
new PlayerRegStep[MAX_PLAYERS];
new PlayerRegMode[MAX_PLAYERS];
new RegSkins[2][3] =
{
	{ 135, 26, 240 },
	{ 131, 41, 12 }
};
new RegHistoryName[2][3][19] = {
	{ "Home", "Ness", "Your business" },
	{ "House", "Rezar", "Yours is Lost" }
};
new RegHistory1[2][][] = {
	{
	"You are not the only one with such a fate; there are hundreds, or even thousands, like you.\n",
	"After all, absolutely everyone, both the lower and upper strata of the population, fell under the influence of the crisis.\n",
	"You lived before this in a simple house in the ghetto, you went to work and spent the evenings flipping through channels on the TV, drinking another bottle of beer,\n",
	"but unfortunately your company went bankrupt, you naturally lost your job, like hundreds of other residents of this state.\n" ,
	"Over time, you didn't have enough money to pay taxes, day after day, you collected bottles, worked a bad job and you didn't care\n",
	"not enough to pay taxes to live in your house. Soon you were kicked out of the house, and you went to wander around the ghetto.\n",
	"Not a cent was left in your pockets, you didn’t even have enough money for food, and your clothes soon began to tear, smell and look,\n",
	"as if you had just crawled out of the trash heap.\n\n",
	"Soon you got tired of the nomadic lifestyle, you went to work and started a new life."
	},
	{
	"You are not alone with such a fate; there are hundreds, or even thousands, of you.\n",
	"After all, absolutely everyone, both the lower and upper strata of the population, fell under the influence of the crisis.\n",
	"You lived before this in a simple house in the ghetto, you went to work and spent the evenings flipping through channels on the TV, but unfortunately\n",
	"your company went bankrupt, you naturally lost your job, like hundreds of other residents of this state.\n",
	"Over time, you there wasn't enough money to pay taxes, day after day, you collected bottles, worked at a bad job and you didn't care\n",
	"it wasn't enough to pay taxes on living in your house. Soon you were kicked out of the house, and you left to wander around the ghetto.\n",
	"Not a cent was left in your pockets, you didn't even have enough money for food, and your clothes soon began to tear, stink and look,\n",
	"as if you had just got out of the trash heap.\n\n",
	"Soon you got tired of the nomadic lifestyle, you went to work and started a new life."
	}
};

new RegHistory2[2][][] = {
	{
	"San Andres is a state of pleasure, debauchery and drinking. Golden beaches, beautiful and slender girls, warm seas make you drop everything and come\n",
	"here - that's what it said on the ticket you won in the competition. Without thinking, you went home and packed your things, because\n",
	"to refuse this is stupid. You casually packed your bags and went to the nearest airport. After all, you're tired of all this dullness and\n",
	"the monotony of the city in which you lived. After several hours, you got into the state, leaving the airport building you smelled the aroma of the ocean breeze,\n",
	"it was so easy to breathe that my mood rose sharply. You went to the city center and rented a hotel room, after which you went for a walk\n",
	"in Los Santos at night. But you wandered too far, and a bad fate awaited you; when you turned the corner, two bandits followed you,\n",
	"they had brass knuckles, and it seems their intentions were not the brightest. You, gradually accelerating your pace, started running and tried to hide from them.\n",
	"And so, it seemed to you that you had left them, when suddenly you felt a strong blow to your neck, after which you lost consciousness.\n",
	"You woke up at a local hippie hangout, you were picked up by one of these.\n\n",
	"After rummaging through your pockets, you found nothing. Reaching into the inside left pocket, you found two hundred Moneys.,\n",
	"apparently the bandits were too stupid to go there.\n\n",
	"And now, a new world has opened up for you, in which you will have to survive."
	},
	{
	"San Andres is a state of pleasure, debauchery and drinking. Golden beaches, beautiful and slender girls, warm seas make you drop everything and come\n",
	"here - that's what it said on the ticket you won in the competition. Without thinking, you went home and packed your things, because\n",
	"to refuse this is stupid. You casually packed your bags and headed to the nearest airport. After all, you are tired of all this dullness and\n",
	"the monotony of the city in which you lived. After several hours, you got into the state, leaving the airport building you smelled the aroma of the ocean breeze,\n",
	"it was so easy to breathe that my mood rose sharply. You went to the city center and rented a hotel room, after which you went for a walk\n",
	"in Los Santos at night. But you wandered too far, and a bad fate awaited you; when you turned the corner, two bandits followed you,\n",
	"they had brass knuckles, and it seems their intentions were not the brightest. You, gradually accelerating your pace, started running and tried to hide from them.\n",
	"And so, it seemed to you that you had left them, when suddenly you felt a strong blow to your neck, after which you lost consciousness.\n",
	"You woke up at a local hippie hangout, you were picked up by one of these.\n\n",
	"After rummaging through your pockets, you found nothing. Putting your hand into the inner left pocket, you found 70 bucks there, apparently the bandits were too stupid,\n",
	"to climb there.\n\n",
	"And now, a new world has opened up for you, in which you will have to survive."
	}
};

new RegHistory3[2][][] = {
	{
	"Your business flourished quickly and confidently. The restaurant chain you ran has become very popular in this state and soon your wallet will\n",
	"I was already torn from all these green papers. You squandered your money as much as you could: you lost it in a casino, you spent your evenings in a bar,\n",
	"spent money on girls. But the money, as it seemed to you, did not end.\n",
	"Soon, a crisis arose in the state, prices for everything rose, you, literally in a dumbfounded state, tried to find a solution to all this\n",
	"big problem, but you never managed to find it. After some days, months, years, you sold one branch after another, the money\n",
	"quickly began to run out, and before you could blink, you had a tiny part of what you earned left in your hands. Now, you have decided,\n",
	"that even a crisis will not break you, so you suddenly began to come up with something new, from which your wallet will be replenished and out of your pockets again\n",
	"Moneys will pour in."
	},
	{
	"Your business flourished quickly and confidently. The chain of beauty salons you ran has become very popular in this state and soon your wallet will\n",
	"I was already torn from all these green papers. You squandered your money as much as you could: you lost it in casinos, spent your evenings in clubs,\n",
	"spent money on clothes and other goodies. But the money, as it seemed to you, did not end.\n",
	"Soon, a crisis arose in the state, prices for everything rose, you, literally in a dumbfounded state, tried to find a solution to all this\n",
	"big problem, but you never managed to find it. After some days, months, years, you sold one branch after another, the money\n",
	"quickly began to run out, and before you could blink, you had a tiny part of what you earned left in your hands. Now, you have decided,\n",
	"that even a crisis will not break you, so you suddenly began to come up with something new, from which your wallet will be replenished and out of your pockets again\n",
	"Moneys will pour in."
	}
};

new FindCommand[166][2][] =
{
	{"/mainmenu", "The server main menu"},
	{"/gps", "GPS navigator"},
	{"/sms", "Send a private message to player"},
	{"/time", "See the time"},
	{"/id", "Find the ID of the game by name"},
	{"/viphelp", "VIP help menu"},
	{"/myskill", "See your skills"},
	{"/report", "Send report message to admins team"},
	{"/change", "Improve house/business exchanges"},
	{"/witness", "Make a witness at the yard"},
	{"/drink", "Drink a drink"},
	{"/buybiz", "Buy bussines"},
	{"/mask", "Add/remove the mask"},
	{"/limit", "Stop speed limiter"},
	{"/present", "Give flowers"},
	{"/showmedcard", "Show med. card"},
	{"/atm", "Use a bank from ATM"},
	{"/showpass", "Show passport"},
	{"/mystyle", "Check out your style"},
	{"/satiety", "Check the speed"},
	{"/healme", "Use a heal"},
	{"/licenses", "See your licenses"},
	{"/box", "Set style box 'Box'"},
	{"/kongfu", "Set the style of boo 'Kung-Fu'"},
	{"/kickbox", "Stop the style of the 'Kick-Box'"},
	{"/getbizstats", "Check the information about the business"},
	{"/window", "Controlling the window in the pan"},
	{"/eject", "Bring the player out of the car"},
	{"/pay", "Transfer the money to the player"},
	{"/directory", "Help guide"},
	{"/offalend", "Filed from the house"},
	{"/drugs", "Use drugs"},
	{"/givedrug", "Give drugs to the player"},
	{"/ddrug", "Throw drugs from the bag"},
	{"/pdrug", "Get the selected drugs from a land"},
	{"/plant", "Drop off the labels"},
	{"/dgun", "Throw weapon from the bag"},
	{"/pgun", "Get the selected weapon from a land"},
	{"/selfie", "Take picture"},
	{"/oc", "Global chat"},
	{"/advertise", "Submit listing"},
	{"/goverment", "Goverment news"},
	{"/f", "Gang chat"},
	{"/sout", "Come on"},
	{"/megaphone", "Smartphone on a service"},
	{"/radio", "Chat gos. Organization"},
	{"/departaments", "General chat Organization"},
	{"/g", "The general chat"},
	{"/todo", ""},
	{"/call", "Call"},
	{"/pickup", "Answer a call"},
	{"/hangup", "End phone conversation"},
	{"/number", "Find out the player's phone number"} ,
	{"/rob", "Rob a person"},
	{"/refill", "Fuel a car"},
	{"/trailer", "Trail a vehicle"},
	{"/hotdog", "Sell a hotdog"},
	{ "/fare", "Start work"},
	{"/plist", "Order list"},
	{"/load", "Load into van"},
	{"/fgstyle", "Start work session"},
	{ "/bankup", "You have successfully deposited money into an ATM"},
	{"/jackcar", "Pick the lock"},
	{"/dropcar", "Sell a car"},
	{"/fight", "Challenge to the ring" },
	{"/suspect", "Declare wanted"},
	{"/arrest", "Arrest a player"},
	{"/wanted", "List of wanted players"},
	{"/cuff", "Cuff the player" },
	{"/shield", "Take a shield"},
	{"/members", "List of organization members"},
	{"/frisk", "Search a player"},
	{"/take", "Take from a player" },
	{"/gangsafe", "Check the organization's warehouse"},
	{"/ticket", "Issue a fine"},
	{"/givecopkeys", "Hand over the keys to the prison"},
	{"/cput", "Push the player into the car"},
	{"/ceject", "Push the player out of the car"},
	{"/uncuff", "Remove the handcuffs"},
	{"/drag", "Take the player under escort"},
	{"/bizlock" , "Open/close a business"},
	{"/undemote", "Demote/Fire a player"},
	{"/nalog", "Change state tax"},
	{"/takekazna", "Take from the treasury"},
	{ "/block", "Install spikes"},
	{"/rb", "Install post"},
	{"/rbinfo", "Information about posts"},
	{"/removerb", "Delete post"},
	{" /removerball", "Delete all posts"},
	{"/demote", "Transfer/demote player"},
	{"/ftazer", "Stun nearby players"},
	{"/spy", "Change into faction clothes"},
	{"/showudost", "Show ID"},
	{"/getgun","View player weapons"},
	{"/carmat", "Start loading materials"},
	{"/carm", "Weapon delivery menu"},
	{"/menu", "Laptop"},
	{"/tie" , "Tie up player"},
	{"/untie", "Untie player"},
	{"/klyap", "Insert gag"},
	{"/klyapoff", "Pull out gag"},
	{"/sethpprice", " Set the price for treatment"},
	{"/heal", "Cure a player"},
	{"/lomka", "Save from withdrawal"},
	{"/healaddict", "Conduct a session for drug addiction"},
	{"/mdpell ", "Check out of the hospital"},
	{"/narkoz", "Conduct a session for drug addiction"},
	{"/givemedcard", "Give out a medical card"},
	{"/takephone", "Pick up the phone"},
	{" /getweapon", "Take a weapon"},
	{"/bizwar", "Start a war for business"},
	{"/mafiabalance", "View mafia balance"},
	{"/materials", "Action with materials"},
	{"/mafiawithdraw", "Withdraw money from mafia bank"},
	{"/mafiabankput", "Put money into the mafia bank"},
	{"/free", "Get the player out of prison"},
	{"/mxpell", "Put the city hall/media out the door"},
	{"/news", "Announce news"},
	{"/live", "Go out live"},
	{"/newsbank", "Check the status of the media bank"},
	{"/newswithdraw", "Withdraw cash from the media bank"},
	{"/yes", "Take a call to the studio"},
	{"/off", "End a call to the studio"},
	{"/startblackjack", "Start a game of blackjack"},
	{" /roule", "Start playing roulette"},
	{"/startdice", "Set bet"},
	{"/setbet", "Set bet"},
	{"/axpell", "Put it out the door of the driving school"},
	{"/duty", "Start/end the instructor's working day"},
	{"/selldrugs", "Sell drugs"},
	{"/gunlist", "View list of weapons"},
	{"/sellzone", "Sell territory "},
	{"/capture", "Start a war for territory"},
	{"/unloading", "Start unloading materials"},
	{"/get", "Take something"},
	{"/keys", "Get the keys to the prison"},
	{"/gmenu", "Gang menu"},
	{"/bc", "Gangs chat"},
	{"/invite", "Invite player to your faction"},
	{"/uninvite", "Dismiss from the faction"},
	{"/sellgun", "Sell your gun to the player"},
	{"/robhouse", "Rob house"},
	{"/setdrugsprice", "Set the price to a drug"},
	{"/iinvite", "Army/Police"},
	{"/lpanel", "Faction menu"},
	{"/rank", "Give a player rank"},
	{"/changeskin", "Chnage the player skin"},
	{"/drive", "Reduce the weight of the transfer function"},
	{"/fvig", "Give warn to the player"},
	{"/funvig", "Remove the warn from the player"},
	{"/givebil", "Issue a ticket"},
	{"/hmenu", "Main menu of the house"},
	{"/home", "Marking the house (GPS)"},
	{"/healhouse", "Use your home heal"},
	{"/exit", "Come out of the house"},
	{"/business", "Money Management Menu"},
	{"/carpass", "Show the passport of the car"},
	{"/sellcar", "Sell your car"},
	{"/fixcar", "Take the car to the house/in the garden"},
	{"/fill", "Send car"},
	{"/fillcar", "Send the car from the printer"},
	{"/divorce", "Develop"},
	{"/propose", "Add a Hand and a Series"},
	{"/fmenu", "Family settings"},
	{"/k", "Family chat"},
	{"/kickfamily", "Kick from family"}
};
stock RegHistoryBorderShow(playerid, history)
{
	for(new i = 0; i < 4; i++) TextDrawShowForPlayer(playerid, TD_Reg3[16+(history*4)+i]);
}
stock RegHistoryBorderHide(playerid, history)
{
	for(new i = 0; i < 4; i++) TextDrawHideForPlayer(playerid, TD_Reg3[16+(history*4)+i]);
}
new CheckPass[MAX_PLAYERS][65];
//
new check_getip[32];
new VipNews[MAX_PLAYERS];
new Float:paynspray[][] =
{
	{1025.05, -1024.23, 32.1}, // LS Temple
	{487.68, -1740.87, 11.13}, // LS Russia Maria
	{-1420.73, 2583.37, 55.56}, // El Quebrados
	{-1904.39, 284.97, 40.75}, // Wang Cars
	{-2425.91, 1022.33, 50.10}, // Juniper Hill
	{1975.60, 2162.16, 10.77}, // LV Redsands
	{2065.38, -1831.51, 13.25}, // Idlewood
	{-99.55, 1118.36, 19.44}, // Fort Carson
	{721.07, -455.94, 16.04}, // Dillimore
	{2393.74, 1493.01, 10.52} // LV Unused (Pyramid)
};
new spike_areas[MAX_PLAYERS];
new spike_objects[MAX_PLAYERS] = {0, ...};
new PaynSpray[MAX_PAYNSPRAY];
new HealmeObject[MAX_PLAYERS];
new PlayerText:ShopText[MAX_PLAYERS];
new Text:AutoShopText[12];
new PlayerText:Target1;
new PlayerText:Target2;
new PlayerText:Target3;
new PlayerText:Target5;
new PlayerText:Target4[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:Target6[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:AimNameDraw[MAX_PLAYERS] = {PlayerText:-1, ...};
new Menu:HouseShaw;//Øêàô â äîìå.
//Ñêèíû
static stock Text:gSkinShopDraw[5]={Text:-1};
static stock PlayerText:gSkinShopPriceDraw[MAX_PLAYERS]={PlayerText:-1};
enum SKIN_DATA {
	skinID,
	skinPrice,
	skinSex // 1 - æåíñêèé, 2 - ìóæñêîé
}
#define SKIN_SEX_MALE 1
#define SKIN_SEX_FEMALE 2
#define MAX_SKINS 113
static const stock gSkins[MAX_SKINS + 1][SKIN_DATA] = {
	{31, 5000, SKIN_SEX_FEMALE},
	{38, 5000, SKIN_SEX_FEMALE},
	{39, 5000, SKIN_SEX_FEMALE},
	{131, 5000, SKIN_SEX_FEMALE},
	{198, 5000, SKIN_SEX_FEMALE},
	{201, 5000, SKIN_SEX_FEMALE},
	{207, 5000, SKIN_SEX_FEMALE},
	{193, 10000, SKIN_SEX_FEMALE},
	{226, 10000, SKIN_SEX_FEMALE},
	{237, 10000, SKIN_SEX_FEMALE},//10
	{192, 20000, SKIN_SEX_FEMALE},
	{214, 20000, SKIN_SEX_FEMALE},
	{55, 30000, SKIN_SEX_FEMALE},
	{56, 30000, SKIN_SEX_FEMALE},
	{90, 30000, SKIN_SEX_FEMALE},
	{151, 30000, SKIN_SEX_FEMALE},
	{152, 30000, SKIN_SEX_FEMALE},
	{169, 30000, SKIN_SEX_FEMALE},
	{9, 5000, SKIN_SEX_FEMALE},
	{10, 5000, SKIN_SEX_FEMALE},
	{13, 5000, SKIN_SEX_FEMALE},
	{69, 5000, SKIN_SEX_FEMALE},
	{190, 10000, SKIN_SEX_FEMALE},//60
	{195, 10000, SKIN_SEX_FEMALE},
	{238, 10000,SKIN_SEX_FEMALE},
 	{93, 60000, SKIN_SEX_FEMALE},
	{141, 60000, SKIN_SEX_FEMALE},
	{150, 60000, SKIN_SEX_FEMALE},

	{172, 60000, SKIN_SEX_FEMALE},
	{263, 60000, SKIN_SEX_FEMALE},
	{194, 70000, SKIN_SEX_FEMALE},
	{211, 70000, SKIN_SEX_FEMALE},
	{233, 70000, SKIN_SEX_FEMALE},//90
 	{11, 50000, SKIN_SEX_FEMALE},
	{12, 50000, SKIN_SEX_FEMALE},
 	{91, 160000, SKIN_SEX_FEMALE},
	{216, 160000, SKIN_SEX_FEMALE},//110
 	{219, 200000, SKIN_SEX_FEMALE},
    {296, 200000, SKIN_SEX_FEMALE},
	{1, 5000, SKIN_SEX_MALE},
	{2, 5000, SKIN_SEX_MALE},//20
	{3, 5000, SKIN_SEX_MALE},
	{8, 5000, SKIN_SEX_MALE},
	{32, 5000, SKIN_SEX_MALE},
	{72, 5000, SKIN_SEX_MALE},
	{94, 5000, SKIN_SEX_MALE},
	{128, 5000, SKIN_SEX_MALE},
	{133, 5000, SKIN_SEX_MALE},
	{23, 10000, SKIN_SEX_MALE},
	{33, 10000, SKIN_SEX_MALE},
	{34, 10000, SKIN_SEX_MALE},//30
	{48, 10000, SKIN_SEX_MALE},
	{73, 10000, SKIN_SEX_MALE},
	{96, 10000, SKIN_SEX_MALE},
	{161, 10000, SKIN_SEX_MALE},
	{202, 10000, SKIN_SEX_MALE},
	{206, 10000, SKIN_SEX_MALE},
	{4, 5000, SKIN_SEX_MALE},
	{5, 5000, SKIN_SEX_MALE},
	{6, 5000, SKIN_SEX_MALE},
	{7, 5000, SKIN_SEX_MALE},//40
	{15, 5000, SKIN_SEX_MALE},
	{183, 5000, SKIN_SEX_MALE},
	{14, 10000, SKIN_SEX_MALE},
	{35, 10000, SKIN_SEX_MALE},
	{36, 10000, SKIN_SEX_MALE},
	{156, 10000, SKIN_SEX_MALE},
	{21, 30000, SKIN_SEX_MALE},
	{22, 30000, SKIN_SEX_MALE},
	{24, 30000, SKIN_SEX_MALE},
	{25, 30000, SKIN_SEX_MALE},//50
	{28, 40000, SKIN_SEX_MALE},
	{66, 40000, SKIN_SEX_MALE},
	{67, 40000, SKIN_SEX_MALE},
	{176, 40000, SKIN_SEX_MALE},
	{293, 40000, SKIN_SEX_MALE},

	{57, 60000, SKIN_SEX_MALE},
	{59, 60000, SKIN_SEX_MALE},
	{100, 60000, SKIN_SEX_MALE},
	{170, 60000, SKIN_SEX_MALE},
	{181, 60000, SKIN_SEX_MALE},
	{185, 60000, SKIN_SEX_MALE},
	{241, 60000, SKIN_SEX_MALE},
	{242, 60000, SKIN_SEX_MALE},//70
	{98, 65000, SKIN_SEX_MALE},
	{112, 65000, SKIN_SEX_MALE},
	{126, 65000, SKIN_SEX_MALE},
	{247, 65000, SKIN_SEX_MALE},
	{254, 65000, SKIN_SEX_MALE},
	{269, 65000, SKIN_SEX_MALE},
	{290, 65000, SKIN_SEX_MALE},
	{117, 70000, SKIN_SEX_MALE},
	{188, 70000, SKIN_SEX_MALE},
	{240, 160000, SKIN_SEX_MALE},//80
	{249, 70000, SKIN_SEX_MALE},
	{250, 70000, SKIN_SEX_MALE},

	{19, 60000, SKIN_SEX_MALE},
	{20, 60000, SKIN_SEX_MALE},
	{180, 60000, SKIN_SEX_MALE},
	{222, 60000, SKIN_SEX_MALE},
	{297, 60000, SKIN_SEX_MALE},
	{46, 160000, SKIN_SEX_MALE},
	{111, 160000, SKIN_SEX_MALE},
	{171, 160000, SKIN_SEX_MALE},//100
	{189, 160000, SKIN_SEX_MALE},
	{223, 160000, SKIN_SEX_MALE},
	{147, 180000, SKIN_SEX_MALE},
	{187, 180000, SKIN_SEX_MALE},
	{186, 180000, SKIN_SEX_MALE},
	{208, 180000, SKIN_SEX_MALE},
	{228, 180000, SKIN_SEX_MALE},
	{294, 200000, SKIN_SEX_MALE},
    {17, 100000, SKIN_SEX_MALE},
    {296, 200000, SKIN_SEX_MALE}

};
//----------------------------
/*new gFractionSkin[28][12] = {
	{280,281,282,283,284,265,288,76,306,307,310,311}, //LSPD
	{286,163,164,165,166,141,0,0,0,0,0,0}, //FBI
	{287,61,179,191,0,0,0,0,0,0,0,0}, //ARMY SF
	{70,274,275,276,219,308,309,0,0,0,0,0}, //MEDIKI
	{223,124,113,214,0,0,0,0,0,0,0,0}, //LCN
	{120,123,169,186,0,0,0,0,0,0,0,0}, //YAKUZA
	{57,150,98,187,147,0,0,0,0,0,0,0}, //Meria
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{280,281,282,283,284,265,288,76,306,307,310,311}, //SFPD
	{59,172,189,240,0,0,0,0,0,0,0,0}, // Instructors
	{102,103,104,195,0,0,0,0,0,0,0,0}, //BALLAS
	{108,109,110,190,0,0,0,0,0,0,0,0}, //VAGOS
	{112,111,125,272,214,0,0,0,0,0,0,0}, //RM
	{105,106,107,269,270,271,56,0,0,0,0,0}, //GROOVE
	{187,186,60,170,188,141,211,0,0,0,0,0}, //SAN
	{114,115,116,41,0,0,0,0,0,0,0,0}, //Aztecas
	{173,174,175,226,0,0,0,0,0,0,0,0}, //RIFA
	{287,255,179,191,0,0,0,0,0,0,0,0}, //ARMY LV
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{280,281,282,283,284,265,288,76,306,307,310,311}, //LVPD
	{0,0,0,0,0,0,0,0,0,0,0,0}, //-
	{185,186,250,295,294,169,85,0,0,0,0,0}, //Hitman
	{60,47,217,67,240,170,29,55,0,0,0,0}, //Ñòðèòû
	{285,76,0,0,0,0,0,0,0,0,0,0}, //SWAT
	{17,216,227,287,265,70,12,295,0,0,0,0}, // Àäìèí. Ïðåçèäåíòà
	{98,171,172,189,0,0,0,0,0,0,0,0}, // Êàçèíî 4 äðàêîíà
	{98,171,172,189,0,0,0,0,0,0,0,0} // Êàçèíî êàëèãóëà
};*/
new gFractionSkin[28][12] = {
    {280,282,283,284,288,307,310,311,285,266,265,267}, //Los Santos Police Delapment
    {286,163,164,165,166,141,258,0,0,0,0,0}, //FBI
    {287,61,179,191,61,0,0,0,0,0,0}, //San Fierro Army
    {70,274,275,276,219,308,309,0,0,0,0,0}, //MEDIKI
    {223,124,113,214,127,126,0,0,0,0,0,0}, //La Costa Nostra
    {120,123,169,186,122,117,118,0,0,0,0,0}, //YAKUZA
    {57,150,187,147,163,164,0,0,0,0,0}, //CityHall
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {280,282,283,284,288,307,310,311,285,266,265,267}, //San Fierro Police Delapment
    {59,172,189,240,0,0,0,0,0,0,0,0}, // Instructors
    {102,103,104,21,195,0,0,0,0,0,0,0}, //BALLAS
    {108,109,110,47,190,0,0,0,0,0,0,0}, //VAGOS
    {112,111,125,272,214,0,0,0,0,0,0}, //RM
    {105,106,107,269,270,271,297,56,0,0,0,0}, //GROOVE
    {187,186,60,170,188,141,211,0,0,0,0,0}, //SAN
    {114,115,116,44,41,0,0,0,0,0,0,0}, //Aztecas
    {173,174,175,273,226,0,0,0,0,0,0,0}, //RIFA
    {287,61,179,191,61,0,0,0,0,0,0,0}, //Las Venturas Army
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {280,282,283,284,288,307,310,311,285,266,265,267}, //Las Venturas Police Delapment
    {0,0,0,0,0,0,0,0,0,0,0,0}, //none
    {185,186,250,295,294,169,85,0,0,0,0,0}, //Hitman
    {60,47,217,67,240,170,29,55,0,0,0,0}, //New Faction working on it...
    {280,285,76,0,0,0,0,0,0,0,0,0}, //S.W.A.T
    {17,216,227,287,265,70,12,295,0,0,0,0}, //Police Manager
    {98,171,172,189,0,0,0,0,0,0,0,0}, //Casino 1
    {98,171,172,189,0,0,0,0,0,0,0,0} //Casino 2
};
enum VIP_DATA
{
	vipSender[24],
	vipText[100],
	vipID,
	vipTime,
	vipNumber,
	bool:vipChek
}
new gVip[MAX_PLAYERS][VIP_DATA];
new gVipTime;
new Talk[][] = {
	{"IDLE_chat"},
	{"prtial_gngtlkA"},
	{"prtial_gngtlkB"},
	{"prtial_gngtlkD"},
	{"prtial_gngtlkE"},
	{"prtial_gngtlkF"},
	{"prtial_gngtlkG"}
};
new Anims[][] = {
	{"WALK_civi"},
	{"WALK_gang1"},
	{"WALK_gang2"},
	{"WALK_old"},
	{"WALK_fatold"},
	{"WALK_fat"},
	{"WOMAN_walknorm"},
	{"WOMAN_walkbusy"},
	{"WOMAN_walkpro"},
	{"WOMAN_walksexy"},
	{"Walk_Wuzi"}
};
new AntiSbiv[MAX_PLAYERS];
// ÑÈÑÒÅÌÀ ÍÀÐÊÎÒÈÊÎÂ.
#define MAX_PLANTS              500
#define MAX_DRUGS_PLAYER 		25
#define MAX_DROPPED_ITEMS 		300

#define ITEM_TYPE_SEED 			0
#define ITEM_TYPE_COCAINE 		1
#define ITEM_TYPE_CRACK 		2
#define ITEM_TYPE_HEROINE		3
#define ITEM_TYPE_LSD 			4
#define ITEM_TYPE_MET 			5
#define ITEM_TYPE_MARIJUANNA 	6


enum DrugsList {
	d_name[14],
	d_obj,
	d_price
}
new const Drugs[][DrugsList] = {
	{"Empty", 0, 0},
	{"Seed", 1578, 200},
	{"Cocaine", 1575, 200},
	{"Crack", 1576, 100},
	{"Heroin", 1575, 150},
	{"LSD", 1579, 200},
	{"Meth", 1577, 150},
	{"Marijuana", 1578, 50}
};

enum drEffects
{
    eDrunk,
    eGreenWeather,
    eRedWeather,
    eCrazyWeather,
    eRedWindWeather,
    eDynamicWeather,
    eRandomObjects,
    eSounds
}

new const DrugSoundsURL[][100] =
{
    "http://c.top4top.io/m_3004o62ua1.mp3",
    "http://c.top4top.io/m_3004o62ua1.mp3"
};

new const DrugObj[][] =
{
	{2907},
	{2905},
	{2905},
	{2906},
	{1607},
	{1608},
	{1609}
};

enum plant
{
	plant_id,
	plant_status,
	plant_prog,
	plant_owner,
	Float:plant_pos[3],
	plant_vw,
	plant_int,
	plant_obj_id,
	Text3D:plant_3DText
};
new PlantInfo[MAX_PLANTS][plant];

// ÎÁÜÅÊÒÛ:
enum DroppedItemsInfoEnum
{
	dr_id,
	dr_type,
	dr_item_id,
	dr_quantity,
	dr_time,
	dr_by,
	dr_obj,
	Float:dr_x,
	Float:dr_y,
	Float:dr_z,
	Float:dr_rx,
	Float:dr_ry,
	Float:dr_rz,
	Float:dr_a,
	dr_vw,
	dr_int,
	dr_object
}
new DItems[MAX_DROPPED_ITEMS][DroppedItemsInfoEnum];

new GunObjects[47][0] =
{
	{0},// Ïóñòàÿ ðóêà
	{331},// Êàñòåò
	{333},// Êëþøêà
	{334},// Ïîëèöåéñêàÿ äóáèíêà
	{335},// Íîæèê
	{336},// Áèòà
	{337},// Ëîïàòà
	{338},// Êèé
	{339},// Êàòàíà
	{341},// Áåíçîïèëà
	{321},// Ðîçîâûé äèëäî
	{322},// Ìàëåíüêèé áåëûé äèëäî
	{323},// Áîëüøîé áåëûé äèëäî
	{324},// Âèáðàòîð
	{325},// Öâåòû
	{326},// Òðîñòü
	{342},// Ãðàíàòà
	{343},// Äûìîâàÿ ãðàíàòà
	{344},// Ìîëîòîâ
	{0},
	{0},
	{0},
	{346},// Ïèñòîëåò
	{347},// Ïèñòîëåò ñ ãëóøèòåëåì
	{348},// Desert Eagle
	{349},// Äðîáîâèê
	{350},// Îáðåç
	{351},// Áîåâîé äðîáîâèê
	{352},// Óçè
	{353},// MP5
	{355},// AK47
	{356},// M4
	{372},// TEC
	{357},// Âèíòîâêà
	{358},// Ñíàéïåðñêàÿ âèíòîâêà
	{359},// Áàçóêà
	{360},// Ñàìîíîâîäÿùàÿ áàçóêà
	{361},// Îãíåì¸ò
	{362},// Ìèíèãàí
	{363},// Âçðûâ÷àòêà
	{364},// Äåòîíàòîð (ïóëüò)
	{365},// Áàëîí÷èê ñ êðàñêîé
	{366},// Îãíåòóøèòåëü
	{367},// Ôîòîàïïàðàò
	{368},// Î÷êè íî÷íîãî âèäåíèÿ
	{368},// Î÷êè
	{371}// Ïàðàøþò
};
new Indicators_xqz[MAX_VEHICLES][4];
static const GetPlayerFracName[29][32] = {"Unknow", "LSPD", "FBI", "Army Aircraft carrier", "MCLS", "La Cosa Nostra", "Yakuza", "City Hall", "Closed", "Closed", "SFPD", "Instructors", "Ballas Gang", "Los Santos Vagos", "Russian Mafia", "Grove Street", "Sa News","Varios Los Varios Los Aztecas", "Rifa Gang", "Army Area 51", "Closed", "LVPD", "Closed", "Hitman", "Street racers", "SWAT", "Administration of the President", "Casino Four Dragons", "Casino Caligulas"};
// ÐÀÍÃÈ ÔÐÀÊÖÈÉ:
static const stock fRankName[28][15][40];
static stock gFractionRank[28][4];
//
new weapon_sprit_select[MAX_PLAYERS][13];
// ÒÞÍÈÍÃ
new cTune[MAX_PLAYERS][2][15];
new cColor[MAX_PLAYERS][2][2];

new Text:TuneBox;
new Text:TuneComponent;
new Text:TuneCost;
new PlayerText:TuneTypeShow[MAX_PLAYERS];
new PlayerText:TuneComponentShow[MAX_PLAYERS];
new PlayerText:TuneCostShow[MAX_PLAYERS];
new Text:TuneBack;
new Text:TuneBuy;
new Text:TuneArrow[2];

new TuneColor[MAX_PLAYERS][2];
new ChangeTuneDetail[MAX_PLAYERS];
new TuneID[MAX_PLAYERS];
new TuneShop[MAX_PLAYERS];

new Nitro[3][] = {
{1009, 100,"Nitro 2X"},
{1008, 200,"Nitro 5X"},
{1010, 300,"Nitro 10X"}
};

new Wheels[16][] = {
{1073, 50,"Shadow"},
{1074, 70,"Mega"},
{1075, 55,"Rimshine"},
{1076, 60,"Wires"},
{1077, 80,"Classic"},
{1078, 90,"Twist"},
{1079, 85,"Cutter"},
{1080, 100,"Switch"},
{1081, 65,"Grove Street"},
{1082, 110,"Import"},
{1083, 150,"Dollar"},
{1084, 50,"Trance"},
{1085, 65,"Atomic"},
{1096, 94,"Ahab"},
{1097, 140,"Virtual"},
{1098, 120,"Access"}
};

new Exhaust[32][] = {
{1018, 100,"Upswept"},
{1019, 150,"Twin"},
{1020, 180,"Large"},
{1021, 190,"Medium"},
{1022, 200,"Small"},
{1028, 200,"Alien"}, // Sultan
{1029, 200,"X-Flow"},
{1034, 200,"Alien"}, // Elegy
{1037, 200,"X-Flow"},
{1043, 200,"Slamin"}, // Broadway
{1044, 200,"Chrome"},
{1046, 200,"Alien"}, // Flash
{1045, 200,"X-Flow"},
{1064, 200,"Alien"}, // Stratum
{1059, 200,"X-Flow"},
{1065, 200,"Alien"}, // Jester
{1066, 200,"X-Flow"},
{1092, 200,"Alien"}, // Uranus
{1089, 200,"X-Flow"},
{1126, 250,"Chrome"}, // Remington
{1127, 200,"Slamin"},
{1129, 250,"Chrome"}, // Savanna
{1132, 200,"Slamin"},
{1104, 250,"Chrome"}, // Blade
{1105, 200,"Slamin"},
{1113, 250,"Chrome"}, // Slamvan
{1114, 200,"Slamin"},
{1136, 250,"Chrome"}, // Tornado
{1135, 200,"Slamin"},
{1018, 100,"Upswept"}, // Buccaneer, Stafford, Club, Cadrona, Picador
{1020, 180,"Large"},
{1021, 190,"Medium"} // Cadrona
};

new Sideskirt[20][] = {
{1026, 1027, "Alien"}, // Sultan
{1030, 1031, "X-Flow"},
{1036, 1040, "Alien"}, // Elegy
{1039, 1041, "X-Flow"},
{1042, 1049, "Chrome"}, // Broadway
{1047, 1051, "Alien"}, // Flash
{1048, 1052, "X-Flow"},
{1056, 1062, "Alien"}, // Stratum
{1057, 1063, "X-Flow"},
{1069, 1071, "Alien"}, // Jester
{1070, 1072, "X-Flow"},
{1090, 1094, "Alien"}, // Uranus
{1093, 1095, "X-Flow"},
{1101, 1122, "Chrome Flames"}, // Remington
{1106, 1124, "Chrome Arches"},
{1102, 1133, "Chrome Strip"}, // Savanna
{1107, 1108, "Chrome Strip"}, // Blade
{1118, 1120, "Chrome Trim"}, // Slamvan
{1119, 1121, "Wheelcovers"},
{1134, 1137, "Chrome Strip"} // Tornado
};

new FrontBumper[23][] = {
{1169, "Alien"}, // Sultan
{1170, "X-Flow"},
{1171, "Alien"}, // Elegy
{1172, "X-Flow"},
{1174, "Chrome"}, // Broadway
{1175, "Slamin"},
{1153, "Alien"}, // Flash
{1152, "X-Flow"},
{1155, "Alien"}, // Stratum
{1157, "X-Flow"},
{1160, "Alien"}, // Jester
{1173, "X-Flow"},
{1166, "Alien"}, // Uranus
{1165, "X-Flow"},
{1179, "Chrome"}, // Remington
{1185, "Slamin"},
{1189, "Chrome"}, // Savanna
{1188, "Slamin"},
{1182, "Chrome"}, // Blade
{1181, "Slamin"},
{1117, "Chrome"}, // Slamvan
{1191, "Chrome"}, // Tornado
{1190, "Slamin"}
};

new RearBumper[22][] = {
{1141, "Alien"}, // Sultan
{1140, "X-Flow"},
{1149, "Alien"}, // Elegy
{1148, "X-Flow"},
{1176, "Chrome"}, // Broadway
{1177, "Slamin"},
{1150, "Alien"}, // Flash
{1151, "X-Flow"},
{1154, "Alien"}, // Stratum
{1156, "X-Flow"},
{1159, "Alien"}, // Jester
{1161, "X-Flow"},
{1168, "Alien"}, // Uranus
{1167, "X-Flow"},
{1180, "Chrome"}, // Remington
{1178, "Slamin"},
{1187, "Chrome"}, // Savanna
{1186, "Slamin"},
{1184, "Chrome"}, // Blade
{1183, "Slamin"},
{1192, "Chrome"}, // Tornado
{1193, "X-Flow"}
};

new Roof[16][] = {
{1032, "Alien"}, // Sultan
{1033, "X-Flow"},
{1038, "Alien"}, // Elegy
{1035, "X-Flow"},
{1054, "Alien"}, // Flash
{1053, "X-Flow"},
{1055, "Alien"}, // Stratum
{1061, "X-Flow"},
{1067, "Alien"}, // Jester
{1068, "X-Flow"},
{1088, "Alien"}, // Uranus
{1091, "X-Flow"},
{1130, "Hardtop"}, // Savanna
{1131, "Softtop"},
{1103, "Covertible"}, // Blade
{1128, "Vinyl Hardtop"}
};

new Spoiler[12][] = {
{1138, "Alien"}, // Sultan
{1139, "X-Flow"},
{1147, "Alien"}, // Elegy
{1146, "X-Flow"},
{1149, "Alien"}, // Flash
{1150, "X-Flow"},
{1058, "Alien"}, // Stratum
{1060, "X-Flow"},
{1162, "Alien"}, // Jester
{1158, "X-Flow"},
{1164, "Alien"}, // Uranus
{1163, "X-Flow"}
};

new Vents[2][] = {
{1142, 1143,"Oval Vents"},
{1144, 1145,"Square Vents"}
};

new Lamps[2][] = {
{1013, 900,"Round Fog"},
{1024, 800,"Square Fog"}
};

new Hood[4][] = {
{1004, "Champ Scoop"},
{1005, "Fury Scoop"},
{1012, "Worx Scoop"},
{1011, "Race Scoop"}
};
// ÊÎÍÂÎÉ
new FollowBy[MAX_PLAYERS];
new TimerForPlayer[MAX_PLAYERS];
//
new PlayerText:Captcha[12], TextArray[11] = "1234567890"; // ÊËÞ× ÁÅÇÎÏÀÑÍÎÑÒÈ
new shield[MAX_PLAYERS];
// ÏÎÑÒÐÀÍÈ×ÍÛÉ ÂÂÎÄ:
new page_identifier[MAX_PLAYERS][15], page_number[MAX_PLAYERS];
// ÑÈÑ-ÌÀ Ñ×ÅÒÎÂ Â ÁÀÍÊÅ:
new TOTALBANK;
//new TOTALSETTINGS;
enum acINFO
{
    ID,
    NUMBER,
    OWNER[MAX_PLAYER_NAME],
    BALANCE,
    PASSWORD,
    gOWNER[MAX_PLAYER_NAME],
    gBALANCE
};
new _INFO[MAX_PLAYERS][acINFO][3];
new _PLAYERBANK[MAX_PLAYERS];
new _INFONAME[MAX_PLAYERS][3][20];
// ÑÈÑÒÅÌÀ ØËÀÃÁÀÓÌÎÂ:
#define MAX_OBJECT_MOVED 25
enum object_moved_data
{
	moved_id,
	moved_modelid,
	Float:movedPosX,
	Float:movedPosY,
	Float:movedPosZ,
	Float:movedPosRotationX,
	Float:movedPosRotationY,
	Float:movedPosRotationZ,
	bool:status_moved
}
static stock const moved_info[MAX_OBJECT_MOVED][object_moved_data] ={
	{-1,968,341.8559900,1795.9530000,18.1280000,0.0,90.0,33.5562700,false},//0
	{-1,968,127.7332,1964.9986,19.3235,0.0000,90.1000,0.0000,false},//1
	{-1,968,142.7588,1964.9564,19.1530,0.0000,-89.1999,0.0000,false},//2
	{-1,968,-1548.1198, 518.3745, 6.8495, 0.00, -89.49, 84.29,false},//3
	{-1,4100,-1527.7214,482.7460,10.6420,0.0000,0.0000,-38.3000,false},//4
	{-1,4100,-1527.7214,482.7460,7.8596,0.0000,0.0000,-38.3000,false},//5
	{-1,19353,1843.8203,-891.0100,1085.330,0.0000,-90.0000,0.0000,false},//6
	{-1,968,1544.69995117,-1630.80004883,13.10000038,0.0,270.0,270.0,false},//7
	{-1,971,1588.6079,-1638.0811,14.4063,0.0000,0.0000,-178.8999,false},//8
	{-1,1495,368.9363,160.8361,1024.8696,0.0000,0.0000,93.7999,false},//9
	{-1,1495,368.8348,162.3330,1024.8691,0.0000,0.0000,90.0000,false},//10
	{-1,971,-1626.8281,688.3017,7.9801,0.0000,0.0000,0.0000,false},//11
	{-1,971,-1635.6804,688.3226,7.9901,0.0,0.0,0.0,false},//12
	{-1,968, -1701.4432, 687.6422, 24.6105, 0.00, 88.70, -90.29,false},//13
	{-1,968,-1572.1890, 658.7903, 6.8367,0.00000000,90.00000000,90.18000000,false},//14
	{-1,968,-2436.8767, 495.4464, 29.7209,0.0, 90.0, 24.960,false},//15
	{-1,968,2238.1851, 2450.3584, 10.6600,0.00000000, 90.00000000, 89.76000000,false},//16
	{-1,968,54.0804,-1528.7838,4.8211,0.0000,89.1000,80.6999,false},//17
	{-1,968,53.5292,-1534.7294,4.9000,0.0000,88.8999,261.9964,false},//18
	{-1,968,1792.1484,823.4375,10.5000,0.0000,89.5951,179.9945,false},//19
	{-1,968,1802.5019,823.4698,10.4949,0.0000,90.2999,0.0000,false},//20
	{-1,968,2350.7351,2423.8439,10.3403,-2.2000,-89.9999,0.0000,false},//23
	//{-1,968,-2057.50000000,-100.98999786,35.10000229,0.00000000,270.00000000,270.00000000,false},//24
	//{-1,971,-2044.09997559,-102.66002655,36.97000122,0.00000000,0.00000000,0.00000000,false},//28
	{-1,19313,134.9007,1941.4548,21.1314,0.0000,0.0000,0.0000,false},//29
	{-1,19313,285.8021,1820.1352,19.4806,0.0000,0.0000,-90.0,false},//30
	{-1,8674,96.9028,1920.4405,16.3750,0.0000,-90.0000,-90.0000}//31
};

static stock Float:moved_pos_object[MAX_OBJECT_MOVED][6]={
 	{341.8559900,1795.9530000,18.1290000,0.0000000,0.0000000,33.5562700},//0
	{127.7332,1964.9986,19.3135,0.0000,0.0,0.0},//1
	{142.7588,1964.9564,19.1130,0.0000,0.0,0.0000},//2
	{-1548.1198, 518.3745, 6.8496,0.00, -0.3899, 84.29},//3
	{-1527.7214,482.7460,13.6020,0.0000,0.0000,-38.3000},//4
	{-1527.7214,482.7460,4.9395,0.0000,0.0000,-38.3000},//5
	{1847.112,-891.010,1085.281,0.000,-90.000,0.000},//6
	{1544.69995117,-1630.80004883,13.10000039,0.00000000,0.00000000,270.00000000},//7
	{1588.6079,-1638.0811,7.6763,0.0000,0.0000,-178.8999},//8
	{369.0053,159.7984,1024.8696,0.0000,0.0000,93.7999},//9
	{368.8348,163.3530,1024.8691,0.0000,0.0000,90.0000},//10
	{-1626.8281,688.3017,1.8,0.0000,0.0000,0.0000},//11
	{-1635.6804,688.3226,1.8,0.0000,0.0000,0.0000},//12
	{-1701.4432, 687.6422, 24.6105,0.00, 0.0, -90.29},//13
	{-1572.1890, 658.7903, 6.8367,0.00000000,0.00000000,90.18000000},//14
	{-2436.8767, 495.4464, 29.7209,0.00000000, 0.00000000, 24.96000000},//15
	{2238.1851, 2450.3584, 10.6600,0.00000000, 0.00000000, 89.76000000},//16
	{54.0804,-1528.7838,4.8211,0.0000,0.0,80.6999},//17
	{53.5292,-1534.7294,4.9000,0.0000,0.0,261.9964},//18
	{1792.1484,823.4375,10.5000,0.0000,0.0,179.9945},//19 ÁËÎÊ ÏÎÑÒÛ
 	{1802.5019,823.4698,10.4949,0.0000,0.0,0.0000},//20
	{2350.7351,2423.8439,10.3407,0.0,0.0,0.0000},//23 (!) ËÂÏÄ
	//{-2057.50000000,-100.98999786,35.10000229,0.00000000,0.00000000,270.00000000},//24 ÀÂÒÎØÊÎËÀ
	//{-2051.9936,-102.6504,44.9937,0.0000,-90.0000,0.0000},//28 àâòîøêîëà
	{121.7608,1941.4548,21.1314,0.0000,0.0000,0.0000},//29
	{285.9226,1833.8746,19.4806,0.0000,0.0000,-90.0},//30
	{96.8924,1917.3903,16.3752,0.0000,-90.0000,-90.0000}//31
};
new Iterator: Admin<MAX_PLAYERS>;
new Iterator: valid_vehicles<MAX_VEHICLES>;
// RACE
new PlayersInRace [1 char];
new Iterator: RacersList<MAX_PLAYERS>;
new PlayerScore[MAX_PLAYERS char];
new PlayerPosition[MAX_PLAYERS char];
new PlayerWinners[1 char];
new race_str [ 800 ] ;
new racePickup [ 4 ],raceTime = 1,RaceStarting[3] = 0,typeRace;
new PlayerText:Race[10][MAX_PLAYERS];

static const Float:spawn_car [2] [40] [4] =
{
	{
		{2091.895263,-2520.565185,13.433180,37.902584}, {2094.764160,-2518.331298,13.433194,37.902797}, {2097.488037,-2516.210937,13.433210,37.903057}, {2100.653076,-2513.746093,13.433222,37.903259}, {2104.851806,-2510.477783,13.433242,37.903450}, {2107.984619,-2507.750732,13.433382,38.896286},
		{2111.420898,-2505.282226,13.433529,44.362625}, {2119.425537,-2518.171386,13.437009,21.364038}, {2114.278076,-2520.184326,13.437017,21.363973}, {2109.155517,-2523.806152,13.439718,21.364025}, {2103.543212,-2526.568603,13.439425,21.364072}, {2098.313232,-2530.997314,13.438414,21.364183},
		{2097.627441,-2540.054931,13.440947,21.364278}, {2101.975830,-2539.262207,13.440667,21.364345}, {2105.375244,-2538.512207,13.440439,21.364418}, {2108.870117,-2537.145019,13.440454,21.364492}, {2113.717041,-2535.249755,13.440456,21.364530}, {2118.462158,-2533.393798,13.440476,21.364578},
		{2123.893066,-2544.668457,13.433508,3.160697}, {2119.953613,-2544.885742,13.435308,3.160687}, {2116.225341,-2547.537109,13.434331,3.160625}, {2111.804199,-2547.658203,13.434389,3.160687}, {2105.874023,-2549.084472,13.434020,3.160563}, {2100.804199,-2549.364013,13.434053,3.160625},
		{2093.775634,-2556.532958,13.431475,3.160563}, {2099.526367,-2558.672119,13.430426,3.160625}, {2103.135009,-2558.473388,13.886198,3.160563}, {2111.609130,-2558.004394,13.886105,3.160563}, {2116.906005,-2557.713134,13.886048,3.160563}, {2113.164550,-2571.723876,13.441659,321.873443},
		{2106.754638,-2569.824951,13.825028,321.873382}, {2101.283691,-2568.904785,13.956215,321.873382}, {2094.681884,-2563.722900,13.956216,321.873382}, {2088.453857,-2571.658203,13.952000,321.873382}, {2091.333496,-2576.226562,13.951242,321.873382}, {2094.020751,-2580.314453,13.950592,321.873382},
		{2097.216552,-2589.722900,14.985203,321.873687}, {2077.217773,-2598.296386,13.440001,268.024841}, {2076.595947,-2592.791503,13.422363,268.021179}, {2074.781738,-2584.226318,13.421342,268.021179}
	},
	{
	   	{672.2044,2103.3127,16.2470,177.8561}, {668.3824,2102.3796,16.2030,177.0146}, {664.0132,2102.1299,16.2054,179.0928}, {659.5983,2102.0122,16.1971,178.9829}, {655.3647,2101.7991,16.2386,180.9504}, {650.8540,2101.2305,16.2347,183.3866},
		{650.2929,2111.7456,17.0781,182.7519}, {654.9857,2111.5193,16.9867,179.6493}, {659.1634,2111.3586,16.9531,180.4426}, {663.5944,2111.7275,16.9409,181.3633}, {666.9539,2111.4771,16.9481,180.1949}, {670.0529,2111.6252,16.9527,179.8351},
		{674.6517,2111.3140,16.8065,177.6580}, {674.8973,2119.1531,17.5570,177.8308}, {670.7462,2119.1599,17.5815,178.6785}, {667.4767,2118.9365,17.4795,180.1411}, {663.5541,2118.9109,17.5459,179.1588}, {659.3839,2118.8687,17.5921,180.8173},
		{656.5150,2118.7117,17.5908,181.3367}, {653.0975,2118.6082,17.6121,179.7124}, {653.1479,2124.6274,18.1142,179.5998}, {657.8023,2124.9504,18.0880,180.6734}, {661.5770,2124.6272,18.0182,180.6442}, {664.9161,2124.1855,18.0260,181.8698},
		{668.1638,2123.9641,17.9031,179.0754}, {671.7554,2123.6523,17.8501,176.6323}, {676.2199,2123.3462,17.8528,175.2501}, {676.4521,2131.1335,18.5533,178.2869}, {673.6086,2131.8088,18.5686,177.4951}, {669.5196,2131.8982,18.6098,177.0708},
		{666.6295,2131.7405,18.6057,177.4690}, {663.1808,2131.7803,18.6541,180.2207}, {660.2335,2131.7568,18.7080,180.0066}, {656.9416,2131.7266,18.7175,180.9920}, {654.2312,2131.5225,18.6418,184.7503}, {649.9846,2131.2620,18.7229,183.1566},
		{650.8186,2137.2646,19.0700,180.7624}, {655.8868,2137.0403,19.0259,181.0888}, {663.0311,2137.3953,19.0177,180.3358}, {672.3614,2137.4355,19.0051,179.1938}
	}
};
static const Float:los_santos_race [2] [52] [3] =
{
	{
		{2068.331542,-2486.419189,13.384812}, {1999.593872,-2443.603515,13.390092}, {1975.960693,-2339.038574,13.389539}, {1974.702636,-2264.686767,13.389196}, {1971.640136,-2207.681640,13.388321}, {1917.494628,-2164.439453,13.225696}, {1835.689331,-2164.458984,13.225584}, {1690.865234,-2165.281250,16.534917}, {1561.424682,-2102.565917,33.548648}, {1534.903198,-2038.627441,30.559921},
		{1531.514648,-1925.844116,15.948495}, {1423.284545,-1871.391845,13.225830},
		{1333.105590,-1853.432861,13.231085}, {1198.192626,-1852.575561,13.236808}, {1072.954833,-1851.229614,13.233303}, {1003.930236,-1793.053222,13.893136}, {860.259521,-1771.445312,13.225211}, {703.481445,-1745.561035,13.644369}, {512.652648,-1713.879150,11.951225}, {322.898925,-1700.012817,6.351512}, {181.994613,-1590.681640,13.611264}, {114.987060,-1483.881469,15.716488},
		{183.274917,-1392.328613,47.316024}, {235.005859,-1312.519897,54.946090}, {271.210632,-1238.301635,73.749771}, {352.619964,-1172.180297,76.992782}, {373.219757,-1108.971069,74.678642}, {570.886535,-1040.667602,72.893234}, {681.720703,-987.671081,51.723533}, {636.893554,-893.615478,36.238845}, {614.952941,-761.974304,16.934080}, {695.729675,-834.909667,42.609966},
		{765.860534,-907.398254,43.168628}, {793.615112,-1049.253906,24.705514}, {796.494628,-1348.491088,13.225209},
		{773.605712,-1551.007446,13.219964}, {829.991271,-1606.236572,13.225358},{915.885864,-1572.501342,13.225023}, {1005.193664,-1573.730346,13.225335},
		{1061.528442,-1571.466918,13.002437}, {1132.829345,-1571.714599,12.952020}, {1149.645874,-1663.695434,13.404994}, {1170.087524,-1745.639404,13.021311}, {1172.646362,-1850.471069,13.023327}, {1315.715576,-1855.433837,13.006551}, {1410.950927,-1873.858398,13.006618}, {1532.403076,-1980.743652,22.644147}, {1568.543945,-2112.455322,32.572132}, {1665.617553,-2161.764160,19.083341},
		{1798.388549,-2167.987548,13.006500}, {1917.365234,-2167.838378,13.006553}, {1963.080810,-2218.701660,15.749450}
	},
	{
		{662.1136,2010.5905,8.3228}, {657.7353,1872.6897,5.1959}, {586.1057,1714.4578,7.7091}, {418.1154,1599.8905,17.4339}, {297.1648,1265.8134,14.1913}, {177.7255,1147.1879,13.9948}, {102.8310,1198.1205,18.1525}, {-70.6931,1198.8982,19.3593}, {-267.0687,1197.7285,19.3208}, {-285.8788,1146.9034,19.3216},
		{-346.1357,1113.2706,19.3208}, {-278.4934,1053.4348,19.3162},
		{-196.7210,1005.2441,19.2968}, {-287.8996,812.8679,14.2512}, {-118.4552,813.8665,20.2630}, {-280.5372,686.1677,18.6626}, {-135.5672,613.9775,1.8051}, {-157.0415,408.2657,11.8052}, {-233.1215,167.2598,4.6665}, {-259.8236,-270.1633,1.1824}, {-639.3168,-243.3178,63.0318}, {-948.3567,-242.7244,37.5659},
		{-1040.6711,-452.4373,35.6779}, {-1205.6786,-742.9162,59.9608}, {-1456.2135,-818.1087,73.2588}, {-1761.9790,-692.2874,25.2470}, {-1786.9010,-580.0756,16.0630}, {-1912.3389,-580.1558,24.1691}, {-2169.7244,-479.2166,45.1492}, {-2256.6597,-146.2213,34.8988}, {-2371.9287,502.8568,29.2342}, {-2386.4546,622.7631,32.2222},
		{-2397.6143,708.7435,34.7408}, {-2528.8259,707.2769,27.5800}, {-2751.2197,715.6112,40.8544},
		{-2762.5669,808.2616,52.5233}, {-2807.7095,892.2084,43.6334},{-2881.6519,1074.9255,30.5571}, {-2706.0959,1290.5035,6.7805},
		{-2455.3774,1332.6726,9.8476}, {-2488.4287,1190.7368,37.1849}, {-2675.3164,1330.7024,55.1568}, {-2675.8245,1619.2803,64.8538}, {-2676.9116,2083.7742,55.1786}, {-2737.1616,2354.3936,71.7937}, {-2345.4705,2635.2644,53.5232}, {-1944.3154,2472.3635,54.5395}, {-1705.3647,2151.8735,17.8462}, {-1566.9766,1912.0879,24.0401},
		{-1396.4218,1852.4491,36.0523}, {-1028.8517,1853.8967,59.9197}, {-873.0335,1992.7505,60.0198}
	}
};
//
new BaseStarting[2] = 0;
new BasePic[3];
new PlayersInBase[1 char];
new Iterator: BaseList<MAX_PLAYERS>;
new AreaBase;
//
new Float:posCam[MAX_PLAYERS][3], Float:Degree[MAX_PLAYERS];
static const Float: Radius = 1.7;
static const Float: Height = 1.15;
new engine,light,alarm,doorss,bonnet,boot,objective;
/*****************************[Êàçèíî]*****************************************/
new barkazino[2];
new enterpickup[2];
new exitpickup[2];
new dresspickup[2];

new StartDuty[MAX_PLAYERS];
new UsingCursor[MAX_PLAYERS];
new CroupierGame[MAX_PLAYERS];
new CroupierTable[MAX_PLAYERS];

new DiceTable[MAX_PLAYERS];
new DiceGamer[MAX_PLAYERS];
new ChooseBet[MAX_PLAYERS];
new Glasses[MAX_PLAYERS];

new StartDice[MAX_DICETABLES];
new TimerDice[MAX_DICETABLES];

new RouleTable[MAX_PLAYERS];
new RouleGamer[MAX_PLAYERS];
new RouleHorizont[MAX_PLAYERS];
new	RouleVertikal[MAX_PLAYERS];
new RouleChip[MAX_PLAYERS];
new RouleNumber[MAX_PLAYERS][14];
new RouleBet[MAX_PLAYERS];
new Casino[MAX_PLAYERS];

new TimerRoule[MAX_ROULETABLES];
new TimerRouleGame[MAX_ROULETABLES];
new StartRoule[MAX_ROULETABLES];
new RouleWheel[MAX_ROULETABLES];

new BlackJackTable[MAX_PLAYERS];
new BlackJackGamer[MAX_PLAYERS];
new BlackJackPoints[MAX_PLAYERS];
new BlackJackCards[MAX_PLAYERS];
new BlackJackTime[MAX_PLAYERS];
new BlackJackBet[MAX_PLAYERS];
new BlackJackDoubleUse[MAX_PLAYERS];

new StartBlackJack[MAX_BLACKJACKTABLES];
new TimerBlackJack[MAX_BLACKJACKTABLES];

enum dInfo
{
	dGamer[5],
	dBet,
	dBank,
	dTime,
	dCroupier,
};
new DiceTableInfo[MAX_DICETABLES][dInfo];

enum rInfo
{
	rGamer[5],
	rTime,
	rCroupier,
}
new RouleTableInfo[MAX_ROULETABLES][rInfo];

enum jInfo
{
	jGamer[2],
	jCroupier,
}
new BlackJackTableInfo[MAX_BLACKJACKTABLES][jInfo];
//
#define MAX_REALTORS 10
enum realtorsInfo
{
	bID,
	bPrice,
	bOwner[MAX_PLAYER_NAME],
	Float:bX,
	Float:bY,
	Float:bZ,
	Float:bAngle, // Óãîë ïîâîðîòà åáàñîñà ïîñëå âûõîäà èç áèçíåñà
	bRentDays,
	bPickup,
	Text3D:bText,
	bMapIcon,
	bBalance,
};
new RI[MAX_REALTORS][realtorsInfo];
new TOTALREALTORS = 0;
new RealtorPickupExit;
//
new Text:DiceBox[2];
new Text:DiceSetBet;
new Text:DiceThrow;
new Text:DiceExit;
new Text:DiceTitle;
new Text:DiceSlot[MAX_DICETABLES][5];
new Text:BetGamer[MAX_DICETABLES][5];
new Text:DiceBet;
new Text:DiceBank;
new Text:DiceMoney;
new Text:DiceBetShow[MAX_DICETABLES];
new Text:DiceBankShow[MAX_DICETABLES];
new Text:DiceMoneyShow[MAX_DICETABLES][5];

new Text:RouleBox;
new Text:RouleBorder[2];
new Text:RouleGamersTitle;
new Text:RouleNumberTitle;
new Text:RouleBetTitle;
new Text:RouleGamerShow[MAX_ROULETABLES][5];
new Text:RouleNumberShow[MAX_ROULETABLES][5];
new Text:RouleBetShow[MAX_ROULETABLES][5];

new Text:BlackJackBox[7];
new Text:BlackJackBorder[4];
new Text:BlackJackTitle;
new Text:BlackJackDealerTitle;
new Text:BlackJackChip[2];
new Text:BlackJackCardShow[MAX_BLACKJACKTABLES][15];
new Text:BlackJackGamerShow[MAX_BLACKJACKTABLES][2];
new Text:BlackJackBetShow[MAX_BLACKJACKTABLES][2];
new Text:BlackJackPointsShow[MAX_BLACKJACKTABLES][3];
new Text:BlackJackSetBet;
new Text:BlackJackHit;
new Text:BlackJackDouble;
new Text:BlackJackExit;

new Float:DiceTables[8][4] = {
{1943.9890137,1014.8880005,991.9799805, 270.0},
{1943.9870605,1020.7519531,991.9799805, 270.0},
{1943.9899902,1026.8159180,991.9799805, 270.0},
{1943.9370117,1008.9240112,991.9799805, 270.0},
{2218.4877930,1610.2979736,1005.6909790, 0.0},
{2218.4870605,1605.9010010,1005.6909790, 0.0},
{2218.4870605,1601.4718018,1005.6909790, 0.0},
{2218.4877930,1597.2750244,1005.6909790, 0.0}
};

new Float:RouleTables[12][4] = {
{1963.7109,1010.1172,992.5078, 0.0},
{1959.3984,1010.1172,992.5078, 0.0},
{1963.7109,1025.6953,992.5078, 0.0},
{1959.3984,1025.6953,992.5078, 0.0},
{2241.4453,1619.6094,1006.2266, 90.0},
{2241.4453,1614.5547,1006.2266, 90.0},
{2230.5703,1619.6563,1006.2266, 90.0},
{2230.5703,1614.5938,1006.2266, 90.0},
{2242.3672,1594.7578,1006.2266, 90.0},
{2242.3672,1589.1875,1006.2266, 90.0},
{2230.5703,1594.7578,1006.2266, 90.0},
{2230.5703,1589.1875,1006.2266, 90.0}
};

new Float:RouleCamera[12][6] = {
{1962.044311, 1009.729675, 993.793029, 1965.579833, 1009.719299, 990.257507},
{1957.647094, 1009.627197, 994.001586, 1961.182617, 1009.649047, 990.466064},
{1961.970336, 1025.268188, 993.973266, 1965.505859, 1025.264282, 990.437744},
{1957.637329, 1025.210815, 993.973266, 1961.172851, 1025.226196, 990.437744},
{2241.942382, 1617.835571, 1007.803283, 2241.907714, 1621.370971, 1004.267761},
{2241.867919, 1612.894653, 1007.588745, 2241.878417, 1616.430175, 1004.053222},
{2230.994628, 1618.009643, 1007.513671, 2230.979248, 1621.545166, 1003.978149},
{2230.984619, 1612.919921, 1007.513671, 2231.014404, 1616.455322, 1003.978149},
{2242.714843, 1593.072998, 1007.555175, 2242.731689, 1596.608520, 1004.019653},
{2242.875000, 1587.452026, 1007.645446, 2242.885498, 1590.987548, 1004.109924},
{2230.982177, 1592.994873, 1007.704833, 2230.986083, 1596.530395, 1004.169311},
{2231.003417, 1587.479492, 1007.599487, 2231.013916, 1591.015014, 1004.063964}
};

new Float:RouleHorizontCoords[25][1] = {
{0.595999},
{0.442999},
{0.366499},
{0.289999},
{0.213499},
{0.136999},
{0.060499},
{-0.016000},
{-0.092500},
{-0.168999},
{-0.245499},
{-0.321999},
{-0.398499},
{-0.474999},
{-0.551499},
{-0.627999},
{-0.704499},
{-0.780999},
{-0.857499},
{-0.933999},
{-1.010499},
{-1.086999},
{-1.163499},
{-1.239999},
{-1.392999}
};

new Float:RouleVertikalCoords[7][1] = {
{-0.658},
{-0.416},
{-0.174},
{-0.053},
{0.068},
{0.189},
{0.310}
};

new RouleValues[25][] = {
{"0;0;0;0;0;0;0"},
{"0;0;1;1,2;2;2,3;3"},
{"1-18;0;1,4;1,4,2,5;2,5;2,5,3,6;3,6"},
{"0;0;4;4,5;5;5,6;6"},
{"0;1-12;4,7;4,7,5,8;5,8;5,8,6,9;6,9"},
{"0;0;7;7,8;8;8,9;9"},
{"Even;0;7,10;7,10,8,11;8,11;8,11,9,12;9,12"},
{"0;0;10;10,11;11;11,12;12"},
{"0;0;10,13;10,13,11,14;11,14;11,14,12,15;12,15"},
{"0;0;13;13,14;14;14,15;15"},
{"Red;0;13,16;13,16,14,17;14,17;14,17,15,18;15,18"},
{"0;0;16;16,17;17;17,18;18"},
{"0;2-12;16,19;16,19,17,20;17,20;17,20,18,21;18,21"},
{"0;0;19;19,20;20;20,21;21"},
{"Black;0;19,22;19,22,20,23;20,23;20,23,21,24;21,24"},
{"0;0;22;22,23;23;23,24;24"},
{"0;0;22,25;22,25,23,26;23,26;23,26,24,27;24,27"},
{"0;0;25;25,26;26;26,27;27"},
{"Odd;0;25,28;25,28,26,29;26,29;26,29,27,30;27,30"},
{"0;0;28;28,29;29;29,30;30"},
{"0;3-12;28,31;28,31,29,32;29,32;29,32,30,33;30,33"},
{"0;0;31;31,32;32;32,33;33"},
{"19-36;0;31,34;31,34,32,35;32,35;32,35,33,36;33,36"},
{"0;0;34;34,35;35;35,36;36"},
{"0;0;3-1;0;3-1;0;3-1"}
};

new Float:BlackJackTables[12][4] = {
{1962.5438,1015.6641,992.4688, 90.0},
{1960.1672,1015.6641,992.4688, 270.0},
{1962.5438,1020.1797,992.4688, 90.0},
{1960.1672,1020.1719,992.4688, 270.0},
{2241.3125,1606.2734,1006.1563, 180.0},
{2241.3125,1602.7500,1006.1563, 0.0},
{2243.1250,1604.4375,1006.1563, 90.0},
{2239.4297,1604.4531,1006.1563, 270.0},
{2230.3750,1606.2734,1006.1563, 180.0},
{2230.3750,1602.7500,1006.1563, 0.0},
{2232.1875,1604.4375,1006.1563, 90.0},
{2228.4922,1604.4531,1006.1563, 270.0}
};

new Cards[13][] = {
{"ld_card:cd2h"},
{"ld_card:cd3h"},
{"ld_card:cd4h"},
{"ld_card:cd5h"},
{"ld_card:cd6h"},
{"ld_card:cd7h"},
{"ld_card:cd8h"},
{"ld_card:cd9h"},
{"ld_card:cd10h"},
{"ld_card:cd11h"},
{"ld_card:cd12h"},
{"ld_card:cd13h"},
{"ld_card:cd1h"}
};
// FBI:
new door_fbi[2], door_fbi_area;
/******************************************************************************/
new Text:BandDrawBG[2];
new PlayerText:ActionText[MAX_PLAYERS] = {PlayerText:-1, ...};
new PlayerText:ActionBand[MAX_PLAYERS] = {PlayerText:-1, ...};
new TheifTime[MAX_PLAYERS];
new TheifRobID[MAX_PLAYERS];
new TheifMoney[MAX_PLAYERS];
new TheifCount[MAX_PLAYERS];
new TheifKey[MAX_PLAYERS];
//**************************Âûáîðû ïðåçèäåíòà **********************************
new viborplayer[MAX_PLAYERS];
new mapa;
new golos[5];
new Pickup1[3];
new PickNames[256],PickName[7][32],PickTimes[128],PickTime[7];
new Pick = 0;
new Text3D:vibor[2];
//------------------------------------------------------------------------------
new army[4];
new checkveh[MAX_VEHICLES];
//new Text:Logo[2];
new pricelist = 30;
new Text3D: PritonLable;
//
new onlinecheck[MAX_PLAYERS];
new afkcheck[MAX_PLAYERS];
//
new tserkov[2];
new razdevalka[11];
//
stock bool:AntiFakeKill[MAX_PLAYERS];
new AntiBan[MAX_PLAYERS];
new playerradio[MAX_PLAYERS];
//new tmpobjid;
//
new gReconnectIP[MAX_PLAYERS][16];
new gReconnectTime[MAX_PLAYERS];
//
new noooc[2] = 0;
new Float:RandomSpawn[][4] =
{
	{1919.7749, -1760.5482, 13.5469, 10.0},
	{1361.9775, -1290.5338, 13.3604, 10.0},
	{1137.8004, -1755.2164, 13.5811, 10.0}
};
new keis[MAX_PLAYERS];
// ÔÈÊÑ ÀÍÈÌÀÖÈÉ
#define _FIXES_CEILDIV(%0,%1) (((%0) + (%1) - 1) / (%1))
#define _FIXES_IN_RANGE(%0,%1,%2) (((%0) - ((%1) + cellmin)) < ((%2) - ((%1) + cellmin)))
static stock FIXES_gsPlayerAnimTimer[MAX_PLAYERS],
             FIXES_gsPlayerAnimName[MAX_PLAYERS][60],
             FIXES_gsPlayerAnimLibs[MAX_PLAYERS][_FIXES_CEILDIV(135, cellbits)]
;
static stock const
	FIXES_gscAnimIndexes[24] =
		{
			0, 2, 21, 35, 42, 42, 53, 62, 64, 67, 68, 71, 75, 81, 82, 84, 94, 96, 104, 122, 127, 128, 131, 135
		},
	FIXES_gscAnimLib[135][] =
		{
			"AIRPORT",      "ATTRACTORS",   "BAR",          "BASEBALL",     "BD_FIRE",
			"BEACH",        "BENCHPRESS",   "BF_INJECTION", "BIKE_DBZ",     "BIKED",
			"BIKEH",        "BIKELEAP",     "BIKES",        "BIKEV",        "BLOWJOBZ",
			"BMX",          "BOMBER",       "BOX",          "BSKTBALL",     "BUDDY",
			"BUS",          "CAMERA",       "CAR",          "CAR_CHAT",     "CARRY",
			"CASINO",       "CHAINSAW",     "CHOPPA",       "CLOTHES",      "COACH",
			"COLT45",       "COP_AMBIENT",  "COP_DVBYZ",    "CRACK",        "CRIB",
			"DAM_JUMP",     "DANCING",      "DEALER",       "DILDO",        "DODGE",
			"DOZER",        "DRIVEBYS",     "FAT",          "FIGHT_B",      "FIGHT_C",
			"FIGHT_D",      "FIGHT_E",      "FINALE",       "FINALE2",      "FLAME",
			"FLOWERS",      "FOOD",         "FREEWEIGHTS",  "GANGS",        "GFUNK",
			"GHANDS",       "GHETTO_DB",    "GOGGLES",      "GRAFFITI",     "GRAVEYARD",
			"GRENADE",      "GYMNASIUM",    "HAIRCUTS",     "HEIST9",       "INT_HOUSE",
			"INT_OFFICE",   "INT_SHOP",     "JST_BUISNESS", "KART",         "KISSING",
			"KNIFE",        "LAPDAN1",      "LAPDAN2",      "LAPDAN3",      "LOWRIDER",
			"MD_CHASE",     "MD_END",       "MEDIC",        "MISC",         "MTB",
			"MUSCULAR",     "NEVADA",       "ON_LOOKERS",   "OTB",          "PARACHUTE",
			"PARK",         "PAULNMAC",     "PED",          "PLAYER_DVBYS", "PLAYIDLES",
			"POLICE",       "POOL",         "POOR",         "PYTHON",       "QUAD",
			"QUAD_DBZ",     "RAPPING",      "RIFLE",        "RIOT",         "ROB_BANK",
			"ROCKET",       "RUNNINGMAN",   "RUSTLER",      "RYDER",        "SAMP",
			"SCRATCHING",   "SEX",          "SHAMAL",       "SHOP",         "SHOTGUN",
			"SILENCED",     "SKATE",        "SMOKING",      "SNIPER",       "SNM",
			"SPRAYCAN",     "STRIP",        "SUNBATHE",     "SWAT",         "SWEET",
			"SWIM",         "SWORD",        "TANK",         "TATTOOS",      "TEC",
			"TRAIN",        "TRUCK",        "UZI",          "VAN",          "VENDING",
			"VORTEX",       "WAYFARER",     "WEAPONS",      "WOP",          "WUZI"
		}
;
//==============[Çàùèòà]==========//
new saveplayer[MAX_PLAYERS];
new RegEx:reklamka;
new ammomer, ammomerrr;
new FrakCD[20];
new FrakCD1[20];
new stringer1[144];
new stringer[1500];
new mysql_query_[512];
new Float:PickupX[MAX_PLAYERS],Float:PickupY[MAX_PLAYERS];
// ÑÈÑÒÅÌÀ ÏÅÉÍÒÁÎËÀ:
#define TIME_PAINTBALL      600
#define REGISTER_PAINTBALL  300

static const Float: SpawnRedTeam [] [] [] =
{
	{
		{-969.9689,1060.8751,1345.0394,88.7132},
		{-972.2077,1064.8075,1345.0170,88.7132},
		{-975.3556,1068.6332,1344.9913,88.7132},
		{-974.6649,1077.8994,1344.9856,86.5198},
		{-971.7581,1095.3455,1344.9913,91.8466},
		{-969.4601,1099.1724,1345.0038,90.9066},
		{-975.8362,1056.8232,1345.0007,91.2199},
		{-976.2545,1021.2715,1345.0333,90.9065},
		{-972.1592,1026.6664,1345.0560,88.0865},
		{-977.6028,1084.5803,1344.9600,90.5932}
	},
	{
		{267.0894,1695.4653,1083.9604,89.6009},
		{264.5477,1688.3457,1084.0736,47.3005},
		{271.6069,1689.6805,1084.6833,62.6540},
		{265.4798,1682.4523,1084.4822,43.2272},
		{271.0176,1684.4034,1084.6586,50.1206},
		{270.8167,1678.4148,1084.7808,41.3238},
		{265.3729,1674.0319,1084.0864,35.0570},
		{269.6141,1667.8398,1084.2783,24.7169},
		{264.8893,1663.0863,1083.8937,359.9633},
		{272.4068,1661.0575,1084.0411,19.3901}
	},
	{
		{2168.0991,-2461.6807,642.7834,178.2282},
		{2165.3225,-2462.0535,642.7283,178.2282},
		{2161.8481,-2462.3508,642.6843,178.2282},
		{2161.7515,-2465.4895,642.2201,178.2282},
		{2164.5781,-2466.0388,642.1389,178.2282},
		{2168.4463,-2466.5925,642.0570,178.2282},
		{2168.3159,-2470.8098,641.4333,178.2282},
		{2164.9248,-2471.1538,641.3825,178.2282},
		{2161.2278,-2471.4880,641.3331,178.2282},
		{2165.2629,-2477.4905,640.4454,178.2282}
	}
};
static const Float: SpawnBlueTeam [] [] [] =
{
	{
		{-1135.4092,1057.7181,1345.7795,270.1115},
		{-1132.9910,1054.1366,1345.7570,270.1115},
		{-1132.1146,1049.9667,1345.7500,270.1115},
		{-1127.1240,1049.9760,1345.7155,270.1115},
		{-1129.8181,1044.4744,1345.7283,270.7382},
		{-1134.0547,1036.5229,1345.7474,266.6648},
		{-1127.4908,1034.1008,1345.6991,266.6648},
		{-1128.2844,1024.0037,1345.6991,269.1714},
		{-1134.6536,1021.2946,1345.7407,271.3648},
		{-1130.0464,1093.7036,1345.7786,264.1581}
	},
	{
		{149.0421,1691.0211,1084.0497,269.7981},
		{152.4205,1696.7710,1084.0497,261.9647},
		{159.2797,1703.4972,1084.3856,238.4645},
		{151.2666,1710.4438,1084.3856,262.5679},
		{162.2194,1713.9791,1084.3856,214.6275},
		{171.8780,1712.4086,1084.0497,189.5606},
		{153.9052,1717.1807,1084.0497,226.8242},
		{150.4423,1724.7450,1084.0497,215.8574},
		{160.3582,1724.4492,1084.0497,207.3974},
		{172.9232,1685.3774,1084.0497,318.0050}
	},
	{
		{2275.3071,-2487.8276,631.9099,179.2203},
		{2280.2778,-2488.3032,631.9099,179.8470},
		{2282.6858,-2485.6675,631.9099,165.7469},
		{2271.3899,-2483.4775,631.9099,210.2407},
		{2282.2336,-2492.7813,631.9099,165.1202},
		{2287.3201,-2499.1445,631.9099,118.1198},
		{2286.6345,-2493.0181,631.9099,133.4733},
		{2274.3694,-2496.9229,631.9099,187.6805},
		{2279.9807,-2502.1191,631.9099,180.7871},
		{2273.5557,-2502.6470,631.9099,180.7871}
	}
};
new paintball,
    ScorePB[2],
    Text:PaintText[3],
    StartPaintBall,
    TimerPaintBall,
    TeamPain[MAX_PLAYERS],
    KillPain[MAX_PLAYERS],
    DeathPain[MAX_PLAYERS],
    PlayerPB[2],
    typePB
;

enum PaINFO
{
	Name[24],
	Kills,
	Deaths,
	Type,
};
new PaintInfo[51][PaINFO], PaintList = 0;
//------------------------------------------------------[ Ïåðåìåííûå ] ------------
new bool:gIsRequestClassCalled[MAX_PLAYERS char];
new objectplayerid;
new gatevorota;
new gatevorota2;
new bool:AlhambraDJ = true;
new bool:JizzyDJ = true;
new JizzyDJID = INVALID_PLAYER_ID;
new AlhambraDJID = INVALID_PLAYER_ID;
new JobsDJ[2];
new Float:GMHP[MAX_PLAYERS][2];
new Float:VEHHP[MAX_PLAYERS][2];
new Float:GMARMOUR[MAX_PLAYERS][1];
new parashut;
new bool:times[MAX_PLAYERS];
new jobspickup[1];
new paintulicpic,paintulicpic1,paintvnutrpic,paintvnutrpic1;
new connects;
new TotalGzR,TotalGzA,TotalGzB,TotalGzG,TotalGzV;
new derby[11];
new Float: PlayerHealth[MAX_PLAYERS];
new kazna = 0,nalog = 0;
new seans[MAX_PLAYERS];
new takephone[MAX_PLAYERS];
new gag[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new soglasen[MAX_PLAYERS];
new chekmatlva[10],chekmats[3];
new paint[2];
//
enum _fam_enum_
{
    f_id,
    f_name [ 32 ],
    f_chat_color,
    f_creator [ MAX_PLAYER_NAME ],
    f_creating_data [ 32 ],
    f_members_amount,
    f_nationality,
    f_online,
}
new family_info [ 800 ] [ _fam_enum_ ];//Ðàñ÷èòàíî íà 500 ñåìåé
new family_count = 0;//êîë-âî ñåìåé.
new family_chat_color[ 5 ] [ 12 ] ={//Ìàññèâ öâåòà äëÿ ÷àòà
    "FFFFFF","FFD39B","FFFF00","54FF9F","98F5FF"
};
/******************************************************************************/
enum ADVERT_DATA
{
	adSender[24],
	adCheker[24],
	adPhone,
	adText[100],
	adTime,
	adMoney,
	bool:adCheked,
	bool:adBusy,
	bool:adCheking
}
new gAdvert[MAX_ADVERT_COUNT][ADVERT_DATA];
new gAdvertCount;
new gAdvertTime;
new addd;
new adverttime = 20;
//
enum v_info
{
	Float:v_X,
	Float:v_Y,
	Float:v_Z,
	Float:v_A,
	Float:vMile,
	Float:vHealth,
	vLock
}
new VEHICLE[MAX_VEHICLES][v_info];
GetFloatDifference(Float: Number1, Float: Number2) return floatround(Number1 > Number2 ? Number1 - Number2 : Number2 - Number1);
/******************************************************************************/
new Text3D:blocktext[MAX_PLAYERS];
new rbtime[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new udar[MAX_PLAYERS];
new zvonok[MAX_PLAYERS];
new Shot[MAX_PLAYERS];
new mast[3];
new PicCP[MAX_PLAYERS];
new Text3D:kaznameria;
new createdvehicles[MAX_VEHICLES];
new createdvehs;
new WeaponNames[][32] =
{
	{"Unarmed (Fist)"}, // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Colt 45"}, // 22
	{"Colt 45 (Silenced)"}, // 23
	{"Desert Eagle"}, // 24
	{"Normal Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Heat-Seeking Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};
new VehicleNameS[][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};

new Text3D:SkladA;
new Text3D:SkladV;
new Text3D:SkladG;
new Text3D:SkladB;
new Text3D:SkladR;
//new AntiCFired[MAX_PLAYERS];
new JobCarTime[MAX_PLAYERS];
new PEfir[MAX_PLAYERS];
new Pefir[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new Float:Fuell[MAX_VEHICLES], Refueling[MAX_PLAYERS], OldFuel[MAX_PLAYERS];
new alkogol[MAX_VEHICLES];
new SwatDoor[2][MAX_PLAYERS];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new lights1;
new robbanks;
new robbankstime[MAX_PLAYERS];
new bankdoors;
new bankdoortime[MAX_PLAYERS];
new robjewels;
new robjewelstime[MAX_PLAYERS];
new jeweldoors;
new jeweldoortime[MAX_PLAYERS];
new FreeOffer[MAX_PLAYERS];
new SposobOffer[MAX_PLAYERS];
new FreePrice[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new vehcreat[MAX_VEHICLES];
new lighttime[MAX_PLAYERS];
new minigun[MAX_PLAYERS];
new toggotome[MAX_PLAYERS];
new DoorOpen[3];
new crashcuff[MAX_PLAYERS];
new minstr,fight,ring = 0,zakonn = 0;
new boy[MAX_PLAYERS];
new fightid[MAX_PLAYERS];
new TimeBox[MAX_PLAYERS];
new TimeBoxAll[MAX_PLAYERS];
new bool:Music[MAX_PLAYERS];
new bool:Music2;
new URLW[128];
new Float: MGM[5] = 0.0;
new UMusic[128];
new Float: MusicU[4] = 0.0;
new healpric = 100,smspricels = 50,smsls = 0;
new gcontract[MAX_PLAYERS];
new Text3D:taxi3d[MAX_VEHICLES];
new Text3D:Meh3d[MAX_VEHICLES];
new keys[MAX_PLAYERS];
new HotdogOffer[MAX_PLAYERS];
new HotdogPrice[MAX_PLAYERS];

new	ShopCar[81][2] = {	{400,800000},{567,400000},{549,250000},{547,400000},{546,400000},{543,350000},{527,300000},{526,300000},{518,250000},
{517,350000},{516,450000},{492,450000},{479,350000},{478,600000},{475,250000},{466,250000},{458,230000},{439,170000},{436,150000},{404,270000},
{419,230000},{586,270000},{581,400000},{461,750000},{418,3400000},{603,100000},{589,340000},{580,250000},{579,1900000},{561,400000},{555,930000},
{554,550000},{534,430000},{533,390000},{505,450000},{491,400000},{489,350000},{445,450000},{421,650000},{401,340000},{600,440000},{585,360000},
{576,350000},{575,350000},{566,560000},{551,450000},{550,490000},{540,500000},{536,390000},{529,490000},{507,490000},{474,390000},{467,450000},
{426,530000},{422,360000},{412,400000},{405,720000},{477,6120000},{471,959000},{468,449000},{463,543000},{521,787000},{602,3950000},{587,5110000},
{565,4870000},{562,6190000},{560,8320000},{559,7500000},{558,3190000},{545,4860000},{535,3900000},{480,3600000},{402,5199000},
{434,9000000},{522,6350000},{541,8400000},{506,15000000},{451,18000000},{429,12560000},{415,8350000},{411,26400000}};
//
new TheftCount[MAX_PLAYERS];
new TheftCarID[MAX_PLAYERS];
new TheftTime[MAX_PLAYERS];
new TheftKey[MAX_PLAYERS];
// ÂÀËÈÄÍÎÑÒÜ ÀÂÒÎ
#if !defined IsValidVehicle
	native IsValidVehicle(vehicleid);
#endif
// ÂÀËÈÄÍÎÑÒÜ ÎÐÓÆÈß
stock static IsFirearmWeapon(weaponid)
{
	return (22 <= weaponid <= 34) || weaponid == 38;
}
// ÀÂÒÎ:
new medicsls[2],
    carcaligula[2],
    cardrakon[2],
    sfpdcar[2],
    ruscar[2],
    lcncar[2],
    taxicar[2],
    hotdogcar[2],
    hitcar[2],
    ministrcar[2],
    streetcar[2],
    lvpdcar[2],
    lsnewscar[2],
    govcar[2],
    mehanik[2],
    liccar[2],
    yakcar[2],
    sapdpatrul[2],
    sapdcar[2],
    fbicar[2],
    comptruck[2],
    benzovoz[2],
    swatcar[2],
    armycar[2],
    alkofuravagos,
	alkofuragrove,
    alkofuraactek,
	alkofurarifa,
	alkofuraballas,
	matsfuraactek,
	coronoscar[2],
	matsfuravagos,
	vagoscar[2],
	matsfuragrove,
	grovecar[2],
	matsfurarifa,
	rifacar[2],
	matsfuraballas,
	ballascar[2],
	armcar[2],
	matscar[2],
	incos[2]
;
//
new Menu:ChoseSkin;
new useguns[MAX_PLAYERS];
new clearanim[MAX_PLAYERS];
new ChosenPlayer[MAX_PLAYERS];
new usemats[MAX_PLAYERS];
new OldSkin[MAX_PLAYERS];
new zavodis[MAX_PLAYERS];
new dostup[MAX_PLAYERS];
new forma[MAX_PLAYERS];
new proverkaforma[MAX_PLAYERS];
new Army;
new TieTime[MAX_PLAYERS];
new Tazer[MAX_PLAYERS];
new TazerTime[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new Medics = 0,Mechanics = 0,TaxiDrivers = 0,Police = 0;
new MechanicCall = INVALID_PLAYER_ID,TaxiCall = INVALID_PLAYER_ID,PoliceCall = INVALID_PLAYER_ID,MedicCall = INVALID_PLAYER_ID;
new PlayerTied[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new LiveOfferls[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new TalkingLivels[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new CharPrice[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new InviteSkin[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new BigEarSms[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new ghour = 0,gminute = 0,gsecond = 0;
new autoshoppick[4];
new realchat = 1,levelexp = 4;
new MatsArmyCar[MAX_PLAYERS];
new VertMats[MAX_PLAYERS], ggtime;
new vertmatbi = 0;new armmatbi = 100000;new armmatsf = 50000;new lspdmatbi = 50000;new sfpdmats = 50000;new lvpdmats = 50000;new fbimats = 50000;new yakuzamats = 50000;new rmmats = 50000;new lcnmats = 50000;new rifamatbi = 100000;new ballasmatbi = 100000;new groovmatbi = 100000;new vagosmatbi = 100000;new aztekmatbi = 100000;
new hitss[3];
new topghetto[5];
new sportzal[2],lspic[3],medpic[4],rmpic[2],narkoenter,narkoexit,lcnpic[2],yakexit[2],buygunzakon[5],fbi[8],lspd[6],sf[5],lvpdpic[7],jewels[2];
new autoschool1,ash,avtosh[3],marenter[6],rcpickup[2],automasterskay[2],bankpic[6],serdce[5],hospital[13],ballasvhod[2],rifa[2],mo[2],vagospic[2],aztecpic[2],grooveexit,swatenter,swatenter2,swatexit,swatgun,grovegun,ballasgun,vagosgun,rifagun,aztecgun,yakuzgun,lcngun,rusmagun,grooveenter,gunarm[2],plen[2],zona,zonaa,sklad[2],sannewspanel,joinfactions,carxbunny;
new lspdhelp,fbihelp,armysfhelp,medichelp,lcnhelp,yakuzahelp,cityhallhelp,sfpdhelp,inshelp,ballashelp,vagoshelp,rmhelp,grovehelp,sanhelp,aztechelp,rifahelp,armylvhelp,lvpdhelp,hitmanhelp,srhelp,swathelp,pahelp,serverhelp,cname;
//
//new PlayerText:DartProjectTD[21][MAX_PLAYERS];
//
new caridhouse[MAX_PLAYERS] = { INVALID_VEHICLE_ID, ... }; // ÄÎÌ. ÀÂÒÎ
static VehicleID[MAX_PLAYERS];
static CheckVehicle[MAX_PLAYERS];
new SELL[3][MAX_PLAYERS];
//
enum cInfo
{
    cZakaz,
	cHitman
};
new ContractInfo[MAX_PLAYERS][cInfo];

// ÎÁÌÅÍ
enum sChange
{
    cSeller,
	cBuyer,
	cPrice,
	cType
};
new ChangeAll[MAX_PLAYERS][sChange];
//---------------------------------------[ Áàíêè ] -----------------------
enum
{
	CHECKPOINT_1,
	CHECKPOINT_2,
	CHECKPOINT_3,
	CHECKPOINT_4,
	CHECKPOINT_5,
	CHECKPOINT_6,
	CHECKPOINT_7,
	CHECKPOINT_8,
	CHECKPOINT_9,
	CHECKPOINT_10,
	CHECKPOINT_11,
	CHECKPOINT_13,
	CHECKPOINT_14,
	CHECKPOINT_15,
	CHECKPOINT_16,
	CHECKPOINT_17,
	CHECKPOINT_18,
	CHECKPOINT_19,
	CHECKPOINT_20,
	CHECKPOINT_21,
	CHECKPOINT_22,
	CHECKPOINT_23,
	CHECKPOINT_24,
	CHECKPOINT_25,
	CHECKPOINT_26,
	CHECKPOINT_27,
	CHECKPOINT_28,
	CHECKPOINT_29,
	CHECKPOINT_30,
	CHECKPOINT_31,
	CHECKPOINT_32,
	CHECKPOINT_33,
	CHECKPOINT_34,
	CHECKPOINT_35,
	CHECKPOINT_36,
	CHECKPOINT_37,
	CHECKPOINT_38,
	CHECKPOINT_40,
	CHECKPOINT_41,
	CHECKPOINT_42,
	CHECKPOINT_43,
	CHECKPOINT_44,
	CHECKPOINT_45,
	CHECKPOINT_46,
	CHECKPOINT_47,
	CHECKPOINT_48,
	CHECKPOINT_49,
	CHECKPOINT_50,
	CHECKPOINT_51,
	CHECKPOINT_52,
	CHECKPOINT_53,
	CHECKPOINT_54,
	CHECKPOINT_55,
	CHECKPOINT_56,
	CHECKPOINT_57,
	CHECKPOINT_58,
	CHECKPOINT_59,
	CHECKPOINT_60,
	CHECKPOINT_61,
	CHECKPOINT_62,
	CHECKPOINT_63,
	CHECKPOINT_64,
	CHECKPOINT_65,
	CHECKPOINT_66
}
enum nInfo
{
	nLcn,
	nYakuza,
	nRm,
};
enum fInfo
{
	fLsnews,
	fBallas,
	fVagos,
	fGrove,
	fAztek,
	fRifa,
	fAmmo,
	fBallasn,
	fVagosn,
	fGroven,
	fAztekn,
	fRifan,
	fLock[5]
};
new MafiaBank[1][nInfo];
new FracBank[1][fInfo];

enum PickInfo
{
	Float: PickX,
	Float: PickY,
	Float: PickZ
}
new PickupInfo[MAX_PICKUPS][PickInfo];

static const SkinMen[7][1] =
{
	{78},{79},{134},{135},{136},{137},{230}
};
static const SkinMale[5][1] =
{
	{140},{139},{90},{93},{77}
};
stock CreatePickupAC(model, type, Float:X, Float:Y, Float:Z, virtualworld = 0)
{
	new TempID = CreatePickup(model, type, X, Y, Z, virtualworld);
	PickupInfo[TempID][PickX] = X;
	PickupInfo[TempID][PickY] = Y;
	PickupInfo[TempID][PickZ] = Z;
	return TempID;
}
enum aInfo
{
	aAztec,
	aGrove,
	aBallas,
	aRifa,
	aVagos,
};
new FracAlko[1][aInfo];

enum bzInfo
{
	bID,
	Float:bEntrx,
	Float:bEntry,
	Float:bEntrz,
	Float:bExitx,
	Float:bExity,
	Float:bExitz,
	Float:bMenux,
	Float:bMenuy,
	Float:bMenuz,
	bOwner[MAX_PLAYER_NAME],
	bPrice,
	bBuyPrice,
	bMoney,
	bType,
	bLic,
	bInt,
	bVirtual,
	bLock,
	bEnter,
	bMIcon,
	bIcon,
	bPickup,
	bPickupExit,
	bName[MAX_PLAYER_NAME],
	bProduct,
	bTill,
	bMenu,
	bLockTime,
	bMafia,
	bool:bProdStat
};
//new Menu:BuyClothes;
new Menu:ReconPanel;
//new ChangeSkinv[MAX_PLAYERS];
new BizzInfo[200][bzInfo], TOTALBIZZ = 0;
new Text3D:LABELBIZZ[200];
new BizzPay[200];
// ÑÈÑÒÅÌÀ ÑËÅÆÊÈ
new Float:gPlayerPosition[MAX_PLAYERS][3],
    gPlayerInformation[MAX_PLAYERS][2],
    PlayerText:ReconPlayerText[MAX_PLAYERS][2],
	gSpecID[MAX_PLAYERS],
	gSpecState[MAX_PLAYERS]
;
//
new Text:   TextBizzWar;
new BizzWarTime = 0;
new BizzWarTimeAll;
new BizzWarsNumber = -1;
new BizzWarsNumberZone = -1;
new GangZoneBizzWar[3];
new bool: BizzWars;
new Float:gBizzWarZone[3][4] =
{
	{328.403259, 827.808898, 424.403259, 963.808898},
	{358.105712, 2462.011962, 446.105712, 2574.011962},
	{-469.420745, 2186.731933, -341.420745, 2274.731933}
};



enum bwInfo
{
	bwNapad,
	bwGuard,
	bwCostNapad,
	bwCostGuard,
};

new BizzWar[200][bwInfo];
//
new addbizz[256][MAX_PLAYERS];

enum AmmoLists
{
    Name[20],
    gunid,
	Cost
};
new AmmoList[17][AmmoLists] = {
	{"Deagle\t\t\t",24,20},
	{"SDPistol\t\t",23,15},
	{"Country Rifle\t\t",33,35},
	{"ShotGun\t\t",25,25},
	{"MP5\t\t\t",29,20},
	{"AK-47\t\t\t",30,30},
	{"M4\t\t\t",31,30},
	{"Teargas\t\t",17,50},
	{"Golf Club\t\t",2,100},
	{"Baseball Bat\t\t",5,80},
	{"Shovel\t\t\t",6,100},
	{"Pool Cue\t\t",7,110},
	{"Katana\t\t\t",8,180},
	{"Dildo\t\t\t",10,110},
	{"Flowers\t\t",14,250},
	{"Cane\t\t\t",15,110},
	{"Parachute\t\t",46,80}
};

enum pinfo
{
	pName[MAX_PLAYER_NAME],
	pBizzid,
	pPrice,
	pTill,
	pType,
	bool:pStatus
};
new ProductInfo[100][pinfo], TOTALPRODUCT = 0;

enum grzone
{
	grid,
	Float:grX,
	Float:grY,
	Float:grZ,
	Float:grD,
	grName[50],
	grVirt
}
new GREENZONE[100][grzone], TOTALZONE = 0;

forward IsVehicleOccupied(vehicleid);
public IsVehicleOccupied(vehicleid)
{
	foreach(Player,i)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return true;
	}
	return false;
}
stock Float:GetDistanceBetweenPlayers(p1,p2)

{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2)) return -1.00;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	    case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 46:
		    return 371;
	}
	return 0;
}
static const MaxPassengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
};
new Float:gInviteSpawns[0][4] = {
	{222.3489,-8.5845,1002.2109,266.7302}
};
new LessonCar[MAX_PLAYERS]; new LessonStat[MAX_PLAYERS]; new pLessonCar[MAX_PLAYERS];

enum pInfo
{
    pID,
    pPassword[65],
	pSalt[11],
	pEmail[64],
	pLevel,
	pAlcoInvenxua,
	pNames[24],
	pMestoJail,
	pIpReg[16],
	pHousecash,
	pHeadValue,
	pContract,
	pDataReg,
	pCar,
	pCar2,
	Float:pFuelcar,
	pNumbercar[25],
	pProz,
	pDonateRank,
	pDonatemoney2,
	pMats,
	pSex,
	pMuted,
	pExp,
	pCash,
	pKills,
	pPayCheck,
	pJailed,
	pJailTime,
	pHeal,
	pLeader,
	pMember,
	pRank,
	pChar,
	pJob,
	pInt,
	pVirt,
	pLocal,
	pModel,
	pPnumber,
	pHelper,
	//--------
	pVodPrava,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pPhousekey,
	pZakonp,
	pNarcoLomka,

	pQuest1,
	pQuest2,
	pQuest3,
	pQuest4,
	pQuest5,
	pQuest6,
	pQuest7,
	pQuest8,
	pQuest9,
	pQuest10,
	pQuest11,

	pQuest1Done,
	pQuest2Done,
	pQuest3Done,
	pQuest4Done,
	pQuest5Done,
	pQuest6Done,
	pQuest7Done,
	pQuest8Done,
	pQuest9Done,
	pQuest10Done,
	pQuest11Done,

	//---------------[ Ñêèëû ]-----
	pSDPistol,
	pDesertEagle,
	pShotGun,
	pMP5,
	pAK47,
	pM4,
	pPayDayHad,
	pWarns,
	punWarns,
	punWarnstime,
	pFuel,
	pMarried,
	pMuteTime,
	pBank,
	pMobile,
	pDostup,
	pWanted,
	pGunfbiTime,
	pGun51Time,
	pGunlspdTime,
	pGunaviaTime,
	pDrugtime,
	pRobTime,
	pReportTime,
	pVerevka,
	pOtmbI4ka,
	pAutoTime,
	pAutoSkill,
	pBoxstyle,
	pKstyle,
	pKickstyle,
	pBoxSkill,
	pKongfuSkill,
	pKickboxSkill,
	pFightSkill,
	pFightSkil,
	pFightTime,
	pHospital,
	pIzol,
	Weapon[13],
	pWeapons[64],
	Ammo[13],
	Ammos[64],
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pFacePass,//Ïîääåëüíûé ïàñïîðò
	pIP[16],
	pTexts[16],
	Texts[3],
	pSkinhome[3],
	pHomez,//êóäà çàñåëÿåì èãðîêà
	pSatiety,
	pCheckIp,
	pGetonIP[20],
	pKeyIp[32],
	pGetondate[17],
	SalonCar,
	SalonTime,
	pDedMoroz,
	pNinja,
	pDedUse, //èñïîëüçóåòñÿ (òîáèøü îí íà èãðîêå)
	pNinjaUse, //èñïîëüçóåòñÿ (òîáèøü îí íà èãðîêå)
	pFull, //ôóëë äîñòóï
	pArmBodyUse, //Îðóæèå çà ñïèíîé (èñïîëüçîâàíèå)
	pArmBody, //Îðóæèå çà ñïèíîé (äîñòóï ê êîìàíäå)
	pIznas,
	pMinet,
	pHotvet,
	pFamily,
	pDayOnline,
	pMask,
	Settings[7],
	pOdet,
	pVoenBill,
	pMedCard,
	p_drugs[7],
	pGM,
	pSlotItems[64],
	pSlotItem[6],
	pType,
	pType2,
	pLimit,
	pVigs,
	pAge,
	pNational,
	pRub,
	pFacPoint,
	pGold,
	pSaveWeapon,
	pKillsOnDM,
	pPrefix[32],
	pInv,
	aiCMDaccess[CMD_NUM+1],
	pDayAfk,
	pOnlineYes,
	pAfkYes,
	pSelectPlayer,
	pTargetPlayer,
	pTargetAction,
	pBlNick,
	pcWarn,
	pcBan,
	pOffBH,
	pKInCapt,
	pDist,
	pAccent[32],
	pRepAdm,
	pKickAdm,
	pWarnAdm,
	pBanAdm,
	pMuteAdm,
	pJailAdm,
	pUsedJail
};
new PlayerInfo[MAX_PLAYERS][pInfo];
//new NULL_PlayerInfo[pInfo];

enum hInfo
{
	hID,
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	Float:hCarx,
	Float:hCary,
	Float:hCarz,
	Float:hCarc,
	hOwner[24],
	hValue,
	hHel,
	hInt,
	hLock,
	hOwned,
	hTakings,
	hKlass,
	hVec,
	hPickup,
	Text3D:h3dtext,
	bool:h3dtextc,
	hMIcon,
	hVehSost,
	hNark,//11
	hMoney,//11
	hMatel,//11
	hduggl,//11
	hak47,//11
	hshotgun,//11
	hm4,//11
	hsdpist,//11
	hrifle,//11
	hsmg,//11
	hdrugs[7],
	bool:hRobhouse,
	hSquare,
	hObject[10]
};
new HouseInfo[2000][hInfo];
//---------------------------------------[ Ôóðû]-------------------
enum pMatss
{
	gBallas,
	gVagos,
	gGrove,
	gAztek,
	gRifa,
};
new ServerRestart[3];
new Furi[1][pMatss];

enum pMat
{
	mCapasity,
	mLoad,
};

new MatHaul[7][pMat];
new JoinPed[151][1] = {
	{280},//LSPD1
	{281},//LSPD2
	{282},//LSPD3
	{283},//LSPD4
	{284},//LSPD5
	{285},//LSPD6
	{288},//LSPD7
	{76},//LSPD8
	//============
	{286},//FBI1
	{163},//FBI2
	{164},//FBI3
	{165},//FBI4
	{166},//FBI5
	{141},//FBI6
	//============
	{287},//armySF1
	{191},//armySF2
	//============
	{70},//Mediki1
	{274},//Mediki2
	{275},//Mediki3
	{276},//Mediki4
	{219},//Mediki5
	//============
	{223},//LCN1
	{124},//LCN2
	{113},//LCN3
	{214},//LCN4
	//============
	{120},//YAKUZA1
	{123},//YAKUZA3
	{169},//YAKUZA2
	{186},//YAKUZA4
	//============
	{57},//Meria1
	{150},//Meria2
	{98},//Meria3
	{187},//Meria4
	{147},//Meria5
	//============
	{280},//SFPD1
	{281},//SFPD2
	{282},//SFPD3
	{283},//SFPD4
	{284},//SFPD5
	{285},//SFPD6
	{288},//SFPD7
	{76},//SFPD8
	//===========
	{250},//SF NEWS1
	{261},//SF NEWS2
	{211},//SF NEWS3
	{217},//SF NEWS4
	//===========
	{171},//Kazino1
	{11},//Kazino2
	//===========
	{59},//Instructors1
	{172},//Instructors2
	{189},//Instructors3
	{240},//Instructors4
	//==========
	{280},//LVPD1
	{281},//LVPD2
	{282},//LVPD3
	{283},//LVPD4
	{284},//LVPD5
	{285},//LVPD6
	{288},//LVPD7
	{76},//LVPD8
	//==========
	{112},//Russian mafia1
	{111},//Russian mafia2
	{125},//Russian mafia4
	{272},//Russian mafia3
	{214},//Russian mafia5
	//==========
	{105},//GROOVE1
	{106},//GROOVE2
	{107},//GROOVE3
	{269},//GROOVE4
	{270},//GROOVE5
	{271},//GROOVE6
	//==========
	{114},//Aztecas1
	{115},//Aztecas2
	{116},//Aztecas3
	//==========
	{102},//BALLAS1
	{103},//BALLAS2
	{104},//BALLAS3
	//==========
	{173},//RIFA2
	{174},//RIFA1
	{175},//RIFA3
	//==========
	{108},//VAGOS1
	{109},//vagospic[1]
	{110},//VAGOS3
	//==========
	{287},//Army LV1
	{191},//Army LV2
	//==========
	{60},//San NEWS1
	{170},//San NEWS2
	{188},//San NEWS3
	{186},//San NEWS4
	{287},//=========Ãåðìàèÿ
	{287},
	{191},
	{287},
	{287},///===========Ðîññèÿ
	{191},
	{287},
	{154},//=========Áîìæè ìóæèêè
	{97},
	{96},
	{146},
	{252},
	{45},
	{96},///===========Áîìæè áàáû
	{90},
	{75},
	{185},//Hitman
	{186},//Hitman
	{250},//Hitman
	{295},// Hitman
	{294},//Hitman
	{60},//street rasers
	{60},//street rasers
	{47},//street rasers
	{217},//street rasers
	{67},//street rasers
	{240},//street rasers
	{170},//street rasers
	{29},//street rasers
	{98},//îõðàííèê êàçèíî ðè÷ü
	{195},//Æåíñêèé ñêèí Ballas
	{226},//Æåíñêèé ñêèí Rifa
	{190},//Æåíñêèé ñêèí Vagos
	{56},//Æåíñêèé ñêèí Gruv
	{41},//Æåíñêèé ñêèí Aztec
	{117},//ßêóäçà
	{118},//ßêóäçà
	{233},
	{55},// Æåíñêèé ñêèí Street
	{91},// Æåíñêèé ñêèí Street
	{216},// Æåíñêèé ñêèí Street
	{19},// Ñêèí áîìæà (Ì)
	{18},// Ñêèí áîìæà (Ì)
	{35},// Ñêèí áîìæà (Ì)
	{36},// Ñêèí áîìæà (Ì)
	{92},// Ñêèí áîìæà (Æ)
	{169},//Hitman
	{85},//Hitman
	{138},
	{139},
	{140},
	{145},
	{251},
	{61}, // Àðìèÿ
	{255},
	{265},
	{266},
	{267},
	{187},
	{141},
	{211},
	{179}
};
stock NoNalog(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		new job = PlayerInfo[playerid][pJob];
		if(member==13 || member==15 || member==12 || member==17 || member==18|| member==5|| member==6 || member==14) return true;
		if(leader==13 || leader==15 || leader==12 || leader==17|| leader==18 || leader==5 || leader==6 || leader==14) return true;
		if(member==0 && job == 0) return true;
	}
	return false;
}
IsNumericc(const text[])
{
	for (new i = 0, j = strlen(text); i < j; i++)
	{
		if (text[i] > '9' || text[i] < '0') return false;
	}
	return true;
}
stock ISAMAFIA(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==5 || member==6 || member==14 ) return true;
		if(leader==5|| leader==6 || leader==14) return true;
	}
	return false;
}
stock MessageCriminal(color, string_massive[], bool:type)
{
	foreach(new i: Player)
	{
		if( (!type && !ISAMAFIA(i)) || (type && !IsAGang(i)) ) continue;
		SendClientMessage(i, color, string_massive);
	}
	return 1;
}
stock IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader], member = PlayerInfo[playerid][pMember];
		if(member==12 || member==13 || member==15 || member==17 || member==18) return true;
		if(leader==12 || leader==13 || leader==15 || leader==17 || leader==18) return true;
	}
	return false;
}
stock ShowHelp(playerid)
{
    new string[1000];
    format(string, sizeof(string), "{ff0000}Help Menu: {A8C4E4}/report - /g(eneralchat) - /ask - /w(hisper) - /o(oc) - /s(hout) - /k - /bc - /fn - /rn - /f(amily) - /me - /do - /todo\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/pay - /time - /id - /leaders - /fixcar - /cartool - /discord - /myskill - /accept - /eject - /youtubers\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/gps - /drink - /mask - /healme - /plant - /ddrug - /pdrug - /givedrug - /drugs - /dgun - /pgun - /box - /kickbox - /kongfu\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/limit - /buybiz - /window - /getbizstats - /mystyle - /pass - present - /showmedcard - /atm\n");
    strcat(string, "{ff0000}Help Menu: {A8C4E4}/c(all) - /p(angup) - /h(angup) - /number - /sms - /hmenu - /home - /healhouse - /exit\n");
    strcat(string, "{5faee3}If you need more help use {92000A}/report\n");
    strcat(string, "\n\n{de87a0}Have a fun!");
    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{ffff00}New {2cdb0d}York {ff0000}R{ffffff}P", string, "Close", "");
}
stock JailMuteList(playerid)
{
    new string[1001];
    format(string, sizeof(string), "{ffffff}You are not allowed to join to organization/faction\n");
    strcat(string, "{ffffff}Admin In Faction/organization = {ff0000}ADMIN KICK\n");
    strcat(string, "{FFFFFF}Admin Rules List:\n\n");
    strcat(string, "{FFF000}=========================Jail Times=================== \n");
    strcat(string, "{FFFFFF}DM & TK & PG = \"10 minute jail\"\n");
    strcat(string, "{FFFFFF}DP & DB & SK = \"10 minute jail\"\n");
    strcat(string, "{FFF000}=========================Mute Times=================== \n");
    strcat(string, "{FFFFFF}OSK PLAYER = \"Mute 10 minute\"! \n");
    strcat(string, "{FFFFFF}OSK ADMIN = \"Mute 15 minute\"! \n");
    strcat(string, "{FFFFFF}OSK SERVER \"Mute 20 minute\"! \n");
    strcat(string, "\n\n{FFF000}You must follow the prison and mute times specified above\n Instead, you will be expelled, and in most cases, you will be got ban for 3 days - Have a fun!");
    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "{FFF000}Admin {FFFFFF}Rules", string, "Ok", "");
}
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
    {
	     new Float:oldposx, Float:oldposy, Float:oldposz;
	     new Float:tempposx, Float:tempposy, Float:tempposz;
	     GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	     tempposx = (oldposx -x);
	     tempposy = (oldposy -y);
	     tempposz = (oldposz -z);
	     if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
    }
	return 0;
}
stock BizzStats(playerid, idx)
{
    new mafiatext[20];
    if(BizzInfo[idx][bMafia] == 6) { mafiatext = "Yakuza"; }
    else if(BizzInfo[idx][bMafia] == 14) { mafiatext = "Russian Mafia"; }
    else if(BizzInfo[idx][bMafia] == 5) { mafiatext = "La Cosa Nostra"; }
    else if(BizzInfo[idx][bMafia] == 0) { mafiatext = "None"; }
	if(BizzInfo[idx][bType] != 2)
	{
		format(stringer, 512, "= = = = = = = = = = = = = [ %s ] = = = = = = = = = = = = =\n\nOwner:\t\t\t\t\t%s\nControlled by the mafia:\t\t\t\t%s\n\nBusiness account:\t\t\t\t%s Money\nEarned in this hour:\t\t\t%s Money\nPrice per item (percentage):\t\t\t%i %%\nProducts:\t\t\t\t\t%i / 20000\nStatus:\t\t\t\t\t\t%s\nBusiness license:\t\t\t\t%s\nDowntime hours:\t\t\t\t\t%i ÷àñ(à/îâ)",
		BizzInfo[idx][bName], BizzInfo[idx][bOwner],mafiatext, formatInt(BizzInfo[idx][bMoney]), formatInt(BizzPay[idx]), BizzInfo[idx][bTill], BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("Open") : ("Closed"),(!BizzInfo[idx][bLic])?("No"):("Yes"),BizzInfo[idx][bLockTime]);
 	}
 	else//{0eaa07}Áèçíåñ ïðîäà¸òñÿ
 	{
 		format(stringer, 512, "= = = = = = = = = = = = = [ %s ] = = = = = = = = = = = = =\n\nOwner:\t\t\t\t\t%s\nControlled by the mafia:\t\t\t\t%s\nBusiness account:\t\t\t\t%s Money\nEarned in this hour:\t\t\t%s Money\nPrice for 1 liter:\t\t\t\t\t%i Money\nFuel:\t\t\t\t\t%i / 50000\nStatus:\t\t\t\t\t\t%s\nBusiness license:\t\t\t\t%s\nDowntime hours:\t\t\t\t\t%i ÷àñ(à/îâ)",
		BizzInfo[idx][bName], BizzInfo[idx][bOwner],mafiatext, formatInt(BizzInfo[idx][bMoney]), formatInt(BizzPay[idx]), BizzInfo[idx][bTill] / 3, BizzInfo[idx][bProduct]
		,(!BizzInfo[idx][bLock])?("Open") : ("Closed"),(!BizzInfo[idx][bLic])?("No"):("Yes"),BizzInfo[idx][bLockTime]);
 	}
 	ShowPlayerDialog(playerid, 000, 0, "Business", stringer, "Close", "");
 	return true;
}
stock UpdateBizz(idx)
{
	if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 8)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true)) format(stringer, 100, "{ffff00}%s (# %i)\n{0eaa07}Business for sale\nPrice of business: %d$", BizzInfo[idx][bName], idx, BizzInfo[idx][bPrice]);
		else if(BizzInfo[idx][bEnter] > 0) format(stringer, 250, "{ffff00}%s (# %i)\n{ffffff}Owner: {3399FF}%s\n{FFFFFF}Roof: {%s}%s\n{00cb00}Entrance: {FFCC00}%i$", BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]], BizzInfo[idx][bEnter]);
		else format(stringer, 250, "{ffff00}%s (# %i)\n{ffffff}Owner: {3399FF}%s\n{FFFFFF}Roof: {%s}%s\n{00cb00}entrance: {FFCC00}Free", BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]]);
	}
	else
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			if(BizzInfo[idx][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{0eaa07}Business is for sale\nBusiness price: %d$\n{FFFFFF}Price for 1 liter - {f9f906}%i$", BizzInfo[idx][bPrice], BizzInfo[idx][bTill] / 3);
			else format(stringer, 90, "{0eaa07}Business for sale\nName: %s", BizzInfo[idx][bName]);
		}
		else
		{
			if(BizzInfo[idx][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{FFFFFF}Owner: {0eaa07}%s\n{FFFFFF}Price for 1 liter - {f9f906}%i$",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], BizzInfo[idx][bTill] /3);
			//else format(stringer, 90, "Âëàäåëåö: %s\nÍàçâàíèå: %s\nRoof: {%s}%s\nÈñïîëüçóéòå ãóäîê äëÿ âüåçäà",  BizzInfo[idx][bOwner], BizzInfo[idx][bName], colorchat(BizzInfo[idx][bMafia], 2), GetPlayerFracName[BizzInfo[idx][bMafia]]);
			else format(stringer, 150, "{ffff00}%s (# %i)\n{FFFFFF}Owner: {42aaff}%s\nRoof: {%s}%s",  BizzInfo[idx][bName], idx, BizzInfo[idx][bOwner],colorchat(BizzInfo[idx][bMafia], 2),GetPlayerFracName[BizzInfo[idx][bMafia]]);
		}
	}
	UpdateDynamic3DTextLabelText(LABELBIZZ[idx], 0xFFFFFFFF, stringer);
	return true;
}
stock InfoCheats(playerid, id_code)
{
    new SendAc[128];
	new TextKick[50];
	switch(id_code)
	{
		case 0: TextKick = "AirBreak (onfoot)";
		case 1: TextKick = "AirBreak (in vehicle)";
		case 2: TextKick = "Teleport hack (onfoot)";
		case 3: TextKick = "Teleport hack (in vehicle)";
		case 4: TextKick = "Teleport hack (into/between vehicles)";
		case 5: TextKick = "Teleport hack (vehicle to player)";
		case 6: TextKick = "Teleport hack (pickups)";
		case 7: TextKick = "FlyHack (onfoot)";
		case 8: TextKick = "FlyHack (in vehicle)";
		case 9: TextKick = "SpeedHack (onfoot)";
		case 10: TextKick = "SpeedHack (in vehicle)";
		case 11: TextKick = "Health hack (in vehicle)";
		case 12: TextKick = "Health hack (onfoot)";
		case 13: TextKick = "Armour hack";
		case 14: TextKick = "Money hack";
		case 15: TextKick = "Weapon hack";
		case 16: TextKick = "Ammo hack (add)";
		case 17: TextKick = "Ammo hack (infinite)";
		case 18: TextKick = "Special actions hack";
		case 19: TextKick = "GodMode from bullets (onfoot)";
		case 20: TextKick = "GodMode from bullets (in vehicle)";
		case 21: TextKick = "Invisible hack";
		case 22: TextKick = "lagcomp-spoof";
		case 23: TextKick = "Tuning hack";
		case 24: TextKick = "Parkour mod";
		case 25: TextKick = "Quick turn";
		case 26: TextKick = "Rapid fire";
		case 27: TextKick = "FakeSpawn";
		case 28: TextKick = "FakeKill";
		case 29: TextKick = "Pro Aim";
		case 30: TextKick = "CJ run";
		case 31: TextKick = "CarShot";
		case 32: TextKick = "CarJack";
		case 33: TextKick = "UnFreeze";
		case 34: TextKick = "AFK Ghost";
		case 35: TextKick = "Full Aiming";
		case 36: TextKick = "Fake NPC";
		case 37: TextKick = "Anti-Reconnect";
		case 38: TextKick = "High ping";
		case 39: TextKick = "Dialog hack";
		case 40: TextKick = "SandBox";
		case 41: TextKick = "Invalid version";
		case 42: TextKick = "Rcon hack";
		case 43: TextKick = "Tuning crasher";
		case 44: TextKick = "Invalid seat crasher";
		case 45: TextKick = "Dialog crasher";
		case 46: TextKick = "Attached object crasher";
		case 47: TextKick = "Weapon Crasher";
		case 48: TextKick = "Connects to one slot";
		case 49: TextKick = "Callback functions";
		case 50: TextKick = "Change seat";
		case 51: TextKick = "Ddos";
		case 52: TextKick = "NOP's";
	}
	if(SettingInfo[CheatSetting][id_code] == 0) return true;
	if(SettingInfo[CheatSetting][id_code] == 1)
	{
		if(GetPVarInt(playerid, "AntiFloodAC") > gettime()) return true;

		format(SendAc, sizeof(SendAc),"{ff0000}Player %s[%i] maybe using a cheat: {FFFFFF}%s {FFFF00}(enter /re %d)",PlayerInfo[playerid][pNames],playerid,TextKick,playerid);
		SendAdminMessage(-1, SendAc);
	    SetPVarInt(playerid, "AntiFloodAC", gettime() + 2);
	}
	if(SettingInfo[CheatSetting][id_code] == 2)
	{
		format(SendAc, sizeof(SendAc),"{ff0000}Player %s[%i] was kicked for using a cheat: {FFFFFF}%s. {FFFF00}ERROR: (#%02d)",PlayerInfo[playerid][pNames],playerid,TextKick,id_code);
		SendAdminMessage(-1, SendAc);
		SendMes(playerid,-1,"{ff0000}You have been kicked for using cheats. {FFFF00}ERROR: (#%i)",id_code);
		SCM(playerid,-1,"{ff0000}If an ERROR occurred, write to a free server group {FFFF00}("PAGE_VK_FREE")");
		KickEx(playerid);
	}
	return true;
}
forward HJTimeLimit(playerid);
public HJTimeLimit(playerid)
{
    SpawnPlayer(playerid);
	ShowPlayerDialog(playerid,-1,0,"","","","");
	SetPlayerVirtualWorld(playerid, 0);
 	SetPlayerInterior(playerid,0);
	HackerJob[playerid] = 0;
	SendClientMessage(playerid,0xFF0000AA,"* Working time you're done, and you dont finish it.");
	return 1;
}
forward HackerSetup(playerid);
public HackerSetup(playerid)
{
    SetPlayerVirtualWorld(playerid, playerid+1);
    SetPlayerInterior(playerid,1);
    SetPlayerPos(playerid, 2164.7,1601.9,999.9);
	SetPlayerFacingAngle(playerid, 263.0);
	SetPlayerCameraPos(playerid, 2163.5,1601.9,1000.8);
	SetPlayerCameraLookAt(playerid, 2172.7,1601.9,999.9);
    ApplyAnimation(playerid,"INT_OFFICE","OFF_Sit_Type_Loop", 4.0, 1, 0, 0, 0, 0);
	SetTimerEx("HackerOne", 3000, 0, "d", playerid);
	SetPlayerExtra(playerid, INVALID_PLAYER_ID, 4, "Hacking the country's devices.");
	SendClientMessage(playerid, -1, "You have got {83b0eb}4 {ffff00}stars {ffffff}for hacking the country's system!");
    new hname[MAX_PLAYER_NAME], string[128];
    GetPlayerName(playerid, hname, sizeof(hname));
	format(string, sizeof(string), "{ffffff}The player {6c9fe6}%s {ffffff}was hacked the country's systems,{1612ff}Police/Fbi{ffffff} should go catch him now!", hname);
    SendClientMessageToAll(0xFFFFFFFF, string);
}

forward HackerOne(playerid);
public HackerOne(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    SetPlayerCameraLookAt(playerid, 2172.1,1601.7,999.9);
	ShowPlayerDialog(playerid, 1998, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nSystem is ready to hacking an important center\nType {FFff00}'began'{a8c4e4} to launch attacks", "Submit", "Cancel");
}

forward HackerTwo(playerid);
public HackerTwo(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    ApplyAnimation(playerid, "CARRY", "crry_prtial", 2.0, 0, 0, 0, 0, 0);
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 1999, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'keygen'{a8c4e4} to launch attacks", "Submit", "Cancel");
}

forward HackerThree(playerid);
public HackerThree(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2000, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'cracked'{a8c4e4} to launch attacks", "Submit", "Cancel");
}
forward HackerFour(playerid);
public HackerFour(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2001, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'worm' {a8c4e4}to launch attacks", "Submit", "Cancel");
}
forward HackerFive(playerid);
public HackerFive(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2002, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'virus'{a8c4e4} to launch attacks", "Submit", "Cancel");
}

forward HackerSix(playerid);
public HackerSix(playerid)
{
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    GameTextForPlayer(playerid,"~p~succeed",1000,6);
	ShowPlayerDialog(playerid, 2003, DIALOG_STYLE_INPUT, "root@localhost:~", "Login as: root\nThe system continues to the next center\nType {FFff00}'trojan' {a8c4e4}to launch attacks", "Submit", "Cancel");
}

forward HackerSeven(playerid);
public HackerSeven(playerid)
{
    KillTimer(HJLimitTimer);
    PlayerPlaySound( playerid, 1058, 0, 0, 0 );
    SetPlayerVirtualWorld(playerid, playerid+1);
    SetPlayerInterior(playerid,1);
    SetPlayerPos(playerid, 2164.7,1601.9,999.9);
	SetPlayerFacingAngle(playerid, 263.0);
	SetPlayerCameraPos(playerid, 2163.5,1601.9,1000.8);
	SetPlayerCameraLookAt(playerid, 2172.7,1601.9,999.9);
	ApplyAnimation(playerid,"CASINO","Roulette_win", 4.0, 1, 0, 0, 0, 0);
    GameTextForPlayer(playerid,"~p~succeed",2000,6);
	SendClientMessage(playerid,0x33FF33AA,"* You have completed the hacker job and get $15.000");
	PlayerInfo[playerid][pCash] +=15000;
	SpawnPlayerEx(playerid);
    DisablePlayerCheckpoint(playerid);
    SetTimerEx("HackerSuccesed", 3000, 0, "d", playerid);
    new hname[MAX_PLAYER_NAME], string[128];
    GetPlayerName(playerid, hname, sizeof(hname));
	format(string, sizeof(string), "{ffffff}The player {6c9fe6}%s {ffffff}has successfully hacked the state's devices", hname);
    SendClientMessageToAll(0xFFFFFFFF, string);
    ClearAnimations(playerid);
}

forward HackerSuccesed(playerid);
public HackerSuccesed(playerid)
{
    SpawnPlayer(playerid);
    SetPPos(playerid, -91.1709,-1576.5309,2.6172);
    SetPlayerVirtualWorld(playerid, 0);
	HackerJob[playerid] = 0;
	SetPlayerInterior(playerid, 0);
	TogglePlayerControllable(playerid,true);
    return 1;
}
forward OnCheatDetected(playerid, code);
public OnCheatDetected(playerid, code)
{
    switch(code)
    {
        case 0: InfoCheats(playerid, code);
        case 1: InfoCheats(playerid, code);
       	case 2: InfoCheats(playerid, code);
        case 3: InfoCheats(playerid, code);
        case 4: InfoCheats(playerid, code);
        case 5: InfoCheats(playerid, code);
        case 6: InfoCheats(playerid, code);
        case 7: InfoCheats(playerid, code);
        case 8: InfoCheats(playerid, code);
        case 9: InfoCheats(playerid, code);
        case 10: InfoCheats(playerid, code);
        case 11: InfoCheats(playerid, code);
        case 12: InfoCheats(playerid, code);
        case 13: InfoCheats(playerid, code);
        case 14: InfoCheats(playerid, code);
        case 15: InfoCheats(playerid, code);
        case 16: InfoCheats(playerid, code);
        case 17: InfoCheats(playerid, code);
        case 18: InfoCheats(playerid, code);
        case 19: InfoCheats(playerid, code);
        case 20: InfoCheats(playerid, code);
        case 21: InfoCheats(playerid, code);
        case 22: InfoCheats(playerid, code);
        case 23: InfoCheats(playerid, code);
        case 24: InfoCheats(playerid, code);
        case 25: InfoCheats(playerid, code);
        case 26: InfoCheats(playerid, code);
        case 27: InfoCheats(playerid, code);
        case 28: InfoCheats(playerid, code);
        case 29: InfoCheats(playerid, code);
        case 30: InfoCheats(playerid, code);
        case 31: InfoCheats(playerid, code);
        case 32: InfoCheats(playerid, code);
        case 33: InfoCheats(playerid, code);
        case 34: InfoCheats(playerid, code);
        case 35: InfoCheats(playerid, code);
        case 36: InfoCheats(playerid, code);
        case 37: InfoCheats(playerid, code);
        case 38: InfoCheats(playerid, code);
        case 39: InfoCheats(playerid, code);
        case 40: InfoCheats(playerid, code);
        case 41: InfoCheats(playerid, code);
        case 42: InfoCheats(playerid, code);
        case 43: InfoCheats(playerid, code);
        case 44: InfoCheats(playerid, code);
        case 45: InfoCheats(playerid, code);
        case 46: InfoCheats(playerid, code);
        case 47: InfoCheats(playerid, code);
        case 48: InfoCheats(playerid, code);
        case 49: InfoCheats(playerid, code);
        case 50: InfoCheats(playerid, code);
        case 51: InfoCheats(playerid, code);
        case 52: InfoCheats(playerid, code);
    }
    return true;
}
new reason_ac[][] = {"{FF6347}Disabled", "{C9C893}Report to chat", "{FF0000}Kick"};
stock ShowCheatSettingsApanel2(playerid)
{
	new string[1500];
	format(string,sizeof(string), "{9c9c9c}Name\t\t\t\t{9c9c9c}Punishment\n\
	{9c9c9c}[26] Rapid\t\t%s\n\
	{9c9c9c}[27] Fake spawn\t\t%s\n\
	{9c9c9c}[28] Fake kill\t\t%s\n\
	{9c9c9c}[29] please\t\t%s\n\
	{9c9c9c}[30] Running CJ\t\t%s\n\
	{9c9c9c}[31] CarShot\t\t%s\n\
	{9c9c9c}[32] race car\t\t%s\n\
	{9c9c9c}[33] Unfreeze\t\t%s\n\
	{9c9c9c}[34] AFK Ghost\t\t%s\n\
	{9c9c9c}[35] poi ein\t\t%s\n\
	{9c9c9c}[36] Fake NPC\t\t%s\n\
	{9c9c9c}[37] Reconnect\t\t%s\n\
	{9c9c9c}[38] High ping\t\t%s\n\
	{9c9c9c}[39] Dialogue hack\t\t%s\n\
	{9c9c9c}[40] Sandbox\t\t%s\n\
	{9c9c9c}[41] Invalid version\t\t%s\n\
	{9c9c9c}[42] RCON hack\t\t%s\n\
	{9c9c9c}[43] Young crusher\t\t%s\n\
	{9c9c9c}[44] Invalid crusher\t\t%s\n\
	{9c9c9c}[45] Crusher dialogue\t\t%s\n\
	{9c9c9c}[46] Crusher objects\t\t%s\n\
	{9c9c9c}[47] Weapon crusher\t\t%s\n\
	{9c9c9c}[48] Invalid connection\t\t%s\n\
	{9c9c9c}[49] Function callback\t\t%s\n\
	{9c9c9c}[50] Anti flow\t\t%s\n\
	{9c9c9c}[51] Ddos protection\t\t%s\n\
	{9c9c9c}[52] Anti-NOP\t\t%s\n\
 Previous page",reason_ac[SettingInfo[CheatSetting][26]],
	reason_ac[SettingInfo[CheatSetting][27]],
	reason_ac[SettingInfo[CheatSetting][28]],
	reason_ac[SettingInfo[CheatSetting][29]],
	reason_ac[SettingInfo[CheatSetting][30]],
	reason_ac[SettingInfo[CheatSetting][31]],
	reason_ac[SettingInfo[CheatSetting][32]],
	reason_ac[SettingInfo[CheatSetting][33]],
	reason_ac[SettingInfo[CheatSetting][34]],
	reason_ac[SettingInfo[CheatSetting][35]],
	reason_ac[SettingInfo[CheatSetting][36]],
	reason_ac[SettingInfo[CheatSetting][37]],
	reason_ac[SettingInfo[CheatSetting][38]],
	reason_ac[SettingInfo[CheatSetting][39]],
	reason_ac[SettingInfo[CheatSetting][40]],
	reason_ac[SettingInfo[CheatSetting][41]],
	reason_ac[SettingInfo[CheatSetting][42]],
	reason_ac[SettingInfo[CheatSetting][43]],
	reason_ac[SettingInfo[CheatSetting][44]],
	reason_ac[SettingInfo[CheatSetting][45]],
	reason_ac[SettingInfo[CheatSetting][46]],
	reason_ac[SettingInfo[CheatSetting][47]],
	reason_ac[SettingInfo[CheatSetting][48]],
	reason_ac[SettingInfo[CheatSetting][49]],
	reason_ac[SettingInfo[CheatSetting][50]],
	reason_ac[SettingInfo[CheatSetting][51]],
	reason_ac[SettingInfo[CheatSetting][52]]);
	ShowPlayerDialog(playerid, 379, DIALOG_STYLE_TABLIST_HEADERS, "apanel | Founder's Menu | {FFFFFF}Anti cheat settings", string,"Next","Close");
	return true;
}
stock ShowCheatSettingsApanel(playerid)
{
	new string[1500];
	format(string,sizeof(string), "{9c9c9c}Name\t\t\t\t{9c9c9c}Punishment\n\
	{9c9c9c}[0] Airbreak on foot\t\t%s\n\
	{9c9c9c}[1] Airbreak in the car\t\t%s\n\
	{9c9c9c}[2] Teleport on foot\t\t%s\n\
	{9c9c9c}[3] Teleport in the car\t\t%s\n\
	{9c9c9c}[4] Teleport to car\t\t%s\n\
	{9c9c9c}[5] Teleport in the car to the player\t\t%s\n\
	{9c9c9c}[6] Teleport to pickup\t\t%s\n\
	{9c9c9c}[7] Flyhack on foot\t\t%s\n\
	{9c9c9c}[8] Flyhack in a car\t\t%s\n\
	{9c9c9c}[9] Speedhack on foot\t\t%s\n\
	{9c9c9c}[10] Speedhack in a car\t\t%s\n\
	{9c9c9c}[11] Car repair\t\t%s\n\
	{9c9c9c}[12] Player health\t\t%s\n\
	{9c9c9c}[13] Armor\t\t%s\n\
	{9c9c9c}[14] Money(dollars)\t\t%s\n\
	{9c9c9c}[15] Weapon\t\t%s\n\
	{9c9c9c}[16] Adding Ammo\t\t%s\n\
	{9c9c9c}[17] Endless ammo\t\t%s\n\
	{9c9c9c}[18] Special Actions\t\t%s\n\
	{9c9c9c}[19] h player\t\t%s\n\
	{9c9c9c}[20] GM car\t\t%s\n\
	{9c9c9c}[21] Invisible\t\t%s\n\
	{9c9c9c}[22] Lagger\t\t%s\n\
	{9c9c9c}[23] Runing\t\t%s\n\
	{9c9c9c}[24] Parkour mod\t\t%s\n\
	{9c9c9c}[25] Quick player turn\t\t%s\n\
	Next page",reason_ac[SettingInfo[CheatSetting][0]],
	reason_ac[SettingInfo[CheatSetting][1]],
	reason_ac[SettingInfo[CheatSetting][2]],
	reason_ac[SettingInfo[CheatSetting][3]],
	reason_ac[SettingInfo[CheatSetting][4]],
	reason_ac[SettingInfo[CheatSetting][5]],
	reason_ac[SettingInfo[CheatSetting][6]],
	reason_ac[SettingInfo[CheatSetting][7]],
	reason_ac[SettingInfo[CheatSetting][8]],
	reason_ac[SettingInfo[CheatSetting][9]],
	reason_ac[SettingInfo[CheatSetting][10]],
	reason_ac[SettingInfo[CheatSetting][11]],
	reason_ac[SettingInfo[CheatSetting][12]],
	reason_ac[SettingInfo[CheatSetting][13]],
	reason_ac[SettingInfo[CheatSetting][14]],
	reason_ac[SettingInfo[CheatSetting][15]],
	reason_ac[SettingInfo[CheatSetting][16]],
	reason_ac[SettingInfo[CheatSetting][17]],
	reason_ac[SettingInfo[CheatSetting][18]],
	reason_ac[SettingInfo[CheatSetting][19]],
	reason_ac[SettingInfo[CheatSetting][20]],
	reason_ac[SettingInfo[CheatSetting][21]],
	reason_ac[SettingInfo[CheatSetting][22]],
	reason_ac[SettingInfo[CheatSetting][23]],
	reason_ac[SettingInfo[CheatSetting][24]],
	reason_ac[SettingInfo[CheatSetting][25]]);
	ShowPlayerDialog(playerid, 378, DIALOG_STYLE_TABLIST_HEADERS, "Anti-cheat setup "NAME_SERVER" Role Play", string,"Next","Back");
	return true;
}
forward AUsePromocode(playerid, code[]);
public AUsePromocode(playerid, code[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new query[144];
		format(query, sizeof(query), "SELECT * FROM `promocodes` WHERE `Name` = '%s'", code);
		mysql_function_query(connects, query, true, "CheckPromocode", "ds", playerid, code);
	} else SendClientMessage(playerid, 0xafafafff, "Have you already used this promotional code?!");
	return true;
}
stock GetPlayerBizz(playerid)
{
	new bizz = 0;
	for(new i = 1; i <= TOTALBIZZ;i++)
	{
		if(!strcmp(BizzInfo[i][bOwner],PlayerInfo[playerid][pNames],false) && strcmp(BizzInfo[i][bOwner],"None",true) != 0) bizz++, SetPVarInt(playerid, "PlayerBizz", i);
	}
	return bizz;
}
stock BuyHouse(h)
{
	if(HouseInfo[h][hOwned] == 0)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 31, COLOR_WHITE, 0, -1, -1, 200.0);
		Update3dHouse3d(h);
	}
	if(HouseInfo[h][hOwned] == 1)
	{
		DestroyDynamicMapIcon(HouseInfo[h][hMIcon]);
		DestroyPickup(HouseInfo[h][hPickup]);
		AddStaticPickup(19522, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
		HouseInfo[h][hMIcon] = CreateDynamicMapIcon(HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez], 32, COLOR_WHITE, 0, -1, -1, 200.0);
		Update3dHouse3d(h);
	}
	return true;
}
stock CreateVehicleEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay, Addsiren)
{
	new idd = CreateVehicle(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay, Addsiren);
	VEHICLE [ idd - 1 ][ v_X ] = X;
	VEHICLE [ idd - 1 ][ v_Y ] = Y;
	VEHICLE [ idd - 1 ][ v_Z ] = Z;
	VEHICLE [ idd - 1 ][ v_A ] = A;
	VEHICLE [ idd - 1 ][ vHealth ] = 1000.0;
	VEHICLE [ idd - 1 ][ vLock ] = 0;
	Iter_Add(valid_vehicles, idd);
	return idd;
}

stock AddStaticVehicleExEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay, Addsiren)
{
	new idd = AddStaticVehicleEx(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay, Addsiren);
	VEHICLE [ idd - 1 ][ v_X ] = X;
	VEHICLE [ idd - 1 ][ v_Y ] = Y;
	VEHICLE [ idd - 1 ][ v_Z ] = Z;
	VEHICLE [ idd - 1 ][ v_A ] = A;
	VEHICLE [ idd - 1 ][ vHealth ] = 1000.0;
	VEHICLE [ idd - 1 ][ vLock ] = 0;
	Iter_Add(valid_vehicles, idd);
	return idd;
}

stock AddStaticVehicleExx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2)
{
	new idd = AddStaticVehicle(modelid, X, Y, Z, A, Color1, Color2);
	VEHICLE [ idd - 1 ][ v_X ] = X;
	VEHICLE [ idd - 1 ][ v_Y ] = Y;
	VEHICLE [ idd - 1 ][ v_Z ] = Z;
	VEHICLE [ idd - 1 ][ v_A ] = A;
	VEHICLE [ idd - 1 ][ vHealth ] = 1000.0;
	VEHICLE [ idd - 1 ][ vLock ] = 0;
	Iter_Add(valid_vehicles, idd);
	return idd;
}

stock DestroyVehicleEx(vehicleid)
{
	if(Iter_Contains(valid_vehicles, vehicleid))
        Iter_Remove(valid_vehicles, vehicleid);
	return DestroyVehicle(vehicleid);
}

stock SetVehicleEE(vehicleid, Float: X, Float: Y, Float: Z)
{
	VEHICLE[vehicleid -1][v_X] = X;
	VEHICLE[vehicleid -1][v_Y] = Y;
	VEHICLE[vehicleid -1][v_Z] = Z;
	foreach(Player,i)
    {
        if (IsPlayerConnected(i) && IsPlayerInVehicle(i, vehicleid))
        {
			PlayerInfo[i][pPos_x] = X;
			PlayerInfo[i][pPos_y] = Y;
			PlayerInfo[i][pPos_z] = Z;
			break;
   		}
 	}
	return SetVehiclePos(vehicleid, X, Y, Z);
}
stock SetVehicleZAngleEx(vehicleid, Float: Angle)
{
	VEHICLE [ vehicleid - 1 ][ v_A ] = Angle;
	SetVehicleZAngle(vehicleid, Angle);
	return true;
}
/******************************************************************************/
main() return true;
/******************************************************************************/
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    VehicleID[playerid] = vehicleid;
	Refueling[playerid] = 0;
	return true;
}
stock IsAMedic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==4) return true;
		if(leader==4) return true;
	}
	return false;
}
stock IsAMayor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayerInfo[playerid][pMember] == 7) return true;
		else if(PlayerInfo[playerid][pLeader] == 7) return true;
	}
	return false;
}
stock IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==1 || member==2 || member==21 || member ==25 || member==10 || member==26) return true;
		if(leader==21 || leader==2 || leader == 10 || leader == 1 || leader==25 || leader==26) return true;
	}
	return false;
}
stock IsAArm(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new leader = PlayerInfo[playerid][pLeader];
		new member = PlayerInfo[playerid][pMember];
		if(member==3 || member==19 || member==1 || member==2 || member==21 || member==10) return true;
		else if(leader==3 || leader==19) return true;
	}
	return false;
}
stock SetPPos( playerid, Float:x, Float:y, Float:z )
{
    PlayerInfo[ playerid ][ pPos_x ] = x;
    PlayerInfo[ playerid ][ pPos_y ] = y;
    PlayerInfo[ playerid ][ pPos_z ] = z;
    return SetPlayerPos( playerid, x, y, z );
}
stock IsATerra(playerid)
{
    if(PlayerInfo[playerid][pMember] == 12 && IsPlayerInRangeOfPoint(playerid,50.0,2000.9352,-1133.1912,25.3022) // BALLAS
            ||PlayerInfo[playerid][pMember] == 13 && IsPlayerInRangeOfPoint(playerid,50.0,2754.7273,-1177.4165,69.4040) // VAGOS
            ||PlayerInfo[playerid][pMember] == 15 && IsPlayerInRangeOfPoint(playerid,50.0,2492.7532,-1676.3687,13.3380) // GROVE
            ||PlayerInfo[playerid][pMember] == 17 && IsPlayerInRangeOfPoint(playerid,50.0,1713.9735,-2114.5122,13.3828) // AZTECAS
            ||PlayerInfo[playerid][pMember] == 18 && IsPlayerInRangeOfPoint(playerid,50.0,2184.1218,-1803.6334,13.3693) // RIFA
            ||PlayerInfo[playerid][pMember] == 12 && IsPlayerInRangeOfPoint(playerid,50.0,-61.2984,1364.5847,1080.2109) && GetPlayerVirtualWorld(playerid) == 34 // BALLAS 34
            ||PlayerInfo[playerid][pMember] == 13 && IsPlayerInRangeOfPoint(playerid,50.0,303.6300,309.2500,999.1484) // VAGOS
            ||PlayerInfo[playerid][pMember] == 15 && IsPlayerInRangeOfPoint(playerid,50.0,2496.0129,-1708.9232,1014.7422) // GROVE
            ||PlayerInfo[playerid][pMember] == 17 && IsPlayerInRangeOfPoint(playerid,50.0,-49.7558,1400.3553,1084.4297) && GetPlayerVirtualWorld(playerid) == 36 // AZTECAS 36
            ||PlayerInfo[playerid][pMember] == 18 && IsPlayerInRangeOfPoint(playerid,50.0,-223.8400,1410.5100,27.7734)) // RIFA
            {
        return true;
    }
    return false;
}
new Float:Atms[21][3] = {
	{-1676.34570312,434.01806641,7.08183193},
	{-818.55200195,1567.63708496,27.01933098},
	{-2421.45410156,958.35540771,45.18632126},
	{2174.20336914,1402.93469238,10.96464443},
	{-2621.31445312,1415.23510742,6.88521862},
	{1587.30920410,2218.34838867,10.96464443},
	{-2452.32275391,2252.62988281,4.87058449},
	{2187.36035156,2478.89160156,11.14433193},
	{-1282.38098145,2715.18652344,50.16842651},
	{-2033.32604980,159.50723267,28.94120598},
	{91.92106628,1180.56555176,18.56620598},
	{2236.16186523,-1665.79772949,15.27980804},
	{847.58093262,-1799.19348145,13.71945286},
	{1367.56359863,-1290.13696289,13.44901943},
	{-78.74282837,-1171.64892578,1.95329499},
	{1142.44287109,-1763.92932129,13.59816360},
	{-1551.53637695,-2737.33691406,48.64560318},
	{661.71307373,-576.21777344,16.25428581},
	{557.32824707,-1294.28137207,17.24994087},
	{-2035.70605469,-102.35491180,35.07402039},
	{1919.78381348,-1766.21813965,13.44901943}
};
stock IsABankomat(playerid)
{
	for(new i = 0; i < sizeof(Atms); i++) {
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Atms[i][0], Atms[i][1], Atms[i][2])) return true;
	}
	return false;
}
stock IsAFoods(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 2, -2420.219, 984.578, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2420.180, 985.945, 44.297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2225.203, -1153.422, 1025.906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2576.703, -1284.430, 1061.094)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.906, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.906, 1607.195, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.203, 1606.773, 1000.055)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 495.969, -24.320, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 501.828, -1.430, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 373.828, -178.141, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 330.680, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 331.922, 178.500, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 350.906, 206.086, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 361.563, 158.617, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 371.594, 178.453, 1020.070)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 374.891, 188.977, 1008.477)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2155.844, 1607.875, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2202.453, 1617.008, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2209.242, 1621.211, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2222.367, 1602.641, 1000.063)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 500.563, -1.367, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 379.039, -178.883, 1000.734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2480.86,-1959.27,12.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1634.11,-2237.53,12.8906)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2139.52,-1161.48,23.3594)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2153.23,-1016.15,62.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,493.859,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2229.19,286.414,34.7031)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1659.46,1722.86,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2647.7,1129.66,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2845.73,1295.05,10.7891)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1398.84,2222.61,10.4219)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1455.12,2591.66,55.2344)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -76.0312,1227.99,19.125)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 662.43,-552.164,15.7109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2599.76,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2271.73,-76.4609,25.9609)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1789.21,-1369.27,15.1641)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1729.79,-1943.05,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2060.12,-1897.64,12.9297)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1928.73,-1772.45,12.9453)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2325.98,-1645.13,14.2109)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2352.18,-1357.16,23.7734)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1154.73,-1460.89,15.1562)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1350.12,492.289,10.5859)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.97,-423.648,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2118.62,-422.414,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2097.27,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2092.09,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2063.27,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2005.65,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2034.46,-490.055,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2068.56,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2039.85,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -2011.14,-398.336,34.7266)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -1980.79,142.664,27.0703)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2319.99,2532.85,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1520.15,1055.27,10.00)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2503.14,1243.7,10.2188)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 2085.77,2071.36,10.4531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -862.828,1536.61,21.9844)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -14.7031,1175.36,18.9531)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, -253.742,2597.95,62.2422)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 201.016,-107.617,0.898438)) return true;
	else if(IsPlayerInRangeOfPoint(playerid, 2, 1277.84,372.516,18.9531)) return true;
	else return false;
}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock IsABike(carid){switch(GetVehicleModel(carid)){case 510,509,481:return true;}return false;}
//==============================================================================
//new PlayerText:Capture[MAX_PLAYERS][4];//
new PlayerText:CaptureTD[MAX_PLAYERS][5];
new IsCapture;
#define MAX_GANGS 20
enum Ganginfa
{
	capture,
	score,
	captureid,
	gangnumber
}
new GangInfo[MAX_GANGS][Ganginfa];
#define MAX_GZONE 150
new ZoneOnBattle[MAX_GZONE];
new allowedfactions[] = {12,13,15,17,18};
new GZSafeTime[MAX_GZONE];
enum GzoneInfo
{
	id,
Float:gCoords[4],
	gFrak,
	gNapad
}
new GZInfo[MAX_GZONE][GzoneInfo];
new CaptureKills[MAX_PLAYERS];
new TOTALGZ, IDzone = -1;
new Timer[10];
stock CaptureEnd(familyone, familytwo)
{
	new BestPlayer, BestKills, string[144], query[144];
	foreach (new i : Player)
	{
	    if(!IsAGang(i)) continue;
		if(PlayerInfo[i][pMember] == familyone || PlayerInfo[i][pMember] == familytwo)
		{
			if(CaptureKills[i] > BestKills) {
				BestKills = CaptureKills[i];
				BestPlayer = i;
			}
			CaptureKills[i] = 0;
			PlayerTextDrawHide(i, CaptureTD[i][0]);
			PlayerTextDrawHide(i, CaptureTD[i][1]);
			PlayerTextDrawHide(i, CaptureTD[i][2]);
			PlayerTextDrawHide(i, CaptureTD[i][3]);
			PlayerTextDrawHide(i, CaptureTD[i][4]);
			if(!PlayerInfo[i][pAlcoInvenxua]) ClearKillFeed(i);
			SetPVarInt(i,"GzOn",0);
			format(query, sizeof(query), "UPDATE `accounts` SET `pKInCapt` = '%d' WHERE `pID` = '%d'", PlayerInfo[i][pKInCapt], PlayerInfo[i][pID]);
			mysql_function_query(connects, query, false, "", "");
		}
	}
	if(BestKills > 0) {
		format(string, sizeof(string), "{efff00}Best Capture Player %s[%d] Most Highest Killed %d people(s)", PlayerInfo[BestPlayer][pNames], BestPlayer, BestKills);
		MessageCriminal(COLOR_YELLOW, string, true);
	}
}
stock CaptureUpd(bandkiller)
{
	new SCORE1[128];
	new SCORE2[128];
	foreach (new i : Player)
	{
		if(!IsAGang(i)) continue;
		if(GangInfo[PlayerInfo[i][pMember]][capture] > 0)
		{
			if(GangInfo[bandkiller][gangnumber] == 1)
			{
                format(SCORE1,30,"~w~%s ~r~%d",GetPlayerFracName[GZInfo[IDzone][gNapad]],GangInfo[bandkiller][score]);
                PlayerTextDrawSetString(i,CaptureTD[i][3],SCORE1);
			}
			else
			{
				format(SCORE2,30,"~w~%s ~r~%d",GetPlayerFracName[GZInfo[IDzone][gFrak]],GangInfo[bandkiller][score]);
                PlayerTextDrawSetString(i,CaptureTD[i][4],SCORE2);
			}
		}
	}
}
stock SendDead(ids,whoids,killerid,playerid,reason)
{
    foreach (new m : Player)
	{
        if(PlayerInfo[m][pAlcoInvenxua]) continue;
	    if(PlayerInfo[m][pMember] == ids || PlayerInfo[m][pMember] == whoids)
	    {
    		SendDeathMessageToPlayer(m, killerid, playerid, reason);
    	}
    }
    return 1;
}
stock GzCheck()
{
	if(GZSafeTime[IDzone] > 0)
	{
		GZSafeTime[IDzone]--;
		foreach (new x : Player)
		{
			if(PlayerInfo[x][pMember] == GZInfo[IDzone][gNapad] || PlayerInfo[x][pMember] == GZInfo[IDzone][gFrak])
			{
   				new SCORE3[128];
			    if(GetPVarInt(x,"GzOn") == 0)
			    {
       				new BANDAA[128],BANDAB[128];
			        GangZoneFlashForPlayer(x,GZInfo[IDzone][id],GetGangColor(GZInfo[IDzone][gNapad]));
           			PlayerTextDrawShow(x, CaptureTD[x][0]);
              		PlayerTextDrawShow(x, CaptureTD[x][1]);
                	format(SCORE3,30," %s",Convert(GZSafeTime[IDzone]));
	                PlayerTextDrawSetString(x,CaptureTD[x][2],SCORE3);
					PlayerTextDrawShow(x, CaptureTD[x][2]);
	                format(BANDAB,30,"~w~%s ~r~0",GetPlayerFracName[GZInfo[IDzone][gNapad]]);
		            PlayerTextDrawSetString(x,CaptureTD[x][3],BANDAB);
		            PlayerTextDrawShow(x, CaptureTD[x][3]);
		            format(BANDAA,30,"~w~%s ~r~0",GetPlayerFracName[GZInfo[IDzone][gFrak]]);
		            PlayerTextDrawSetString(x,CaptureTD[x][4],BANDAA);
		            PlayerTextDrawShow(x, CaptureTD[x][4]);
					SetPVarInt(x,"GzOn",1);
	    		}
				format(SCORE3,30," %s",Convert(GZSafeTime[IDzone]));
    			PlayerTextDrawSetString(x,CaptureTD[x][2],SCORE3);
			}
		}
	}
	if(ZoneOnBattle[IDzone] == 1 && GZSafeTime[IDzone] == 0)
	{
		if(GangInfo[GZInfo[IDzone][gNapad]][score] > GangInfo[GZInfo[IDzone][gFrak]][score] ||
			GangInfo[GZInfo[IDzone][gNapad]][score] == 0 && GangInfo[GZInfo[IDzone][gFrak]][score] == 0)
		{
			new zx,zl;
			zx = GZInfo[IDzone][gNapad];
			zl = IDzone;
			if(GZInfo[zl][gFrak] == 18) TotalGzR--;
			else if(GZInfo[zl][gFrak] == 17) TotalGzA--;
			else if(GZInfo[zl][gFrak] == 15) TotalGzG--;
			else if(GZInfo[zl][gFrak] == 13) TotalGzV--;
			else if(GZInfo[zl][gFrak] == 12) TotalGzB--;
			format(stringer1,90,"[CAPTURE] The %s wins the capture zone!!",GetPlayerFracName[zx]);
			SendFamilyMessage(GZInfo[IDzone][gFrak],COLOR_LIGHTRED, stringer1);
			SendFamilyMessage(GZInfo[IDzone][gNapad],COLOR_LIGHTRED, stringer1);
			ZoneOnBattle[zl] =0;
			CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
			GangInfo[GZInfo[zl][gNapad]][captureid] = 0;
			GangInfo[GZInfo[zl][gNapad]][capture] = 0;
			GangInfo[GZInfo[zl][gNapad]][score] = 0;
			GangInfo[GZInfo[zl][gFrak]][captureid] = 0;
			GangInfo[GZInfo[zl][gFrak]][capture] = 0;
			GangInfo[GZInfo[zl][gFrak]][score] = 0;
			GangInfo[GZInfo[IDzone][gNapad]][gangnumber] = 0;
			GangInfo[GZInfo[IDzone][gFrak]][gangnumber] = 0;
			GZInfo[zl][gFrak] = zx;
			if(GZInfo[zl][gFrak] == 18) TotalGzR++;
			else if(GZInfo[zl][gFrak] == 17) TotalGzA++;
			else if(GZInfo[zl][gFrak] == 15) TotalGzG++;
			else if(GZInfo[zl][gFrak] == 13) TotalGzV++;
			else if(GZInfo[zl][gFrak] == 12) TotalGzB++;
			if(IDzone == 47)
			{
				format(stringer1, sizeof (stringer1),  "Den\nUnder control:\n %s\nDrug price: %d",GetPlayerFracName[GZInfo[47][gNapad]],pricelist);
    			UpdateDynamic3DTextLabelText(PritonLable,COLOR_GREEN,stringer1);
    		}
			GZInfo[zl][gNapad] = 0;
			IsCapture = 0;
			GangZoneStopFlashForAll(GZInfo[zl][id]);
			GangZoneHideForAll(GZInfo[zl][id]);
			GangZoneShowForAll(GZInfo[zl][id],GetGangZoneColor(zl));
			SaveGZ(zl);
    		skladband();
			Timer[7] = 0;
			IDzone = -1;
		}
		else if(GangInfo[GZInfo[IDzone][gNapad]][score] < GangInfo[GZInfo[IDzone][gFrak]][score] ||
			GangInfo[GZInfo[IDzone][gNapad]][score] == GangInfo[GZInfo[IDzone][gFrak]][score])
		{
			new zx,zl;
			zx = GZInfo[IDzone][gFrak];
			zl = IDzone;
			format(stringer1,90,"[F] The %s wins zone capture",GetPlayerFracName[zx]);
			SendFamilyMessage(GZInfo[IDzone][gFrak],COLOR_LIGHTRED, stringer1);
			format(stringer1,90,"[F] The %s gang won, you lost the zone capture",GetPlayerFracName[zx]);
			SendFamilyMessage(GZInfo[IDzone][gNapad],COLOR_LIGHTRED, stringer1);

			ZoneOnBattle[zl] =0;
			CaptureEnd(GZInfo[zl][gNapad], GZInfo[zl][gFrak]);
			GangInfo[GZInfo[zl][gNapad]][captureid] = 0;
			GangInfo[GZInfo[zl][gNapad]][capture] = 0;
			GangInfo[GZInfo[zl][gNapad]][score] = 0;
			GangInfo[GZInfo[zl][gFrak]][captureid] = 0;
			GangInfo[GZInfo[zl][gFrak]][capture] = 0;
			GangInfo[GZInfo[zl][gFrak]][score] = 0;
			GangInfo[GZInfo[IDzone][gNapad]][gangnumber] = 0;
			GangInfo[GZInfo[IDzone][gFrak]][gangnumber] = 0;
			IsCapture = 0;
			GZInfo[zl][gFrak] = zx;
			GZInfo[zl][gNapad] = 0;
			GangZoneStopFlashForAll(GZInfo[zl][id]);
			GangZoneHideForAll(GZInfo[zl][id]);
			GangZoneShowForAll(GZInfo[zl][id],GetGangZoneColor(zl));
			SaveGZ(zl);
			Timer[7] = 0;
			IDzone = -1;
		}
	}
}
Convert(number)
{
	new hours = 0, mins = 0, secs = 0, string[100];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0)
	{
		format(string, 100, "%i:%02dm:%02ds", hours, mins, secs);
	}
	else
	{
		format(string, 100, "%i:%02d", mins, secs);
	}
	return string;
}
stock IsInAllowed(playerid)
{
	for(new i =0;i<sizeof(allowedfactions);i++) { if(PlayerInfo[playerid][pMember] == allowedfactions[i]&&PlayerInfo[playerid][pRank] >= 7) return true; }
	return false;
}
stock IsAPlane(carid)
{
	switch(GetVehicleModel(carid)) {
		case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469,425: return true;
	}
	return false;
}
stock IsANoSpeed(carid)
{
	switch(GetVehicleModel(carid)){
		case 441,448,449,450,462,464,465,481,501,509,510,537,538,564,569,570,590,591,594,606,607,608,610,611: return true;
	}
	return false;
}
stock IsAMatsCar(carid)
{
    if(carid >= matscar[0] && carid <= matscar[1]) return true;
	return false;
}
stock PutPlayerInVeh(playerid, vehicleid, seatid)
{
	VehicleID[playerid] = vehicleid;
    return PutPlayerInVehicle(playerid, vehicleid, seatid);
}
stock CreateTextDraw(playerid)
{

	DestroyPlayerTD(playerid, ActionText[playerid]);
	DestroyPlayerTD(playerid, ActionBand[playerid]);
	DestroyPlayerTD(playerid, AimNameDraw[playerid]);
	
		//_________________________________[TextDraw's]_____________________________
	work0 = TextDrawCreate(491.411773, 225.500000, "usebox");
	TextDrawLetterSize(work0, 0.000000, 2.599999);
	TextDrawTextSize(work0, 417.294128, 0.000000);
	TextDrawAlignment(work0, 1);
	TextDrawColor(work0, 0);
	TextDrawUseBox(work0, true);
	TextDrawBoxColor(work0, 102);
	TextDrawSetShadow(work0, 0);
	TextDrawSetOutline(work0, 0);
	TextDrawFont(work0, 0);

	work1 = TextDrawCreate(489.117767, 228.250030, "usebox");
	TextDrawLetterSize(work1, 0.000000, 1.941176);
	TextDrawTextSize(work1, 419.647125, 0.000000);
	TextDrawAlignment(work1, 1);
	TextDrawColor(work1, 0);
	TextDrawUseBox(work1, true);
	TextDrawBoxColor(work1, -1523963137);
	TextDrawSetShadow(work1, 0);
	TextDrawSetOutline(work1, 0);
	TextDrawBackgroundColor(work1, -1523963137);
	TextDrawFont(work1, 0);

	work2 = TextDrawCreate(491.470611, 254.500015, "usebox");
	TextDrawLetterSize(work2, 0.000000, 2.505882);
	TextDrawTextSize(work2, 417.294128, 0.000000);
	TextDrawAlignment(work2, 1);
	TextDrawColor(work2, 0);
	TextDrawUseBox(work2, true);
	TextDrawBoxColor(work2, 102);
	TextDrawSetShadow(work2, 0);
	TextDrawSetOutline(work2, 0);
	TextDrawFont(work2, 0);

	work3 = TextDrawCreate(489.176513, 257.250000, "usebox");
	TextDrawLetterSize(work3, 0.000000, 1.894117);
	TextDrawTextSize(work3, 419.176452, 0.000000);
	TextDrawAlignment(work3, 1);
	TextDrawColor(work3, 0);
	TextDrawUseBox(work3, true);
	TextDrawBoxColor(work3, -1523963137);
	TextDrawSetShadow(work3, 0);
	TextDrawSetOutline(work3, 0);
	TextDrawFont(work3, 0);

	work4 = TextDrawCreate(426.352844, 216.416625, "WORK STATUS:");
	TextDrawLetterSize(work4, 0.244823, 0.876666);
	TextDrawAlignment(work4, 1);
	TextDrawColor(work4, -1);
	TextDrawSetShadow(work4, 0);
	TextDrawSetOutline(work4, 1);
	TextDrawBackgroundColor(work4, 51);
	TextDrawFont(work4, 1);
	TextDrawSetProportional(work4, 1);

	work5 = TextDrawCreate(427.764587, 230.416687, "_");
	TextDrawLetterSize(work5, 0.324344, 1.343326);
	TextDrawAlignment(work5, 1);
	TextDrawColor(work5, -1);
	TextDrawSetShadow(work5, 0);
	TextDrawSetOutline(work5, 1);
	TextDrawBackgroundColor(work5, 51);
	TextDrawFont(work5, 3);
	TextDrawSetProportional(work5, 1);

	work6 = TextDrawCreate(424.529357, 260.000000, "_");
	TextDrawLetterSize(work6, 0.257529, 1.150833);
	TextDrawAlignment(work6, 1);
	TextDrawColor(work6, -1);
	TextDrawSetShadow(work6, 0);
	TextDrawSetOutline(work6, 1);
	TextDrawBackgroundColor(work6, 51);
	TextDrawFont(work6, 3);
	TextDrawSetProportional(work6, 1);

	samp4 = TextDrawCreate(122.999954, 243.911163, "You are at the prison on Asian city Role-Play");
	TextDrawLetterSize(samp4, 0.449999, 1.600000);
	TextDrawAlignment(samp4, 1);
	TextDrawColor(samp4, 0xFF0000FF);
	TextDrawSetShadow(samp4, 0);
	TextDrawSetOutline(samp4, 1);
	TextDrawBackgroundColor(samp4, 51);
	TextDrawFont(samp4, 1);
	TextDrawSetProportional(samp4, 1);

	Kenji[0] = TextDrawCreate(137.000000, 368.000000, "_");
	TextDrawBackgroundColor(Kenji[0], 255);
	TextDrawFont(Kenji[0], 1);
	TextDrawLetterSize(Kenji[0], 0.200000, 6.199998);
	TextDrawColor(Kenji[0], -1);
	TextDrawSetOutline(Kenji[0], 0);
	TextDrawSetProportional(Kenji[0], 1);
	TextDrawSetShadow(Kenji[0], 1);
	TextDrawUseBox(Kenji[0], 1);
	TextDrawBoxColor(Kenji[0], 255);
	TextDrawTextSize(Kenji[0], -40.000000, 65.000000);
	TextDrawSetSelectable(Kenji[0], 0);

	Kenji[1] = TextDrawCreate(7.000000, 380.000000, "News");
	TextDrawBackgroundColor(Kenji[1], 255);
	TextDrawFont(Kenji[1], 1);
	TextDrawLetterSize(Kenji[1], 0.490000, 3.199999);
	TextDrawColor(Kenji[1], -1);
	TextDrawSetOutline(Kenji[1], 0);
	TextDrawSetProportional(Kenji[1], 1);
	TextDrawSetShadow(Kenji[1], 1);
	TextDrawSetSelectable(Kenji[1], 0);

	Kenji[2] = TextDrawCreate(684.000000, 377.000000, "_");
	TextDrawBackgroundColor(Kenji[2], 255);
	TextDrawFont(Kenji[2], 1);
	TextDrawLetterSize(Kenji[2], 0.410000, 5.199997);
	TextDrawColor(Kenji[2], -1);
	TextDrawSetOutline(Kenji[2], 0);
	TextDrawSetProportional(Kenji[2], 1);
	TextDrawSetShadow(Kenji[2], 1);
	TextDrawUseBox(Kenji[2], 1);
	TextDrawBoxColor(Kenji[2], -16776961);
	TextDrawTextSize(Kenji[2], 134.000000, -139.000000);
	TextDrawSetSelectable(Kenji[2], 0);

	Kenji[3] = TextDrawCreate(676.000000, 427.000000, "_");
	TextDrawBackgroundColor(Kenji[3], 255);
	TextDrawFont(Kenji[3], 1);
	TextDrawLetterSize(Kenji[3], 0.450000, 1.700000);
	TextDrawColor(Kenji[3], -1);
	TextDrawSetOutline(Kenji[3], 0);
	TextDrawSetProportional(Kenji[3], 1);
	TextDrawSetShadow(Kenji[3], 1);
	TextDrawUseBox(Kenji[3], 1);
	TextDrawBoxColor(Kenji[3], -1);
	TextDrawTextSize(Kenji[3], 0.000000, 0.000000);
	TextDrawSetSelectable(Kenji[3], 0);

	Kenji[4] = TextDrawCreate(138.000000, 425.000000, "Asian city RolePlay");
	TextDrawBackgroundColor(Kenji[4], 255);
	TextDrawFont(Kenji[4], 2);
	TextDrawLetterSize(Kenji[4], 0.450000, 1.800000);
	TextDrawColor(Kenji[4], 0xFFF000FF);
	TextDrawSetOutline(Kenji[4], 0);
	TextDrawSetProportional(Kenji[4], 1);
	TextDrawSetShadow(Kenji[4], 1);
	TextDrawSetSelectable(Kenji[4], 0);

	Kenji[5] = TextDrawCreate(672.000000, 342.000000, " _");
	TextDrawBackgroundColor(Kenji[5], 255);
	TextDrawFont(Kenji[5], 1);
	TextDrawLetterSize(Kenji[5], 0.290000, 1.800000);
	TextDrawColor(Kenji[5], -1);
	TextDrawSetOutline(Kenji[5], 0);
	TextDrawSetProportional(Kenji[5], 1);
	TextDrawSetShadow(Kenji[5], 1);
	TextDrawUseBox(Kenji[5], 1);
	TextDrawBoxColor(Kenji[5], 255);
	TextDrawTextSize(Kenji[5], 568.000000, -216.000000);
	TextDrawSetSelectable(Kenji[5], 0);

	Kenji[6] = TextDrawCreate(587.000000, 343.000000, "live");
	TextDrawBackgroundColor(Kenji[6], 255);
	TextDrawFont(Kenji[6], 1);
	TextDrawLetterSize(Kenji[6], 0.609999, 3.099999);
	TextDrawColor(Kenji[6], -16776961);
	TextDrawSetOutline(Kenji[6], 0);
	TextDrawSetProportional(Kenji[6], 1);
	TextDrawSetShadow(Kenji[6], 1);
	TextDrawSetSelectable(Kenji[6], 0);

	Kenji[7] = TextDrawCreate(143.000000, 387.000000, ""); // text
	TextDrawBackgroundColor(Kenji[7], 255);
	TextDrawFont(Kenji[7], 1);
	TextDrawLetterSize(Kenji[7], 0.490000, 2.499999);
	TextDrawColor(Kenji[7], -1);
	TextDrawSetOutline(Kenji[7], 0);
	TextDrawSetProportional(Kenji[7], 1);
	TextDrawSetShadow(Kenji[7], 1);
	TextDrawSetSelectable(Kenji[7], 0);
//==============================================================================================
    GenuineLogo[0] = TextDrawCreate(404.000, 6.000, "Asian city");
    TextDrawLetterSize(GenuineLogo[0], 0.409, 2.599);
    TextDrawAlignment(GenuineLogo[0], 1);
    TextDrawColor(GenuineLogo[0], 255);
    TextDrawSetShadow(GenuineLogo[0], 1);
    TextDrawSetOutline(GenuineLogo[0], 1);
    TextDrawBackgroundColor(GenuineLogo[0], -16776961);
    TextDrawFont(GenuineLogo[0], 2);
    TextDrawSetProportional(GenuineLogo[0], 1);

    GenuineLogo[1] = TextDrawCreate(447.046, 23.250, "ROLEPLAY");
    TextDrawLetterSize(GenuineLogo[1], 0.289, 2.035);
    TextDrawAlignment(GenuineLogo[1], 2);
    TextDrawColor(GenuineLogo[1], -1);
    TextDrawSetShadow(GenuineLogo[1], 0);
    TextDrawSetOutline(GenuineLogo[1], 1);
    TextDrawBackgroundColor(GenuineLogo[1], 255);
    TextDrawFont(GenuineLogo[1], 2);
    TextDrawSetProportional(GenuineLogo[1], 1);

/*    GenuineLogo[2] = TextDrawCreate(435.000, 40.000, "HUD:radar_girlfriend");
    TextDrawTextSize(GenuineLogo[2], 21.000, 19.000);
    TextDrawAlignment(GenuineLogo[2], 1);
    TextDrawColor(GenuineLogo[2], -1);
    TextDrawSetShadow(GenuineLogo[2], 0);
    TextDrawSetOutline(GenuineLogo[2], 0);
    TextDrawBackgroundColor(GenuineLogo[2], 255);
    TextDrawFont(GenuineLogo[2], 4);
    TextDrawSetProportional(GenuineLogo[2], 1);

    GenuineLogo[3] = TextDrawCreate(380.000, 12.000, "_");
    TextDrawTextSize(GenuineLogo[3], 23.000, 23.000);
    TextDrawAlignment(GenuineLogo[3], 1);
    TextDrawColor(GenuineLogo[3], -1);
    TextDrawSetShadow(GenuineLogo[3], 0);
    TextDrawSetOutline(GenuineLogo[3], 0);
    TextDrawBackgroundColor(GenuineLogo[3], 85);
    TextDrawFont(GenuineLogo[3], 5);
    TextDrawSetProportional(GenuineLogo[3], 0);
    TextDrawSetPreviewModel(GenuineLogo[3], 2255);
    TextDrawSetPreviewRot(GenuineLogo[3], 0.000, 0.000, 0.000, 1.000);
    TextDrawSetPreviewVehCol(GenuineLogo[3], -7, 46);*/


//===================================================================================

//===================================================================================


/*    td_logo[0] = TextDrawCreate(108.000099, 227.733322, "Asia Paradise");
    TextDrawLetterSize(td_logo[0], 0.449999, 1.600000);
    TextDrawAlignment(td_logo[0], 1);
    TextDrawColor(td_logo[0], 0xffff00FF);
    TextDrawSetShadow(td_logo[0], 0);
    TextDrawSetOutline(td_logo[0], 1);
    TextDrawBackgroundColor(td_logo[0], 51);
    TextDrawFont(td_logo[0], 3);
    TextDrawSetProportional(td_logo[0], 1);

    td_logo[5] = TextDrawCreate(122.999954, 243.911163, "Roleplay");
    TextDrawLetterSize(td_logo[5], 0.449999, 1.600000);
    TextDrawAlignment(td_logo[5], 1);
    TextDrawColor(td_logo[5], -1);
    TextDrawSetShadow(td_logo[5], 0);
    TextDrawSetOutline(td_logo[5], 1);
    TextDrawBackgroundColor(td_logo[5], 51);
    TextDrawFont(td_logo[5], 1);
    TextDrawSetProportional(td_logo[5], 1);
   	td_logo[0] = TextDrawCreate(562.932129, 9.470100, "Asia Paradise");
	TextDrawLetterSize(td_logo[0], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[0], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[0], 1);
	TextDrawColor(td_logo[0], 0xD0070FFF);
	TextDrawUseBox(td_logo[0], 0);
	TextDrawBoxColor(td_logo[0], 0x80808080);
	TextDrawSetShadow(td_logo[0], 0);
	TextDrawSetOutline(td_logo[0], 0);
	TextDrawBackgroundColor(td_logo[0], 0x000000FF);
	TextDrawFont(td_logo[0], 1);
	TextDrawSetProportional(td_logo[0], 1);
	TextDrawSetSelectable(td_logo[0], 0);

	td_logo[5] = TextDrawCreate(562.332214, 8.770100, "Roleplay");
	TextDrawLetterSize(td_logo[5], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[5], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[5], 1);
	TextDrawColor(td_logo[5], 0x99ff00FF);
	TextDrawUseBox(td_logo[5], 0);
	TextDrawBoxColor(td_logo[5], 0x80808080);
	TextDrawSetShadow(td_logo[5], 0);
	TextDrawSetOutline(td_logo[5], 0);
	TextDrawBackgroundColor(td_logo[5], 0x000000FF);
	TextDrawFont(td_logo[5], 1);
	TextDrawSetProportional(td_logo[5], 1);
	TextDrawSetSelectable(td_logo[5], 0);*/

	//
// Ãëîáàëüíûå òåêñòäðàâû

/*	td_logo[0] = TextDrawCreate(562.932129, 9.470100, "Asia Paradise");
	TextDrawLetterSize(td_logo[0], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[0], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[0], 1);
	TextDrawColor(td_logo[0], 0xD0070FFF);
	TextDrawUseBox(td_logo[0], 0);
	TextDrawBoxColor(td_logo[0], 0x80808080);
	TextDrawSetShadow(td_logo[0], 0);
	TextDrawSetOutline(td_logo[0], 0);
	TextDrawBackgroundColor(td_logo[0], 0x000000FF);
	TextDrawFont(td_logo[0], 1);
	TextDrawSetProportional(td_logo[0], 1);
	TextDrawSetSelectable(td_logo[0], 0);

	td_logo[1] = TextDrawCreate(587.330322, 21.085100, "Roleplay");
	TextDrawLetterSize(td_logo[1], 0.141000, 0.965200);
	TextDrawTextSize(td_logo[1], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[1], 2);
	TextDrawColor(td_logo[1], 0xFFFFFFFF);
	TextDrawUseBox(td_logo[1], 0);
	TextDrawBoxColor(td_logo[1], 0x80808080);
	TextDrawSetShadow(td_logo[1], 0);
	TextDrawSetOutline(td_logo[1], 0);
	TextDrawBackgroundColor(td_logo[1], 0x000000FF);
	TextDrawFont(td_logo[1], 2);
	TextDrawSetProportional(td_logo[1], 1);
	TextDrawSetSelectable(td_logo[1], 0);

	td_logo[2] = TextDrawCreate(616.066711, 4.836900, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[2], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[2], 10.000000, 9.000000);
	TextDrawAlignment(td_logo[2], 1);
	TextDrawColor(td_logo[2], 0xFFFFFFFF);
	TextDrawUseBox(td_logo[2], 0);
	TextDrawBoxColor(td_logo[2], 0x80808080);
	TextDrawSetShadow(td_logo[2], 0);
	TextDrawSetOutline(td_logo[2], 0);
	TextDrawBackgroundColor(td_logo[2], 0x000000FF);
	TextDrawFont(td_logo[2], 4);
	TextDrawSetProportional(td_logo[2], 0);
	TextDrawSetSelectable(td_logo[2], 0);

	td_logo[3] = TextDrawCreate(616.266724, 7.737100, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[3], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[3], 10.000000, 7.000000);
	TextDrawAlignment(td_logo[3], 1);
	TextDrawColor(td_logo[3], 0xEF222BFF);
	TextDrawUseBox(td_logo[3], 0);
	TextDrawBoxColor(td_logo[3], 0x80808080);
	TextDrawSetShadow(td_logo[3], 0);
	TextDrawSetOutline(td_logo[3], 0);
	TextDrawBackgroundColor(td_logo[3], 0x000000FF);
	TextDrawFont(td_logo[3], 4);
	TextDrawSetProportional(td_logo[3], 0);
	TextDrawSetSelectable(td_logo[3], 0);

	td_logo[4] = TextDrawCreate(617.566711, 8.614700, "LD_SPAC:white");
	TextDrawLetterSize(td_logo[4], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[4], 7.000000, 3.000000);
	TextDrawAlignment(td_logo[4], 1);
	TextDrawColor(td_logo[4], 0x2849A1FF);
	TextDrawUseBox(td_logo[4], 0);
	TextDrawBoxColor(td_logo[4], 0x80808080);
	TextDrawSetShadow(td_logo[4], 0);
	TextDrawSetOutline(td_logo[4], 0);
	TextDrawBackgroundColor(td_logo[4], 0x000000FF);
	TextDrawFont(td_logo[4], 4);
	TextDrawSetProportional(td_logo[4], 0);
	TextDrawSetSelectable(td_logo[4], 0);

	td_logo[5] = TextDrawCreate(562.332214, 8.770100, "The Asia Paradise Rp");
	TextDrawLetterSize(td_logo[5], 0.335900, 1.550000);
	TextDrawTextSize(td_logo[5], 1280.000000, 1280.000000);
	TextDrawAlignment(td_logo[5], 1);
	TextDrawColor(td_logo[5], 0xFB2E37FF);
	TextDrawUseBox(td_logo[5], 0);
	TextDrawBoxColor(td_logo[5], 0x80808080);
	TextDrawSetShadow(td_logo[5], 0);
	TextDrawSetOutline(td_logo[5], 0);
	TextDrawBackgroundColor(td_logo[5], 0x000000FF);
	TextDrawFont(td_logo[5], 1);
	TextDrawSetProportional(td_logo[5], 1);
	TextDrawSetSelectable(td_logo[5], 0);

	td_logo[6] = TextDrawCreate(552.133118, 23.918501, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[6], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[6], 10.000000, 9.000000);
	TextDrawAlignment(td_logo[6], 1);
	TextDrawColor(td_logo[6], 0xFFFFFFFF);
	TextDrawUseBox(td_logo[6], 0);
	TextDrawBoxColor(td_logo[6], 0x80808080);
	TextDrawSetShadow(td_logo[6], 1);
	TextDrawSetOutline(td_logo[6], 0);
	TextDrawBackgroundColor(td_logo[6], 0x000000FF);
	TextDrawFont(td_logo[6], 4);
	TextDrawSetProportional(td_logo[6], 0);
	TextDrawSetSelectable(td_logo[6], 0);

	td_logo[7] = TextDrawCreate(552.333130, 26.818701, "LD_BEAT:chit");
	TextDrawLetterSize(td_logo[7], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[7], 9.779800, 7.000000);
	TextDrawAlignment(td_logo[7], 1);
	TextDrawColor(td_logo[7], 0xEF222BFF);
	TextDrawUseBox(td_logo[7], 0);
	TextDrawBoxColor(td_logo[7], 0x80808080);
	TextDrawSetShadow(td_logo[7], 1);
	TextDrawSetOutline(td_logo[7], 0);
	TextDrawBackgroundColor(td_logo[7], 0x000000FF);
	TextDrawFont(td_logo[7], 4);
	TextDrawSetProportional(td_logo[7], 0);
	TextDrawSetSelectable(td_logo[7], 0);

	td_logo[8] = TextDrawCreate(553.433228, 27.696100, "LD_SPAC:white");
	TextDrawLetterSize(td_logo[8], 0.480000, 1.120000);
	TextDrawTextSize(td_logo[8], 7.000000, 3.000000);
	TextDrawAlignment(td_logo[8], 1);
	TextDrawColor(td_logo[8], 0x2849A1FF);
	TextDrawUseBox(td_logo[8], 0);
	TextDrawBoxColor(td_logo[8], 0x80808080);
	TextDrawSetShadow(td_logo[8], 1);
	TextDrawSetOutline(td_logo[8], 0);
	TextDrawBackgroundColor(td_logo[8], 0x000000FF);
	TextDrawFont(td_logo[8], 4);
	TextDrawSetProportional(td_logo[8], 0);
	TextDrawSetSelectable(td_logo[8], 0);*/
    //
    if(gSkinShopPriceDraw[playerid] == PlayerText:-1)
	{
	gSkinShopPriceDraw[playerid] = CreatePlayerTextDraw(playerid, 31.000000, 224.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, gSkinShopPriceDraw[playerid], 255);
	PlayerTextDrawFont(playerid, gSkinShopPriceDraw[playerid], 3);
	PlayerTextDrawLetterSize(playerid, gSkinShopPriceDraw[playerid], 0.500000, 1.600000);
	PlayerTextDrawColor(playerid, gSkinShopPriceDraw[playerid], -1);
	PlayerTextDrawSetOutline(playerid, gSkinShopPriceDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid, gSkinShopPriceDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, gSkinShopPriceDraw[playerid], 1);
	}
	InfoText[playerid] = CreatePlayerTextDraw(playerid, 400,300,"-");
	PlayerTextDrawBackgroundColor(playerid, InfoText[playerid],0x000000FF);
	PlayerTextDrawFont(playerid, InfoText[playerid],2);
	PlayerTextDrawLetterSize(playerid, InfoText[playerid],0.42,1.1);
	PlayerTextDrawColor(playerid, InfoText[playerid],COLOR_WHITE);
	PlayerTextDrawSetOutline(playerid, InfoText[playerid],1);
	PlayerTextDrawSetProportional(playerid, InfoText[playerid],1);
	PlayerTextDrawSetShadow(playerid, InfoText[playerid],1);
   	//--------[CAPTURE-SYSTEM]--------//
	CaptureTD[playerid][0] = CreatePlayerTextDraw(playerid,1, 285, "_");
	PlayerTextDrawUseBox(playerid,CaptureTD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid,CaptureTD[playerid][0], 0x00000075);
	PlayerTextDrawTextSize(playerid,CaptureTD[playerid][0], 150.0, 400.0);
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][0], 0.0, 5.3);
	CaptureTD[playerid][1] = CreatePlayerTextDraw(playerid,10.0, 285.0, "Time:");
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][1], 0.4, 1.2);
	PlayerTextDrawColor(playerid,CaptureTD[playerid][1], 0x37FA00FF);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,CaptureTD[playerid][1], 1);
	CaptureTD[playerid][2] = CreatePlayerTextDraw(playerid,50.0, 285.0, "7:00");
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][2], 0.4, 1.2);
	PlayerTextDrawColor(playerid,CaptureTD[playerid][2], 0x37FA00FF);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][2], 2);
	CaptureTD[playerid][3] = CreatePlayerTextDraw(playerid,10.0, 300.0, "Ballas Gang");
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][3], 0.4, 1.2);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][3], 2);
	CaptureTD[playerid][4] = CreatePlayerTextDraw(playerid,10.0, 315.0, "Grove Street");
	PlayerTextDrawUseBox(playerid,CaptureTD[playerid][4], 0);
	PlayerTextDrawLetterSize(playerid,CaptureTD[playerid][4], 0.4, 1.2);
	PlayerTextDrawFont(playerid,CaptureTD[playerid][4], 2);
	//
    td_speed[playerid][0] = CreatePlayerTextDraw(playerid, 260.000, 372.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][0], -0.000, 2.188);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][0], 365.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][0], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][0], -16776961);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][0], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][0], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][0], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][0], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][0], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][0], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][0], 1);

    td_speed[playerid][1] = CreatePlayerTextDraw(playerid, 260.000, 391.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][1], 0.000, 2.188);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][1], 365.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][1], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][1], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][1], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][1], 65535);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][1], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][1], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][1], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][1], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][1], 1);

    td_speed[playerid][2] = CreatePlayerTextDraw(playerid, 260.000, 414.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][2], 0.000, 2.188);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][2], 365.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][2], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][2], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][2], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][2], -16776961);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][2], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][2], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][2], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][2], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][2], 1);

    td_speed[playerid][3] = CreatePlayerTextDraw(playerid, 261.000, 374.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][3], 0.000, 6.388);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][3], 364.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][3], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][3], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][3], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][3], 151);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][3], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][3], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][3], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][3], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][3], 1);

    td_speed[playerid][4] = CreatePlayerTextDraw(playerid, 195.000, 360.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][4], 0.000, 6.282);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][4], 254.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][4], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][4], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][4], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][4], 87);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][4], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][4], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][4], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][4], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][4], 1);

    td_speed[playerid][5] = CreatePlayerTextDraw(playerid, 190.000, 422.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][5], 0.000, 1.158);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][5], 257.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][5], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][5], 65535);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][5], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][5], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][5], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][5], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][5], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][5], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][5], 1);

    td_speed[playerid][6] = CreatePlayerTextDraw(playerid, 224.000, 421.000, "infernus");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][6], 0.270, 1.214);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][6], 0.000, -16.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][6], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][6], -16776961);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][6], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][6], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][6], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][6], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][6], 1);

    td_speed[playerid][7] = CreatePlayerTextDraw(playerid, 193.000, 347.000, "_");
    PlayerTextDrawTextSize(playerid, td_speed[playerid][7], 74.000, 83.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][7], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][7], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawFont(playerid, td_speed[playerid][7], 5);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][7], 0);
    PlayerTextDrawSetPreviewModel(playerid, td_speed[playerid][7], 411);
    PlayerTextDrawSetPreviewRot(playerid, td_speed[playerid][7], 0.000, 0.000, 335.000, 1.000);
    PlayerTextDrawSetPreviewVehCol(playerid, td_speed[playerid][7], 1, 1);

    td_speed[playerid][8] = CreatePlayerTextDraw(playerid, 270.000, 372.000, "FUEL:");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][8], 0.379, 1.804);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][8], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][8], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][8], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][8], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][8], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][8], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][8], 1);

    td_speed[playerid][9] = CreatePlayerTextDraw(playerid, 336.000, 372.000, "40l");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][9], 0.379, 1.804);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][9], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][9], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][9], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][9], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][9], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][9], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][9], 1);

    td_speed[playerid][10] = CreatePlayerTextDraw(playerid, 262.000, 390.000, "HEALTH:");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][10], 0.332, 2.233);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][10], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][10], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][10], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][10], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][10], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][10], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][10], 1);

    td_speed[playerid][11] = CreatePlayerTextDraw(playerid, 341.000, 388.000, "100%");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][11], 0.365, 2.607);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][11], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][11], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][11], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][11], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][11], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][11], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][11], 1);

    td_speed[playerid][12] = CreatePlayerTextDraw(playerid, 288.000, 408.000, "100");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][12], 0.421, 2.854);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][12], 2);
    PlayerTextDrawColor(playerid, td_speed[playerid][12], -1);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][12], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][12], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][12], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][12], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][12], 1);

    td_speed[playerid][13] = CreatePlayerTextDraw(playerid, 309.000, 409.000, "KM/H");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][13], 0.417, 2.646);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][13], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][13], -16776961);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][13], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][13], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][13], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][13], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][13], 1);

    td_speed[playerid][14] = CreatePlayerTextDraw(playerid, 260.000, 353.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][14], 0.000, 1.388);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][14], 303.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][14], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][14], -1);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][14], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][14], 118);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][14], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][14], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][14], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][14], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][14], 1);

    td_speed[playerid][15] = CreatePlayerTextDraw(playerid, 310.000, 353.000, "Box");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][15], 0.000, 1.388);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][15], 358.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][15], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][15], -1);
    PlayerTextDrawUseBox(playerid, td_speed[playerid][15], 1);
    PlayerTextDrawBoxColor(playerid, td_speed[playerid][15], 118);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][15], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][15], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][15], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][15], 1);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][15], 1);

    td_speed[playerid][16] = CreatePlayerTextDraw(playerid, 265.000, 351.000, "LOCK");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][16], 0.335, 1.570);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][16], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][16], 8388863);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][16], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][16], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][16], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][16], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][16], 1);

    td_speed[playerid][17] = CreatePlayerTextDraw(playerid, 314.000, 351.000, "engine");
    PlayerTextDrawLetterSize(playerid, td_speed[playerid][17], 0.294, 1.588);
    PlayerTextDrawTextSize(playerid, td_speed[playerid][17], 7.000, 0.000);
    PlayerTextDrawAlignment(playerid, td_speed[playerid][17], 1);
    PlayerTextDrawColor(playerid, td_speed[playerid][17], 8388863);
    PlayerTextDrawSetShadow(playerid, td_speed[playerid][17], 0);
    PlayerTextDrawSetOutline(playerid, td_speed[playerid][17], 0);
    PlayerTextDrawBackgroundColor(playerid, td_speed[playerid][17], 255);
    PlayerTextDrawFont(playerid, td_speed[playerid][17], 2);
    PlayerTextDrawSetProportional(playerid, td_speed[playerid][17], 1);

	//
	ActionText[playerid] = CreatePlayerTextDraw(playerid, 325.000000, 83.000000, "PRESS ~r~ENTER");
	PlayerTextDrawAlignment(playerid, ActionText[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, ActionText[playerid], 255);
	PlayerTextDrawFont(playerid, ActionText[playerid], 2);
	PlayerTextDrawLetterSize(playerid, ActionText[playerid], 0.909999, 2.599999);
	PlayerTextDrawColor(playerid, ActionText[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionText[playerid], 1);
	PlayerTextDrawSetProportional(playerid, ActionText[playerid], 1);
	//
	ActionBand[playerid] = CreatePlayerTextDraw(playerid, 205.000000, 112.000000, "Band");
	PlayerTextDrawBackgroundColor(playerid, ActionBand[playerid], 255);
	PlayerTextDrawFont(playerid, ActionBand[playerid], 1);
	PlayerTextDrawLetterSize(playerid, ActionBand[playerid], -0.000000, 0.899999);
	PlayerTextDrawColor(playerid, ActionBand[playerid], -1);
	PlayerTextDrawSetOutline(playerid, ActionBand[playerid], 0);
	PlayerTextDrawSetProportional(playerid, ActionBand[playerid], 1);
	PlayerTextDrawSetShadow(playerid, ActionBand[playerid], 1);
	PlayerTextDrawUseBox(playerid, ActionBand[playerid], 1);
	PlayerTextDrawBoxColor(playerid, ActionBand[playerid], 0xFF990055);
	PlayerTextDrawTextSize(playerid, ActionBand[playerid], 201.000000, 0.000000);
	//
	AimNameDraw[playerid] = CreatePlayerTextDraw(playerid, 322.000000, 16.000000, "~w~Invalid Player ~g~(-1)");
	PlayerTextDrawAlignment(playerid, AimNameDraw[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, AimNameDraw[playerid], 255);
	PlayerTextDrawFont(playerid, AimNameDraw[playerid], 2);
	PlayerTextDrawLetterSize(playerid, AimNameDraw[playerid], 0.209999, 0.899999);
	PlayerTextDrawColor(playerid, AimNameDraw[playerid], -1);
	PlayerTextDrawSetOutline(playerid, AimNameDraw[playerid], 0);
	PlayerTextDrawSetProportional(playerid, AimNameDraw[playerid], 1);
	PlayerTextDrawSetShadow(playerid, AimNameDraw[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, AimNameDraw[playerid], 0);
	//
	Target1 = CreatePlayerTextDraw(playerid, 402.000000, 8.000000, "BoxTarget1");
	PlayerTextDrawBackgroundColor(playerid, Target1, 255);
	PlayerTextDrawFont(playerid, Target1, 1);
	PlayerTextDrawLetterSize(playerid, Target1, 0.000000, 5.099997);
	PlayerTextDrawColor(playerid, Target1, -1);
	PlayerTextDrawSetOutline(playerid, Target1, 0);
	PlayerTextDrawSetProportional(playerid, Target1, 1);
	PlayerTextDrawSetShadow(playerid, Target1, 1);
	PlayerTextDrawUseBox(playerid, Target1, 1);
	PlayerTextDrawBoxColor(playerid, Target1, 48);
	PlayerTextDrawTextSize(playerid, Target1, 243.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, Target1, 0);

	Target2 = CreatePlayerTextDraw(playerid, 400.000000, 10.000000, "BoxTarget2");
	PlayerTextDrawBackgroundColor(playerid, Target2, 255);
	PlayerTextDrawFont(playerid, Target2, 1);
	PlayerTextDrawLetterSize(playerid, Target2, 0.000000, 4.599998);
	PlayerTextDrawColor(playerid, Target2, -1);
	PlayerTextDrawSetOutline(playerid, Target2, 0);
	PlayerTextDrawSetProportional(playerid, Target2, 1);
	PlayerTextDrawSetShadow(playerid, Target2, 1);
	PlayerTextDrawUseBox(playerid, Target2, 1);
	PlayerTextDrawBoxColor(playerid, Target2, 80);
	PlayerTextDrawTextSize(playerid, Target2, 245.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, Target2, 0);

	Target3 = CreatePlayerTextDraw(playerid, 400.000000, 35.000000, "BoxHP");
	PlayerTextDrawBackgroundColor(playerid, Target3, 255);
	PlayerTextDrawFont(playerid, Target3, 1);
	PlayerTextDrawLetterSize(playerid, Target3, 0.000000, 0.400000);
	PlayerTextDrawColor(playerid, Target3, -1);
	PlayerTextDrawSetOutline(playerid, Target3, 0);
	PlayerTextDrawSetProportional(playerid, Target3, 1);
	PlayerTextDrawSetShadow(playerid, Target3, 1);
	PlayerTextDrawUseBox(playerid, Target3, 1);
	PlayerTextDrawBoxColor(playerid, Target3, -1408430593);
	PlayerTextDrawTextSize(playerid, Target3, 245.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, Target3, 0);

	Target5 = CreatePlayerTextDraw(playerid,400.000000, 45.000000, "BoxARMOUR");
	PlayerTextDrawBackgroundColor(playerid,Target5, 255);
	PlayerTextDrawFont(playerid,Target5, 1);
	PlayerTextDrawLetterSize(playerid,Target5, 0.000000, 0.400000);
	PlayerTextDrawColor(playerid,Target5, -1);
	PlayerTextDrawSetOutline(playerid,Target5, 0);
	PlayerTextDrawSetProportional(playerid,Target5, 1);
	PlayerTextDrawSetShadow(playerid,Target5, 1);
	PlayerTextDrawUseBox(playerid,Target5, 1);
	PlayerTextDrawBoxColor(playerid,Target5, 794073599);
	PlayerTextDrawTextSize(playerid,Target5, 245.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,Target5, 0);

	Target4[playerid] = CreatePlayerTextDraw(playerid, 321.000000, 33.000000, "100");
	PlayerTextDrawAlignment(playerid, Target4[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, Target4[playerid], 255);
	PlayerTextDrawFont(playerid, Target4[playerid], 2);
	PlayerTextDrawLetterSize(playerid, Target4[playerid], 0.189999, 0.699998);
	PlayerTextDrawColor(playerid, Target4[playerid], -1);
	PlayerTextDrawSetOutline(playerid, Target4[playerid], 0);
	PlayerTextDrawSetProportional(playerid, Target4[playerid], 1);
	PlayerTextDrawSetShadow(playerid, Target4[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, Target4[playerid], 0);

	Target6[playerid] = CreatePlayerTextDraw(playerid,321.000000, 43.000000, "100");
	PlayerTextDrawAlignment(playerid,Target6[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid,Target6[playerid], 255);
	PlayerTextDrawFont(playerid,Target6[playerid], 2);
	PlayerTextDrawLetterSize(playerid,Target6[playerid], 0.189999, 0.699998);
	PlayerTextDrawColor(playerid,Target6[playerid], -1);
	PlayerTextDrawSetOutline(playerid,Target6[playerid], 0);
	PlayerTextDrawSetProportional(playerid,Target6[playerid], 1);
	PlayerTextDrawSetShadow(playerid,Target6[playerid], 1);
	PlayerTextDrawSetSelectable(playerid,Target6[playerid], 0);

	ShopText[playerid] = CreatePlayerTextDraw(playerid,509.000000,180.000000,"Model: Landstalker");
	PlayerTextDrawBackgroundColor(playerid,ShopText[playerid],255);
	PlayerTextDrawFont(playerid,ShopText[playerid],1);
	PlayerTextDrawSetOutline(playerid,ShopText[playerid],1);
	PlayerTextDrawSetShadow(playerid,ShopText[playerid],0);
	PlayerTextDrawLetterSize(playerid,ShopText[playerid],0.270000,1.200000);
	PlayerTextDrawColor(playerid,ShopText[playerid],-1);
	PlayerTextDrawSetProportional(playerid,ShopText[playerid],1);

	//
	Race[0][playerid] = CreatePlayerTextDraw(playerid, 640.334045, 134.551856, "usebox");
	PlayerTextDrawLetterSize(playerid, Race[0][playerid], 0.000000, 13.309654);
	PlayerTextDrawTextSize(playerid, Race[0][playerid], 506.666656, 0.000000);
	PlayerTextDrawAlignment(playerid, Race[0][playerid], 1);
	PlayerTextDrawColor(playerid, Race[0][playerid], 0);
	PlayerTextDrawUseBox(playerid, Race[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, Race[0][playerid], 103182250);
	PlayerTextDrawSetShadow(playerid, Race[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[0][playerid], 0);
	PlayerTextDrawFont(playerid, Race[0][playerid], 1);

	Race[1][playerid] = CreatePlayerTextDraw(playerid, 638.666687, 139.944572, "usebox");
	PlayerTextDrawLetterSize(playerid, Race[1][playerid], 0.000000, 5.295255);
	PlayerTextDrawTextSize(playerid, Race[1][playerid], 509.333282, 0.000000);
	PlayerTextDrawAlignment(playerid, Race[1][playerid], 1);
	PlayerTextDrawColor(playerid, Race[1][playerid], 0);
	PlayerTextDrawUseBox(playerid, Race[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, Race[1][playerid], -8912726);
	PlayerTextDrawSetShadow(playerid, Race[1][playerid], 9);
	PlayerTextDrawSetOutline(playerid, Race[1][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[1][playerid], 41215);
	PlayerTextDrawFont(playerid, Race[1][playerid], 0);

	Race[2][playerid] = CreatePlayerTextDraw(playerid, 513.333374, 142.177764, "1.");
	PlayerTextDrawLetterSize(playerid, Race[2][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[2][playerid], 1);
	PlayerTextDrawColor(playerid, Race[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[2][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[2][playerid], 51);
	PlayerTextDrawFont(playerid, Race[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[2][playerid], 1);

	Race[3][playerid] = CreatePlayerTextDraw(playerid, 513.000000, 156.696304, "2.");
	PlayerTextDrawLetterSize(playerid, Race[3][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[3][playerid], 1);
	PlayerTextDrawColor(playerid, Race[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[3][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[3][playerid], 51);
	PlayerTextDrawFont(playerid, Race[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[3][playerid], 1);

	Race[4][playerid] = CreatePlayerTextDraw(playerid, 513.333251, 170.800003, "3.");
	PlayerTextDrawLetterSize(playerid, Race[4][playerid], 0.240666, 1.272296);
	PlayerTextDrawAlignment(playerid, Race[4][playerid], 1);
	PlayerTextDrawColor(playerid, Race[4][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[4][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[4][playerid], 51);
	PlayerTextDrawFont(playerid, Race[4][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[4][playerid], 1);

	Race[5][playerid] = CreatePlayerTextDraw(playerid, 511.333465, 216.429656, "Racers:");
	PlayerTextDrawLetterSize(playerid, Race[5][playerid], 0.204000, 0.990222);
	PlayerTextDrawAlignment(playerid, Race[5][playerid], 1);
	PlayerTextDrawColor(playerid, Race[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[5][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[5][playerid], 51);
	PlayerTextDrawFont(playerid, Race[5][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[5][playerid], 1);

	Race[6][playerid] = CreatePlayerTextDraw(playerid, 511.333374, 225.555618, "Point:");
	PlayerTextDrawLetterSize(playerid, Race[6][playerid], 0.204000, 0.990222);
	PlayerTextDrawAlignment(playerid, Race[6][playerid], 1);
	PlayerTextDrawColor(playerid, Race[6][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[6][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[6][playerid], 51);
	PlayerTextDrawFont(playerid, Race[6][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[6][playerid], 1);

	Race[7][playerid] = CreatePlayerTextDraw(playerid, 530.333251, 196.933288, "Asif_Khan");
	PlayerTextDrawLetterSize(playerid, Race[7][playerid], 0.262666, 1.317925);
	PlayerTextDrawAlignment(playerid, Race[7][playerid], 1);
	PlayerTextDrawColor(playerid, Race[7][playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, Race[7][playerid], 1);
	PlayerTextDrawSetOutline(playerid, Race[7][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[7][playerid], 51);
	PlayerTextDrawFont(playerid, Race[7][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[7][playerid], 1);

	Race[8][playerid] = CreatePlayerTextDraw(playerid, 511.599548, 233.851867, "Time: 00:00");
	PlayerTextDrawLetterSize(playerid, Race[8][playerid], 0.203998, 0.990221);
	PlayerTextDrawAlignment(playerid, Race[8][playerid], 1);
	PlayerTextDrawColor(playerid, Race[8][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[8][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[8][playerid], 51);
	PlayerTextDrawFont(playerid, Race[8][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[8][playerid], 1);

	Race[9][playerid] = CreatePlayerTextDraw(playerid, 511.666778, 242.148193, "Race type: sprint;");
	PlayerTextDrawLetterSize(playerid, Race[9][playerid], 0.203998, 0.990221);
	PlayerTextDrawAlignment(playerid, Race[9][playerid], 1);
	PlayerTextDrawColor(playerid, Race[9][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Race[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Race[9][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Race[9][playerid], 51);
	PlayerTextDrawFont(playerid, Race[9][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Race[9][playerid], 1);

	TuneTypeShow[playerid] = CreatePlayerTextDraw(playerid, 216.000000, 348.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, TuneTypeShow[playerid], 255);
	PlayerTextDrawFont(playerid, TuneTypeShow[playerid], 0);
	PlayerTextDrawLetterSize(playerid, TuneTypeShow[playerid], 0.729999, 1.800000);
	PlayerTextDrawColor(playerid, TuneTypeShow[playerid], -1);
	PlayerTextDrawSetOutline(playerid, TuneTypeShow[playerid], 0);
	PlayerTextDrawSetProportional(playerid, TuneTypeShow[playerid], 1);
	PlayerTextDrawSetShadow(playerid, TuneTypeShow[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuneTypeShow[playerid], 0);

 	TuneComponentShow[playerid] = CreatePlayerTextDraw(playerid, 317.000000, 371.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, TuneComponentShow[playerid], 255);
	PlayerTextDrawFont(playerid, TuneComponentShow[playerid], 3);
	PlayerTextDrawLetterSize(playerid, TuneComponentShow[playerid], 0.380000, 1.200000);
	PlayerTextDrawColor(playerid, TuneComponentShow[playerid], -1);
	PlayerTextDrawSetOutline(playerid, TuneComponentShow[playerid], 0);
	PlayerTextDrawSetProportional(playerid, TuneComponentShow[playerid], 1);
	PlayerTextDrawSetShadow(playerid, TuneComponentShow[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuneComponentShow[playerid], 0);

	TuneCostShow[playerid] = CreatePlayerTextDraw(playerid, 264.000000, 389.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, TuneCostShow[playerid], 255);
	PlayerTextDrawFont(playerid, TuneCostShow[playerid], 3);
	PlayerTextDrawLetterSize(playerid, TuneCostShow[playerid], 0.380000, 1.200000);
	PlayerTextDrawColor(playerid, TuneCostShow[playerid], -1);
	PlayerTextDrawSetOutline(playerid, TuneCostShow[playerid], 0);
	PlayerTextDrawSetProportional(playerid, TuneCostShow[playerid], 1);
	PlayerTextDrawSetShadow(playerid, TuneCostShow[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, TuneCostShow[playerid], 0);

	ReconPlayerText[playerid][0] = CreatePlayerTextDraw(playerid,589.00, 145.00, "~r~Admin_Admin (-1)~n~");
	PlayerTextDrawAlignment(playerid,ReconPlayerText[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][0],  0.240000, 0.899999);
	ReconPlayerText[playerid][1] = CreatePlayerTextDraw(playerid,578.00, 165.00, "~g~HEALTH: ~w~100~n~~r~ARMOUR: ~w~100~n~~g~CAR HP: ~w~1000~n~~r~SPEED: ~w~75~n~~b~PING: ~w~40~n~~b~AMMO: ~w~(24 / 500)~n~~n~PLAYER~n~~n~~r~Admin_Admin");
	PlayerTextDrawLetterSize(playerid,ReconPlayerText[playerid][1], 0.199999, 0.899999);
	for(new x; x < 2; x ++)
	{
		PlayerTextDrawBackgroundColor(playerid,ReconPlayerText[playerid][x], 255);
		PlayerTextDrawFont(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawColor(playerid,ReconPlayerText[playerid][x], -1);
		PlayerTextDrawSetOutline(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetProportional(playerid,ReconPlayerText[playerid][x], 1);
		PlayerTextDrawSetShadow(playerid,ReconPlayerText[playerid][x],0);
	}
	return true;
}
stock CreateTextDraws()
{
	gSkinShopDraw[0] = TextDrawCreate(88.000000, 242.000000, "~>~");
	TextDrawBackgroundColor(gSkinShopDraw[0], 255);
	TextDrawFont(gSkinShopDraw[0], 1);
	TextDrawLetterSize(gSkinShopDraw[0], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[0], -1);
	TextDrawSetOutline(gSkinShopDraw[0], 0);
	TextDrawSetProportional(gSkinShopDraw[0], 1);
	TextDrawSetShadow(gSkinShopDraw[0], 1);
	TextDrawTextSize(gSkinShopDraw[0], 107.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[0], 1);

	gSkinShopDraw[1] = TextDrawCreate(18.000000, 242.000000, "~<~");
	TextDrawBackgroundColor(gSkinShopDraw[1], 255);
	TextDrawFont(gSkinShopDraw[1], 1);
	TextDrawLetterSize(gSkinShopDraw[1], 0.500000, 2.000000);
	TextDrawColor(gSkinShopDraw[1], -1);
	TextDrawSetOutline(gSkinShopDraw[1], 0);
	TextDrawSetProportional(gSkinShopDraw[1], 1);
	TextDrawSetShadow(gSkinShopDraw[1], 1);
	TextDrawTextSize(gSkinShopDraw[1], 36.000000, 22.000000);
	TextDrawSetSelectable(gSkinShopDraw[1], 1);

	gSkinShopDraw[2] = TextDrawCreate(115.000000, 221.000000, "_");
	TextDrawBackgroundColor(gSkinShopDraw[2], 0x00000066);
	TextDrawBoxColor(gSkinShopDraw[2], 0x00000066);
	TextDrawFont(gSkinShopDraw[2], 1);
	TextDrawLetterSize(gSkinShopDraw[2], 0.000000, 7.199996);
	TextDrawUseBox(gSkinShopDraw[2], 1);
	TextDrawTextSize(gSkinShopDraw[2], 11.000000, 0.000000);
	TextDrawSetSelectable(gSkinShopDraw[2], 0);

	gSkinShopDraw[3] = TextDrawCreate(45.000000, 245.000000, "BUY");
	TextDrawBackgroundColor(gSkinShopDraw[3], 255);
	TextDrawFont(gSkinShopDraw[3], 3);
	TextDrawLetterSize(gSkinShopDraw[3], 0.629999, 1.500000);
	TextDrawColor(gSkinShopDraw[3], -1);
	TextDrawSetOutline(gSkinShopDraw[3], 0);
	TextDrawSetProportional(gSkinShopDraw[3], 1);
	TextDrawSetShadow(gSkinShopDraw[3], 1);
	TextDrawTextSize(gSkinShopDraw[3], 83.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[3], 1);

	gSkinShopDraw[4] = TextDrawCreate(30.000000, 268.000000, "CANCEL");
	TextDrawBackgroundColor(gSkinShopDraw[4], 255);
	TextDrawFont(gSkinShopDraw[4], 3);
	TextDrawLetterSize(gSkinShopDraw[4], 0.629998, 1.500000);
	TextDrawColor(gSkinShopDraw[4], -1);
	TextDrawSetOutline(gSkinShopDraw[4], 0);
	TextDrawSetProportional(gSkinShopDraw[4], 1);
	TextDrawSetShadow(gSkinShopDraw[4], 1);
	TextDrawTextSize(gSkinShopDraw[4], 101.000000, 15.000000);
	TextDrawSetSelectable(gSkinShopDraw[4], 1);
	//PAINTBALL
	PaintText[0] = TextDrawCreate(510.000000, 239.000000, "~b~TEAM BLUE: ~w~0");
	TextDrawBackgroundColor(PaintText[0], 255);
	TextDrawFont(PaintText[0], 1);
	TextDrawLetterSize(PaintText[0], 0.300000, 1.000000);
	TextDrawColor(PaintText[0], -1);
	TextDrawSetOutline(PaintText[0], 0);
	TextDrawSetProportional(PaintText[0], 1);
	TextDrawSetShadow(PaintText[0], 1);

	PaintText[1] = TextDrawCreate(510.000000, 250.000000, "~r~TEAM RED: ~w~0");
	TextDrawBackgroundColor(PaintText[1], 255);
	TextDrawFont(PaintText[1], 1);
	TextDrawLetterSize(PaintText[1], 0.300000, 1.000000);
	TextDrawColor(PaintText[1], -1);
	TextDrawSetOutline(PaintText[1], 0);
	TextDrawSetProportional(PaintText[1], 1);
	TextDrawSetShadow(PaintText[1], 1);

	PaintText[2] = TextDrawCreate(510.000000, 228.000000, "TIME: ~w~10:00");
	TextDrawBackgroundColor(PaintText[2], 255);
	TextDrawFont(PaintText[2], 1);
	TextDrawLetterSize(PaintText[2], 0.300000, 1.000000);
	TextDrawColor(PaintText[2], -1);
	TextDrawSetOutline(PaintText[2], 0);
	TextDrawSetProportional(PaintText[2], 1);
	TextDrawSetShadow(PaintText[2], 1);

    TextBizzWar = TextDrawCreate(6.000000, 241.000000, "_");
	TextDrawBackgroundColor(TextBizzWar, 255);
	TextDrawFont(TextBizzWar, 2);
	TextDrawLetterSize(TextBizzWar, 0.340000, 1.500000);
	TextDrawColor(TextBizzWar, -1);
	TextDrawSetOutline(TextBizzWar, 0);
	TextDrawSetProportional(TextBizzWar, 1);
	TextDrawSetShadow(TextBizzWar, 1);

	BandDrawBG[0] = TextDrawCreate(203.000000, 110.000000, "Band1");
	TextDrawBackgroundColor(BandDrawBG[0], 255);
	TextDrawFont(BandDrawBG[0], 1);
	TextDrawLetterSize(BandDrawBG[0], -0.000000, 1.33);
	TextDrawColor(BandDrawBG[0], -1);
	TextDrawSetOutline(BandDrawBG[0], 0);
	TextDrawSetProportional(BandDrawBG[0], 1);
	TextDrawSetShadow(BandDrawBG[0], 1);
	TextDrawUseBox(BandDrawBG[0], 1);
	TextDrawBoxColor(BandDrawBG[0], 0x00000099);
	TextDrawTextSize(BandDrawBG[0], 445.000000, 0.000000);

	BandDrawBG[1] = TextDrawCreate(205.000000, 112.000000, "Band2");
	TextDrawBackgroundColor(BandDrawBG[1], 255);
	TextDrawFont(BandDrawBG[1], 1);
	TextDrawLetterSize(BandDrawBG[1], -0.000000, 0.899999);
	TextDrawColor(BandDrawBG[1], -1);
	TextDrawSetOutline(BandDrawBG[1], 0);
	TextDrawSetProportional(BandDrawBG[1], 1);
	TextDrawSetShadow(BandDrawBG[1], 1);
	TextDrawUseBox(BandDrawBG[1], 1);
	TextDrawBoxColor(BandDrawBG[1], 0x88990055);
	TextDrawTextSize(BandDrawBG[1], 443.000000, 0.000000);

	AutoShopText[0] = TextDrawCreate(527.000000, 230.000000, "<<");
	TextDrawLetterSize(AutoShopText[0], 0.220000, 1.199999);

	AutoShopText[1] = TextDrawCreate(581.000000, 230.000000, ">>");
	TextDrawLetterSize(AutoShopText[1], 0.220000, 1.199999);

	AutoShopText[2] = TextDrawCreate(581.000000, 271.000000, ">");
	TextDrawLetterSize(AutoShopText[2], 0.220000, 0.599999);

	AutoShopText[3] = TextDrawCreate(581.000000, 281.000000, ">");
	TextDrawLetterSize(AutoShopText[3], 0.220000, 0.599999);

	AutoShopText[4] = TextDrawCreate(527.000000, 281.000000, "<");
	TextDrawLetterSize(AutoShopText[4], 0.220000, 0.599999);

	AutoShopText[5] = TextDrawCreate(527.000000, 271.000000, "<");
	TextDrawLetterSize(AutoShopText[5], 0.220000, 0.599999);

	for(new s; s < 6; s++)
	{
	    TextDrawTextSize(AutoShopText[s], 10.10, 40.40);
		TextDrawAlignment(AutoShopText[s], 2);
		TextDrawBackgroundColor(AutoShopText[s], 255);
		TextDrawFont(AutoShopText[s], 2);
		TextDrawColor(AutoShopText[s], -1);
		TextDrawSetProportional(AutoShopText[s], 1);
		TextDrawSetShadow(AutoShopText[s], 1);
		TextDrawUseBox(AutoShopText[s], 1);
		TextDrawBoxColor(AutoShopText[s], 144);
		TextDrawSetSelectable(AutoShopText[s],true);
	}

	AutoShopText[6] = TextDrawCreate(556.000000, 311.000000, "buy");
	TextDrawLetterSize(AutoShopText[6], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[6], 144);
	TextDrawTextSize(AutoShopText[6], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[6], 1);

	AutoShopText[7] = TextDrawCreate(556.000000, 331.000000, "exit");
	TextDrawLetterSize(AutoShopText[7], 0.450000, 0.899999);
	TextDrawBoxColor(AutoShopText[7], 144);
	TextDrawTextSize(AutoShopText[7], 10.10, 56.56);
	TextDrawSetSelectable(AutoShopText[7],true);

	AutoShopText[8] = TextDrawCreate(554.000000, 161.000000, "_");// ôîí
	TextDrawLetterSize(AutoShopText[8], 0.500000, 22.200017);
	TextDrawSetProportional(AutoShopText[8], 1);
	TextDrawBoxColor(AutoShopText[8], 69);
	TextDrawTextSize(AutoShopText[8], 0.000000, 105.000000);

	for(new e = 6; e < 9; e++)
	{
		TextDrawAlignment(AutoShopText[e], 2);
		TextDrawBackgroundColor(AutoShopText[e], 255);
		TextDrawFont(AutoShopText[e], 3);
		TextDrawColor(AutoShopText[e], -1);
		TextDrawSetProportional(AutoShopText[e], 1);
		TextDrawSetShadow(AutoShopText[e], 1);
		TextDrawUseBox(AutoShopText[e], 1);
	}

	AutoShopText[9] = TextDrawCreate(522.000000, 211.000000, "SELECT CAR");
	AutoShopText[10] = TextDrawCreate(537.000000, 251.000000, "COLOR");
	AutoShopText[11] = TextDrawCreate(541.000000, 165.000000, "INFO");

	for(new r = 9; r < 12; r++)
	{
		TextDrawBackgroundColor(AutoShopText[r], 255);
		TextDrawFont(AutoShopText[r], 2);
		TextDrawSetOutline(AutoShopText[r], 0);
		TextDrawSetShadow(AutoShopText[r], 0);
		TextDrawLetterSize(AutoShopText[r], 0.260000, 1.300000);
		TextDrawColor(AutoShopText[r], -2016477185);
		TextDrawSetProportional(AutoShopText[r], 1);
	}

	TuneBox = TextDrawCreate(432.000000, 358.000000, "_");
	TextDrawBackgroundColor(TuneBox, 255);
	TextDrawFont(TuneBox, 1);
	TextDrawLetterSize(TuneBox, 0.500000, 7.599997);
	TextDrawColor(TuneBox, -1);
	TextDrawSetOutline(TuneBox, 0);
	TextDrawSetProportional(TuneBox, 1);
	TextDrawSetShadow(TuneBox, 1);
	TextDrawUseBox(TuneBox, 1);
	TextDrawBoxColor(TuneBox, 128);
	TextDrawTextSize(TuneBox, 200.000000, -130.000000);
	TextDrawSetSelectable(TuneBox, 0);

	TuneComponent = TextDrawCreate(216.000000, 372.000000, "Component:");
	TextDrawBackgroundColor(TuneComponent, 255);
	TextDrawFont(TuneComponent, 3);
	TextDrawLetterSize(TuneComponent, 0.500000, 1.000000);
	TextDrawColor(TuneComponent, -2147450625);
	TextDrawSetOutline(TuneComponent, 0);
	TextDrawSetProportional(TuneComponent, 1);
	TextDrawSetShadow(TuneComponent, 1);
	TextDrawSetSelectable(TuneComponent, 0);

	TuneCost = TextDrawCreate(216.000000, 390.000000, "Cost:");
	TextDrawBackgroundColor(TuneCost, 255);
	TextDrawFont(TuneCost, 3);
	TextDrawLetterSize(TuneCost, 0.500000, 1.000000);
	TextDrawColor(TuneCost, -2147450625);
	TextDrawSetOutline(TuneCost, 0);
	TextDrawSetProportional(TuneCost, 1);
	TextDrawSetShadow(TuneCost, 1);
	TextDrawSetSelectable(TuneCost, 0);

	TuneBack = TextDrawCreate(213.000000, 408.000000, "Back");
	TextDrawTextSize(TuneBack, 265.0, 16.0);
	TextDrawBackgroundColor(TuneBack, 255);
	TextDrawFont(TuneBack, 2);
	TextDrawLetterSize(TuneBack, 0.480000, 1.400000);
	TextDrawColor(TuneBack, -16776961);
	TextDrawSetOutline(TuneBack, 0);
	TextDrawSetProportional(TuneBack, 1);
	TextDrawSetShadow(TuneBack, 1);
	TextDrawSetSelectable(TuneBack, 1);

	TuneBuy = TextDrawCreate(382.000000, 408.000000, "Buy");
	TextDrawTextSize(TuneBuy, 430.0, 16.0);
	TextDrawBackgroundColor(TuneBuy, 255);
	TextDrawFont(TuneBuy, 2);
	TextDrawLetterSize(TuneBuy, 0.480000, 1.400000);
	TextDrawColor(TuneBuy, 16711935);
	TextDrawSetOutline(TuneBuy, 0);
	TextDrawSetProportional(TuneBuy, 1);
	TextDrawSetShadow(TuneBuy, 1);
	TextDrawSetSelectable(TuneBuy, 1);

    TuneArrow[0] = TextDrawCreate(146.000000, 372.000000, "_");
	TextDrawBackgroundColor(TuneArrow[0], 0xFFFFFF00);
	TextDrawFont(TuneArrow[0], 5);
	TextDrawLetterSize(TuneArrow[0], 0.500000, 1.000000);
	TextDrawColor(TuneArrow[0], -1);
	TextDrawSetOutline(TuneArrow[0], 0);
	TextDrawSetProportional(TuneArrow[0], 1);
	TextDrawSetShadow(TuneArrow[0], 1);
	TextDrawTextSize(TuneArrow[0], 56.000000, 43.000000);
	TextDrawSetPreviewModel(TuneArrow[0], 19134);
	TextDrawSetPreviewRot(TuneArrow[0], -16.000000, 90.000000, -55.000000, 1.000000);
	TextDrawSetSelectable(TuneArrow[0], 1);

	TuneArrow[1] = TextDrawCreate(430.000000, 372.000000, "_");
	TextDrawBackgroundColor(TuneArrow[1], 0xFFFFFF00);
	TextDrawFont(TuneArrow[1], 5);
	TextDrawLetterSize(TuneArrow[1], 0.500000, 1.000000);
	TextDrawColor(TuneArrow[1], -1);
	TextDrawSetOutline(TuneArrow[1], 0);
	TextDrawSetProportional(TuneArrow[1], 1);
	TextDrawSetShadow(TuneArrow[1], 1);
	TextDrawTextSize(TuneArrow[1], 56.000000, 43.000000);
	TextDrawSetPreviewModel(TuneArrow[1], 19134);
	TextDrawSetPreviewRot(TuneArrow[1], -16.000000, -90.000000, 55.000000, 1.000000);
	TextDrawSetSelectable(TuneArrow[1], 1);

	Boxmenu0 = TextDrawCreate(439.000000, 383.000000, "box1");
	TextDrawBackgroundColor(Boxmenu0, 255);
	TextDrawFont(Boxmenu0, 1);
	TextDrawLetterSize(Boxmenu0, 0.000000, 3.400001);
	TextDrawUseBox(Boxmenu0, 1);
	TextDrawBoxColor(Boxmenu0, 80);
	TextDrawTextSize(Boxmenu0, 206.000000, 10.000000);
	TextDrawSetSelectable(Boxmenu0, 0);

	Boxmenu1 = TextDrawCreate(387.000000, 358.000000, "box2");
	TextDrawBackgroundColor(Boxmenu1, 255);
	TextDrawFont(Boxmenu1, 1);
	TextDrawLetterSize(Boxmenu1, 0.000000, 2.000000);
	TextDrawUseBox(Boxmenu1, 1);
	TextDrawBoxColor(Boxmenu1, 2132351487);
	TextDrawTextSize(Boxmenu1, 258.000000, 10.000000);
	TextDrawSetSelectable(Boxmenu1, 0);

	Boxmenu2 = TextDrawCreate(385.000000, 360.000000, "box3");
	TextDrawBackgroundColor(Boxmenu2, 255);
	TextDrawFont(Boxmenu2, 1);
	TextDrawLetterSize(Boxmenu2, 0.000000, 1.600000);
	TextDrawUseBox(Boxmenu2, 1);
	TextDrawBoxColor(Boxmenu2, 128);
	TextDrawTextSize(Boxmenu2, 260.000000, 10.000000);
	TextDrawSetSelectable(Boxmenu2, 0);

	ButtonLeft = TextDrawCreate(176.000000, 345.000000, "selecticon1");
	TextDrawBackgroundColor(ButtonLeft, 0);
	TextDrawFont(ButtonLeft, 5);
	TextDrawLetterSize(ButtonLeft, 0.500000, 1.000000);
	TextDrawColor(ButtonLeft, -1876547841);
	TextDrawTextSize(ButtonLeft, 73.000000, 65.000000);
	TextDrawSetPreviewModel(ButtonLeft, 19132);
	TextDrawSetPreviewRot(ButtonLeft, -40.000000, -90.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(ButtonLeft, 1);

	ButtonRight = TextDrawCreate(396.000000, 345.000000, "selecticon2");
	TextDrawBackgroundColor(ButtonRight, 0);
	TextDrawFont(ButtonRight, 5);
	TextDrawLetterSize(ButtonRight, 0.500000, 1.000000);
	TextDrawColor(ButtonRight, -1876547841);
	TextDrawTextSize(ButtonRight, 73.000000, 65.000000);
	TextDrawSetPreviewModel(ButtonRight, 19132);
	TextDrawSetPreviewRot(ButtonRight, -40.000000, 90.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(ButtonRight, 1);

	boxcancel = TextDrawCreate(233.000000, 367.000000, "selecticon3");
	TextDrawBackgroundColor(boxcancel, 0);
	TextDrawFont(boxcancel, 5);
	TextDrawLetterSize(boxcancel, 0.500000, 1.000000);
	TextDrawColor(boxcancel, -1876547841);
	TextDrawTextSize(boxcancel, 84.000000, 63.000000);
	TextDrawSetPreviewModel(boxcancel, 19447);
	TextDrawSetPreviewRot(boxcancel, -20.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(boxcancel, 1);

	boxaccept = TextDrawCreate(327.000000, 367.000000, "selecticon3");
	TextDrawBackgroundColor(boxaccept, 0);
	TextDrawFont(boxaccept, 5);
	TextDrawLetterSize(boxaccept, 0.500000, 1.000000);
	TextDrawColor(boxaccept, -1876547841);
	TextDrawSetProportional(boxaccept, 1);
	TextDrawTextSize(boxaccept, 84.000000, 63.000000);
	TextDrawSetPreviewModel(boxaccept, 19447);
	TextDrawSetPreviewRot(boxaccept, -20.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(boxaccept, 1);

	ButtonUp = TextDrawCreate( 558.000000, 434.000000, "Fire arms");
	TextDrawBackgroundColor( ButtonUp, 255);
	TextDrawFont( ButtonUp, 3);
	TextDrawLetterSize( ButtonUp, 0.500000, 1.000000);
	TextDrawColor( ButtonUp, -602653600);
	TextDrawSetProportional( ButtonUp, 1);
	TextDrawSetShadow( ButtonUp, 1);
	TextDrawSetSelectable( ButtonUp, 0);

	ButtonDown = TextDrawCreate(300.0, 300.0, "LD_BEAT:down");
	TextDrawBackgroundColor(ButtonDown, 0);
	TextDrawFont(ButtonDown, 4);
	TextDrawLetterSize(ButtonDown, 0.500000, 1.000000);
	TextDrawColor(ButtonDown, -1876547841);
	TextDrawSetOutline(ButtonDown, 0);
	TextDrawSetProportional(ButtonDown, 1);
	TextDrawSetShadow(ButtonDown, 1);
	TextDrawTextSize(ButtonDown, 50, 25);
	TextDrawSetPreviewModel(ButtonDown, 19132);
	TextDrawSetPreviewRot(ButtonDown, -40.000000, 0.000000, 90.000000, 1.000000);
	TextDrawSetSelectable(ButtonDown, 1);

    ButtonSelect = TextDrawCreate(247.000000, 392.000000, "Accept");
	TextDrawBackgroundColor(ButtonSelect, 255);
	TextDrawFont(ButtonSelect, 2);
	TextDrawLetterSize(ButtonSelect, 0.350000, 1.200000);
	TextDrawColor(ButtonSelect, -1);
	TextDrawSetProportional(ButtonSelect, 1);
	TextDrawSetSelectable(ButtonSelect, 0);

	ButtonCancel = TextDrawCreate(342.000000, 392.000000, "Cancel");
	TextDrawBackgroundColor(ButtonCancel, 255);
	TextDrawFont(ButtonCancel, 2);
	TextDrawLetterSize(ButtonCancel, 0.350000, 1.200000);
	TextDrawColor(ButtonCancel, -1);
	TextDrawSetProportional(ButtonCancel, 1);
	TextDrawSetSelectable(ButtonCancel, 0);

	Boxmenu3 = TextDrawCreate(268.000000, 361.000000, "Select Action");
	TextDrawBackgroundColor(Boxmenu3, 255);
	TextDrawFont(Boxmenu3, 2);
	TextDrawLetterSize(Boxmenu3, 0.349999, 1.200000);
	TextDrawColor(Boxmenu3, -1);
	TextDrawSetOutline(Boxmenu3, 0);
	TextDrawSetProportional(Boxmenu3, 1);
	TextDrawSetShadow(Boxmenu3, 1);
	TextDrawSetSelectable(Boxmenu3, 0);

	new Float: TDCOORD[3][2] =
	{
	    { 155.000000, 189.000000 },
	    { 271.000000, 189.000000 },
	    { 387.000000, 189.000000 }
	};
	for(new a = 0, td; a < 3; a++)
	{
	    td = 16+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+1.002899, TDCOORD[a][1]+1.0, "box"); // header
		TextDrawLetterSize(TD_Reg3[td], 0.000000, -0.260612);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]+96.997101, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);

	    td = 17+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+0.534378, TDCOORD[a][1]+121.166625, "box"); // footer
		TextDrawLetterSize(TD_Reg3[td], 0.000000, -0.260612);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]+97.465622, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);

	    td = 18+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+0.534378, TDCOORD[a][1]+1.000076, "box"); // left
		TextDrawLetterSize(TD_Reg3[td], 0.000000, 12.998536);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]-1.534378, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);

	    td = 19+(a*4);
		TD_Reg3[td] = TextDrawCreate(TDCOORD[a][0]+102.5, TDCOORD[a][1]+1.333343, "box"); // right
		TextDrawLetterSize(TD_Reg3[td], 0.000000, 12.951683);
		TextDrawTextSize(TD_Reg3[td], TDCOORD[a][0]+97.0, 0.000000);
		TextDrawAlignment(TD_Reg3[td], 1);
		TextDrawColor(TD_Reg3[td], -1);
		TextDrawUseBox(TD_Reg3[td], 1);
		TextDrawBoxColor(TD_Reg3[td], 1468115967);
		TextDrawSetShadow(TD_Reg3[td], 0);
		TextDrawSetOutline(TD_Reg3[td], 0);
		TextDrawBackgroundColor(TD_Reg3[td], 255);
		TextDrawFont(TD_Reg3[td], 1);
		TextDrawSetProportional(TD_Reg3[td], 1);
		TextDrawSetShadow(TD_Reg3[td], 0);
	}

	TD_Reg4[0] = TextDrawCreate(225.813522, 172.499847, "box");
	TextDrawLetterSize(TD_Reg4[0], 0.000000, 14.450950);
	TextDrawTextSize(TD_Reg4[0], 415.000000, 0.000000);
	TextDrawAlignment(TD_Reg4[0], 1);
	TextDrawColor(TD_Reg4[0], -1);
	TextDrawUseBox(TD_Reg4[0], 1);
	TextDrawBoxColor(TD_Reg4[0], 505290330);
	TextDrawSetShadow(TD_Reg4[0], 0);
	TextDrawSetOutline(TD_Reg4[0], 0);
	TextDrawBackgroundColor(TD_Reg4[0], 255);
	TextDrawFont(TD_Reg4[0], 1);
	TextDrawSetProportional(TD_Reg4[0], 1);
	TextDrawSetShadow(TD_Reg4[0], 0);

	TD_Reg4[1] = TextDrawCreate(226.281066, 172.500000, "box");
	TextDrawLetterSize(TD_Reg4[1], 0.000000, 1.098098);
	TextDrawTextSize(TD_Reg4[1], 415.000000, 0.000000);
	TextDrawAlignment(TD_Reg4[1], 1);
	TextDrawColor(TD_Reg4[1], -1);
	TextDrawUseBox(TD_Reg4[1], 1);
	TextDrawBoxColor(TD_Reg4[1], 1468115967);
	TextDrawSetShadow(TD_Reg4[1], 0);
	TextDrawSetOutline(TD_Reg4[1], 0);
	TextDrawBackgroundColor(TD_Reg4[1], 255);
	TextDrawFont(TD_Reg4[1], 1);
	TextDrawSetProportional(TD_Reg4[1], 1);
	TextDrawSetShadow(TD_Reg4[1], 0);

	TD_Reg4[2] = TextDrawCreate(320.454193, 173.083297, "Asian city roleplay");
	TextDrawLetterSize(TD_Reg4[2], 0.206966, 0.993332);
	TextDrawAlignment(TD_Reg4[2], 2);
	TextDrawColor(TD_Reg4[2], -1);
	TextDrawSetShadow(TD_Reg4[2], 0);
	TextDrawSetOutline(TD_Reg4[2], 0);
	TextDrawBackgroundColor(TD_Reg4[2], 255);
	TextDrawFont(TD_Reg4[2], 2);
	TextDrawSetProportional(TD_Reg4[2], 1);
	TextDrawSetShadow(TD_Reg4[2], 0);

	TD_Reg4[3] = TextDrawCreate(249.500000, 242.500000, "box");
	TextDrawLetterSize(TD_Reg4[3], 0.000000, 1.230000);
	TextDrawTextSize(TD_Reg4[3], 392.500000, 0.000000);
	TextDrawAlignment(TD_Reg4[3], 1);
	TextDrawColor(TD_Reg4[3], -1);
	TextDrawUseBox(TD_Reg4[3], 1);
	TextDrawBoxColor(TD_Reg4[3], 1333898239);
	TextDrawSetShadow(TD_Reg4[3], 0);
	TextDrawSetOutline(TD_Reg4[3], 0);
	TextDrawBackgroundColor(TD_Reg4[3], 255);
	TextDrawFont(TD_Reg4[3], 1);
	TextDrawSetProportional(TD_Reg4[3], 1);
	TextDrawSetShadow(TD_Reg4[3], 0);

	TD_Reg4[4] = TextDrawCreate(250.000000, 243.000000, "box");
	TextDrawLetterSize(TD_Reg4[4], 0.000000, 1.144950);
	TextDrawTextSize(TD_Reg4[4], 392.000000, 0.000000);
	TextDrawAlignment(TD_Reg4[4], 1);
	TextDrawColor(TD_Reg4[4], -1);
	TextDrawUseBox(TD_Reg4[4], 1);
	TextDrawBoxColor(TD_Reg4[4], 505290495);
	TextDrawSetShadow(TD_Reg4[4], 0);
	TextDrawSetOutline(TD_Reg4[4], 0);
	TextDrawBackgroundColor(TD_Reg4[4], 255);
	TextDrawFont(TD_Reg4[4], 1);
	TextDrawSetProportional(TD_Reg4[4], 1);
	TextDrawSetShadow(TD_Reg4[4], 0);

	TD_Reg4[5] = TextDrawCreate(321.000000, 228.000000, "password");
	TextDrawLetterSize(TD_Reg4[5], 0.208371, 0.841665);
	TextDrawAlignment(TD_Reg4[5], 2);
	TextDrawColor(TD_Reg4[5], -1);
	TextDrawSetShadow(TD_Reg4[5], 0);
	TextDrawSetOutline(TD_Reg4[5], 0);
	TextDrawBackgroundColor(TD_Reg4[5], 255);
	TextDrawFont(TD_Reg4[5], 2);
	TextDrawSetProportional(TD_Reg4[5], 1);
	TextDrawSetShadow(TD_Reg4[5], 0);

	TD_Reg4[6] = TextDrawCreate(319.985626, 275.166687, "box");
	TextDrawLetterSize(TD_Reg4[6], 0.000000, 0.910690);
	TextDrawTextSize(TD_Reg4[6], 0.000000, 58.000000);
	TextDrawAlignment(TD_Reg4[6], 2);
	TextDrawColor(TD_Reg4[6], -1);
	TextDrawUseBox(TD_Reg4[6], 1);
	TextDrawBoxColor(TD_Reg4[6], 1468115967);
	TextDrawSetShadow(TD_Reg4[6], 0);
	TextDrawSetOutline(TD_Reg4[6], 0);
	TextDrawBackgroundColor(TD_Reg4[6], 255);
	TextDrawFont(TD_Reg4[6], 1);
	TextDrawSetProportional(TD_Reg4[6], 1);
	TextDrawSetShadow(TD_Reg4[6], 0);

	TD_Reg4[7] = TextDrawCreate(319.985534, 275.166717, "next");
	TextDrawLetterSize(TD_Reg4[7], 0.233674, 0.946663);
	TextDrawTextSize(TD_Reg4[7], 10.000000, 58.000000);
	TextDrawAlignment(TD_Reg4[7], 2);
	TextDrawColor(TD_Reg4[7], -1);
	TextDrawSetShadow(TD_Reg4[7], 0);
	TextDrawSetOutline(TD_Reg4[7], 0);
	TextDrawBackgroundColor(TD_Reg4[7], 255);
	TextDrawFont(TD_Reg4[7], 2);
	TextDrawSetProportional(TD_Reg4[7], 1);
	TextDrawSetShadow(TD_Reg4[7], 0);
	TextDrawSetSelectable(TD_Reg4[7], true);
	return true;
}

public OnPlayerConnect(playerid) {

    HackerJob[playerid] = 0;
   	musor[playerid] = 0;
	total[playerid] = 0;

	if(ServerRestart[1] || ServerRestart[2])
	{
		SendClientMessage(playerid,0xffcc00ff,"Server is running out of service!");
		SendClientMessage(playerid,0xffcc00ff,"Order, keep up with him");
		return KickEx(playerid);
	}
	CreateTextDraw(playerid);
	// Remove Building For FBI
	RemoveBuildingForPlayer(playerid, 1689, 745.5859, -1381.1094, 25.8750, 0.25);
    RemoveBuildingForPlayer(playerid, 1689, 751.3359, -1368.0313, 25.8750, 0.25);
    RemoveBuildingForPlayer(playerid, 6516, 717.6875, -1357.2813, 18.0469, 0.25);
	// Remove Building For Swat Spawn
	RemoveBuildingForPlayer(playerid, 1283, 786.9453, -1394.5703, 15.7031, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 778.8594, -1391.1563, 16.3125, 0.25);
	// êàçèíî
	RemoveBuildingForPlayer(playerid, 1895, 1117.2813, -1.6484, 1002.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 2188, 1125.1406, -3.4141, 1000.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 2188, 1127.0781, -1.6797, 1000.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 2188, 1125.1484, -0.0313, 1000.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1135.0469, -3.0781, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1133.6875, -1.6250, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1135.0000, -0.1797, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1124.8203, 3.7969, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1125.8672, 3.7969, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1127.8828, 3.7969, 1000.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 2640, 1126.8828, 3.7969, 1000.5234, 0.25);

    // Remove Russian Spawn From The Server.
/*    RemoveBuildingForPlayer(playerid, 4215, 1777.550049, -1775.040039, 36.750000, 0.250000);
    RemoveBuildingForPlayer(playerid, 3986, 1719.739014, -1770.780029, 23.429001, 0.250000);
    RemoveBuildingForPlayer(playerid, 4070, 1719.739014, -1770.780029, 23.429001, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1700.900024, -1743.979004, 12.453000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1701.150024, -1753.229004, 12.351000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1701.260010, -1764.479004, 12.437000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1700.848999, -1778.400024, 12.492000, 0.250000);
    RemoveBuildingForPlayer(playerid, 620, 1701.300049, -1794.430054, 12.546000, 0.250000);
    RemoveBuildingForPlayer(playerid, 3983, 1722.500000, -1775.400024, 14.515000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4071, 1722.500000, -1775.400024, 14.515000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4019, 1777.838989, -1773.910034, 12.523000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4025, 1777.838989, -1773.910034, 12.523000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4012, 1777.438965, -1782.300049, 12.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 4072, 1777.438965, -1782.300049, 12.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 700, 1801.880005, -1817.300049, 13.351000, 0.250000);
    RemoveBuildingForPlayer(playerid, 647, 1796.958984, -1817.390015, 14.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 647, 1791.180054, -1816.630005, 14.625000, 0.250000);
    RemoveBuildingForPlayer(playerid, 700, 1788.510010, -1816.568970, 13.351000, 0.250000);
    RemoveBuildingForPlayer(playerid, 1531, 1724.729004, -1741.500000, 14.101000, 0.250000);*/
	//08.03.2018
	RemoveBuildingForPlayer(playerid, 1307, 1708.7344, -2122.5938, 12.6875, 0.25);
	//25.02.2018
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
    //
    RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1938.0469, 986.6250, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1940.6875, 989.1719, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1943.2188, 986.5234, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.4453, 987.6719, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.7188, 987.1953, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1020.1719, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9609, 992.2031, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4063, 991.8750, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1020.1797, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5703, 998.4531, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1016, 998.3047, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 14561, 1964.2109, 1017.8047, 998.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5469, 1037.2813, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.0938, 1037.3516, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9219, 1043.3594, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.3984, 1043.6328, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.3203, 1047.9766, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.6563, 1048.4141, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.0156, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2217.5469, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.0234, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2217.0156, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.0313, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2217.5469, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2217.5469, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2217.5469, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2216.5703, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2216.5781, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1588.0938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1588.0781, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1588.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1588.5703, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1588.3359, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1589.1875, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1592.3828, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1592.9063, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1592.6406, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1592.3984, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1592.8750, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2242.3672, 1594.7578, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2220.6719, 1602.8125, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1833, 2221.2031, 1602.7969, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1602.7500, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2220.6797, 1603.9297, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2221.2031, 1603.8984, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2220.6875, 1603.9219, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2592, 2221.2031, 1603.9141, 1006.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2243.1250, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2232.1875, 1604.4375, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2239.4297, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2228.4922, 1604.4531, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 1834, 2221.2031, 1605.0391, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1835, 2220.6719, 1605.0469, 1005.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2241.3125, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 2230.3750, 1606.2734, 1006.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1614.2266, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1614.2422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1614.4844, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1614.7500, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1614.7188, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1614.5938, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1614.5547, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2220.7188, 1618.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6328, 1618.5625, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2218.6641, 1619.0859, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2220.6953, 1619.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2218.6172, 1618.8203, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2230.5703, 1619.6563, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 2241.4453, 1619.6094, 1006.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2252.0313, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2261.6328, 1584.4297, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6094, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.1875, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1563, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2258.2578, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2263.6563, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2253.2344, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2254.1797, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2259.2188, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2264.6250, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1609.6016, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1609.6406, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1609.8750, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1610.1172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1610.1250, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1613.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1614.1641, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1613.6875, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1614.1719, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1613.9141, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2253.1250, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2257.2422, 1617.5781, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1563, 1617.5469, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2255.2109, 1617.8125, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2253.1016, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2257.2500, 1618.0547, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2255.1875, 1618.0703, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 2271.7266, 1584.4219, 1007.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6563, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2268.7188, 1596.4688, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2269.6719, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.7734, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2269.2578, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2269.2500, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2269.7344, 1608.7344, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2269.5078, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1589.7969, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1589.7891, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2273.4609, 1596.4766, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 2274.4063, 1596.4844, 1006.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.2969, 1606.6797, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1604.5938, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1837, 2273.3047, 1608.7422, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2784, 2273.5469, 1606.7031, 1006.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 2273.8203, 1606.6484, 1006.7656, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1604.6172, 1006.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1836, 2273.7813, 1608.7344, 1006.0000, 0.25);
	//============================== [ city hall parking ] ===============================//
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1407.1953, -1749.3125, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1353.6406, -1713.5703, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4236, 1387.0313, -1715.0234, 30.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 1261, 1413.6328, -1721.8203, 28.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1405.2344, -1821.1172, 13.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1417.9766, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1405.5781, -1831.6953, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1447.1016, -1832.5000, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1456.3984, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1464.0938, -1831.8828, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1504.8438, -1832.5313, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1499.0469, -1832.2734, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1512.9453, -1832.3516, 13.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1353.6406, -1713.5703, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4235, 1387.0313, -1715.0234, 30.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1404.9141, -1765.2656, 12.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1415.3125, -1748.5625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1429.5313, -1748.4219, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1438.0313, -1747.9375, 13.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1447.9063, -1748.2266, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1441.8594, -1733.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1414.4141, -1731.4297, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1267, 1413.6328, -1721.8203, 28.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1513.2344, -1732.9219, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1516.0000, -1748.6016, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1419.3281, -1710.2344, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1428.9375, -1605.8203, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1516.1641, -1591.6563, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1549.5313, -1832.3125, 12.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1555.6641, -1830.5938, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1554.8203, -1816.1563, 13.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1553.2578, -1764.8125, 12.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1533.2656, -1749.0234, 12.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1522.1641, -1748.5703, 13.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1553.7031, -1747.9375, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1530.1172, -1717.0078, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
	//
    RemoveBuildingForPlayer(playerid, 620, 1196.6016, -1840.3828, 12.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1240.5547, -1840.0938, 13.0391, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1256.2266, -1839.9766, 12.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 620, 1249.5078, -1840.3828, 12.3516, 0.25);
    RemoveBuildingForPlayer(playerid, 700, 1281.8750, -1840.0938, 13.0391, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1200.8828, -1839.1250, 12.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 673, 1227.5547, -1839.1250, 12.5234, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 1233.3828, -1822.8359, 13.0234, 0.25);
    RemoveBuildingForPlayer(playerid, 1215, 1233.8828, -1811.5156, 13.0234, 0.25);
    // àðìèÿ ñô:
	RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 966, -1526.3906, 481.3828, 6.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 10829, -1523.2578, 486.7969, 6.1563, 0.25);
	//àðìèÿ ëâ:
	RemoveBuildingForPlayer(playerid, 1411, 347.20, 1799.27, 18.76, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.94, 1796.29, 18.76, 0.25);
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25); // àðìåéñêèå âîðîòà
	// âîåíêîìàò
	RemoveBuildingForPlayer(playerid, 6068, 1247.914, -1429.968, 15.125, 0.250);
	RemoveBuildingForPlayer(playerid, 6052, 1247.914, -1429.968, 15.125, 0.250);
	RemoveBuildingForPlayer(playerid, 627, 1230.125, -1416.570, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 627, 1209.898, -1416.570, 14.140, 0.250);
	RemoveBuildingForPlayer(playerid, 792, 1256.984, -1417.703, 12.718, 0.250);
	RemoveBuildingForPlayer(playerid, 792, 1236.281, -1417.703, 12.718, 0.250);
    RemoveBuildingForPlayer(playerid, 968, -2436.8125, 495.4688, 29.6797, 0.25);
    //
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "");
    SendClientMessage(playerid, COLOR_RED, "{FF0000}• {A8C4E4}Don't forget to add {0084ff}207.154.234.214:7776 {A8C4E4}in your favorite list");
    SendClientMessage(playerid, COLOR_RED, "{FF0000}• {A8C4E4}Welcome back to {FFFF00}New {2cdb0d}York {FF0000}RolePlay");
	Visitors++;
	server_online++;
	PlayerInfo[playerid][pDist] = 0;
    PlayerRegStep[playerid] = 0;
	PlayerRegMode[playerid] = 0;
	PlayerBigEarsConnect{playerid} = 0;
    PlayerInfo[playerid][SalonCar] = INVALID_VEHICLE_ID;
    gSpecID[playerid] = INVALID_PLAYER_ID;
    PlayerInfo[playerid][pType2]=-1;
    PlayerInfo[playerid][pType]=-1;
    TeamPain[playerid] = 0;
    KillPain[playerid] = 0;
	HealmeObject[playerid] = 0;
    DeathPain[playerid] = 0;
	CaptureKills[playerid] = 0;
	if(GetPVarFloat(playerid, "Health") || GetPVarFloat(playerid, "Armour")) DeletePVar(playerid, "Health"), DeletePVar(playerid, "Armour");
	SetPVarInt(playerid,"SelectAvto",-1);
	SetPVarInt(playerid, "ArendKey", -1);
    gPlayerLogged[playerid] = 0;
    Buyitem[playerid]=-1;
    VehicleID[playerid] = INVALID_VEHICLE_ID;
    ContractInfo[playerid][cZakaz] = INVALID_PLAYER_ID;
	ContractInfo[playerid][cHitman] = INVALID_PLAYER_ID;
    TimerForPlayer[playerid] = INVALID_PLAYER_ID;
	FollowBy[playerid] = INVALID_PLAYER_ID;
	SetPVarInt(playerid, "TempFollowBy", -1);
	FIXES_gsPlayerAnimLibs[playerid][0] = FIXES_gsPlayerAnimLibs[playerid][1] = FIXES_gsPlayerAnimLibs[playerid][2] =
	FIXES_gsPlayerAnimLibs[playerid][3] = FIXES_gsPlayerAnimLibs[playerid][4] = -1;
    GetPlayerName(playerid, PlayerInfo[playerid][pNames], 24);
	for(new nms = 0; nms < strlen(PlayerInfo[playerid][pNames]); nms++)
	{
		switch(PlayerInfo[playerid][pNames][nms])
		{
			case '0'..'9':
			{
				SendClientMessage(playerid, COLOR_RED, "Your nickname is Non-Rp, please change your name {FFFF00}Example: {A8C4E4}Asif_Khan");
				return KickEx(playerid);
			}

		}
	}
	GetPlayerIp(playerid,PlayerInfo[playerid],16);
	if(!IsPlayerFake(playerid)) {
		new fstring[144];
		format(fstring, sizeof fstring, "Adminstrator Player connected %s[%i]", PlayerInfo[playerid][pNames], playerid);
		foreach(Player, i)
		{
			if(PlayerInfo[i][pAlcoInvenxua] > 0 && PlayerBigEarsConnect{i})
			{
				SendClientMessage(i, COLOR_GREY, fstring);
			}
		}
	}
/*    {
        if(PlayerInfo[playerid][pAlcoInvenxua] > 1)
        {
		    ShowPlayerDialog(playerid, 0000, DIALOG_STYLE_MSGBOX, "Adminstrator Login", "You are logged in as {FFFF00}Server Adminstrator {FFFFFF}please use {FF0000}/alogin {ffffff}and put your admin password to log in your adminstrator rank in the server", "Close", "");
        }
    }*/
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(gReconnectTime[i] <= 0) continue;
		if(!strcmp(PlayerInfo[playerid][pIP],gReconnectIP[i],false) && strlen(gReconnectIP[i]))
		{
			printf("Reconnect IP: %s = %s, Time: %d",PlayerInfo[playerid][pIP],gReconnectIP[i],gReconnectTime[i]);
			SendClientMessage(playerid,COLOR_GREY,"Do not use cleanly for at least 15 seconds");
			gReconnectTime[i] += 15;
			if(gReconnectTime[i] >= 30)
			{
			    new zS[32];
				format(zS,sizeof(zS),"banip %s",PlayerInfo[playerid][pIP]);
				SendRconCommand(zS);
			}
			KickEx(playerid);
			return 0;
		}
	}
	new slot;
	for(new i;i<MAX_PLAYERS;i++)
	{
		if(!gReconnectTime[i]) {slot = i; break;}
	}
	format(gReconnectIP[slot],16,"%s",PlayerInfo[playerid][pIP]);
	gReconnectTime[slot] = 5;
    for(new i = 1;i<=TOTALGZ;i++) GangZoneShowForPlayer(playerid,GZInfo[i][id],GetGangZoneColor(i));
	AntiBan[playerid] = 0;
	TransportDuty[playerid] = 0;
	ResetPlayerWeapons(playerid);
	robbankstime[playerid] = 0;
	robjewelstime[playerid] = 0;
	toggotome[playerid] = 0;
//	PlayerInfo[playerid][pKillsOnDM] = 0;
	minigun[playerid] = 0;
	crashcuff[playerid] = 0;
	clearanim[playerid] = 0;
	times[playerid] = true;
    VipNews[playerid] = 0;
	fightid[playerid] = INVALID_PLAYER_ID;
	boy[playerid] = 0;
	HotdogOffer[playerid] = INVALID_PLAYER_ID;
	HotdogPrice[playerid] = INVALID_PLAYER_ID;
	FreeOffer[playerid]= INVALID_PLAYER_ID;
	TicketOffer[playerid] = INVALID_PLAYER_ID;
	TicketMoney[playerid] = 0;
	ProposeOffer[playerid] = INVALID_PLAYER_ID;
	udar[playerid] = 0;
	MatsArmyCar[playerid] = 0;
	JobCarTime[playerid] = 0;
	ChosenSkin[playerid] = OldSkin[playerid];
	InviteSkin[playerid] = OldSkin[playerid];
	OldSkin[playerid] = GetPlayerSkin(playerid);
	CharPrice[playerid] = 0;
	SelectCharID[playerid] = 0;
	PicCP[playerid] = 0;
	SelectChar[playerid] = 0;
	PhoneOnline[playerid] = 0;
	PlayerInfo[playerid][pSelectPlayer] = -1;
	PlayerInfo[playerid][pTargetPlayer] = -1;
	PlayerInfo[playerid][pTargetAction] = 0;
	ChosenSkin[playerid] = 0;
	InviteSkin[playerid] = 0;
	PEfir[playerid] = 255;
	Pefir[playerid] = 0;
	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = INVALID_PLAYER_ID;
	OldSkin[playerid] = 230;
	TakingLesson[playerid] = 0;
	CP[playerid] = 0;
	TheifTime[playerid] = 0;
	TheifCount[playerid] = 0;
	TheifRobID[playerid] = INVALID_PLAYER_ID;
	TheifKey[playerid] = 0;
	TheifMoney[playerid] = 0;
	RefillOffer[playerid] = INVALID_PLAYER_ID;
	RefillPrice[playerid] = 0;
	TalkingLive[playerid] = INVALID_PLAYER_ID;
	TalkingLivels[playerid] = INVALID_PLAYER_ID;
	LiveOffer[playerid] = INVALID_PLAYER_ID;
	LiveOfferls[playerid] = INVALID_PLAYER_ID;
	RepairOffer[playerid] = INVALID_PLAYER_ID;
	SELL[0][playerid] = INVALID_PLAYER_ID;
	SELL[1][playerid] = INVALID_PLAYER_ID;
	SELL[2][playerid] = INVALID_PLAYER_ID;
	RepairPrice[playerid] = 0;
	RepairCar[playerid] = 0;
	TieTime[playerid] = 0;
	playerradio[playerid] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	PlayerTied[playerid] = 0;
	VertMats[playerid] = 0;
	Mobile[playerid] = -1;
	BigEar[playerid] = 0;
	BigEarSms[playerid] = 0;
	StartDuty[playerid] = 0;
    UsingCursor[playerid] = 0;
    CroupierGame[playerid] = 0;
    CroupierTable[playerid] = -1;
    DiceTable[playerid] = -1;
	DiceGamer[playerid] = -1;
	ChooseBet[playerid] = 0;
	Glasses[playerid] = 0;
	RouleTable[playerid] = -1;
	RouleGamer[playerid] = -1;
	RouleHorizont[playerid] = 0;
	RouleVertikal[playerid] = 4;
	RouleChip[playerid] = 0;
	strdel(RouleNumber[playerid], 0, 12);
	RouleBet[playerid] = 0;
	Casino[playerid] = 0;
	BlackJackTable[playerid] = -1;
	BlackJackGamer[playerid] = -1;
	BlackJackPoints[playerid] = 0;
	BlackJackCards[playerid] = 0;
	BlackJackTime[playerid] = 0;
	BlackJackBet[playerid] = 0;
	BlackJackDoubleUse[playerid] = 0;
	MarryWitness[playerid] = INVALID_PLAYER_ID;
	MarryWitnessOffer[playerid] = INVALID_PLAYER_ID;
	onlinecheck[playerid] = 0;
	afkcheck[playerid] = 0;
	TheftKey[playerid] = 0;
	TheftCount[playerid] = 0;
	TheftCarID[playerid] = 0;
	TheftTime[playerid] = 0;
	// ÒÞÍÈÍÃ
	TuneColor[playerid][0] = -1;
	TuneColor[playerid][1] = -1;
	ChangeTuneDetail[playerid] = 0;
	TuneID[playerid] = -1;
	TuneShop[playerid] = 0;
	cTune[playerid][0][0] = -1;
	cTune[playerid][1][0] = -1;
	for(new i = 1; i < 15; i++) cTune[playerid][0][i] = 0, cTune[playerid][1][i] = 0;
    for(new i = 0; i < 2; i++) cColor[playerid][0][i] = 0, cColor[playerid][1][i] = 0;
	//
	ChangeAll[playerid][cSeller] = INVALID_PLAYER_ID;
	ChangeAll[playerid][cBuyer] = INVALID_PLAYER_ID;
	ChangeAll[playerid][cPrice] = 0;
	ChangeAll[playerid][cType] = 0;
	PlayerInfo[playerid][pLevel] = 1;
	PlayerInfo[playerid][pPhousekey] = 255;
	PlayerInfo[playerid][pHomez] = 255;
	PlayerInfo[playerid][pChar] = 90;
	PlayerInfo[playerid][pSkinhome][0] = 72;
	PlayerInfo[playerid][pSkinhome][1] = 72;
	PlayerInfo[playerid][pSkinhome][2] = 72;
	PlayerInfo[playerid][pExp] = 1;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pModel] = 230;
	PlayerInfo[playerid][pPayDayHad] = 1;
	PlayerInfo[playerid][pFightSkill] = 1;
	PlayerInfo[playerid][pCar] = 0;
	PlayerInfo[playerid][pCar2] = 0;
	PlayerHealth[playerid] = 100;
	SetPlayerArmour(playerid,0);
	SetPlayerColor(playerid,COLOR_WHITE);
	format(mysql_query_, sizeof(mysql_query_),"SELECT * FROM `baniplog` WHERE `ip` = '%s' LIMIT 1", PlayerInfo[playerid][pIP]);
    mysql_tquery(connects, mysql_query_, "OnPlayerBanipCheck", "i", playerid);
    for(new i; i != 9; i++) TextDrawShowForPlayer(playerid, td_logo[i]);
    TextDrawShowForPlayer(playerid, GenuineLogo[0]);
	TextDrawShowForPlayer(playerid, GenuineLogo[1]);
//	TextDrawShowForPlayer(playerid, GenuineLogo[2]);
//	TextDrawShowForPlayer(playerid, GenuineLogo[3]);
    PlayAudioStreamForPlayer(playerid, "http://a.top4top.io/m_3103kapy01.mp3"); //intro music
	return true;
}
#define SPD ShowPlayerDialog
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == 4499)
	{
	    if(response)
	    {
	        SetPVarInt(playerid, "SKINID", GetPlayerSkin(playerid));
	        SetPlayerSkin(playerid, 262);
	        //________________________[.]_____________________
	    	new rand666=random(6);
	    	switch (rand666)
	    	{
				case 0:SetPlayerCheckpoint(playerid,508.5461,-1823.4453,5.5823,0.6), object1[playerid] = CreatePlayerObject(playerid, 1264, 508.5461,-1823.4453,5.5823-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 1:SetPlayerCheckpoint(playerid,559.0388,-1871.4319,4.1248,0.6), object2[playerid] = CreatePlayerObject(playerid, 917, 559.0388,-1871.4319,4.1248-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 2:SetPlayerCheckpoint(playerid,513.3473,-1897.3883,1.5154,0.6), object3[playerid] = CreatePlayerObject(playerid, 2672, 513.3473,-1897.3883,1.5154-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 3:SetPlayerCheckpoint(playerid,494.5392,-1873.6088,3.2831,0.6), object4[playerid] = CreatePlayerObject(playerid, 1264, 494.5392,-1873.6088,3.2831-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 4:SetPlayerCheckpoint(playerid,463.7719,-1853.4425,3.6171,0.6), object5[playerid] = CreatePlayerObject(playerid, 1264, 463.7719,-1853.4425,3.6171-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
				case 5:SetPlayerCheckpoint(playerid,462.6543,-1822.2416,5.4836,0.6), object6[playerid] = CreatePlayerObject(playerid, 1264, 462.6543,-1822.2416,5.4836-0.5, 0, 0, 96, 300.0), musor[playerid] = 1;
    		}
    		total[playerid] = 0;
    		//________________________[]_____________________
    		TextDrawShowForPlayer(playerid, work0);
    		TextDrawShowForPlayer(playerid, work1);
    		TextDrawShowForPlayer(playerid, work2);
    		TextDrawShowForPlayer(playerid, work3);
    		TextDrawShowForPlayer(playerid, work4);
    		TextDrawShowForPlayer(playerid, work5);
    		TextDrawShowForPlayer(playerid, work6);
    		SendClientMessage(playerid, 0xFFFFFFAA, "{1562C6}[!]: {FFFFFF}You started working as a garbage man.");
	    }else SendClientMessage(playerid, 0xFFFFFFAA, "{1562C6}[!]: {FFFFFF}You have to press the 'yes' button to start the work.");
	}
	if(HackerJob[playerid] == 1)
	{
	    if(!response)
   		{
/*          	SpawnPlayer(playerid);
   		    KillTimer(HJLimitTimer);
   		    ShowPlayerDialog(playerid,-1,0,"","","","");
	    	SetPlayerVirtualWorld(playerid, 0);
      		SetPlayerInterior(playerid,0);
			HackerJob[playerid] = 0;
			SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");*/
			SpawnPlayer(playerid);
			SetPPos(playerid, -91.1709,-1576.5309,2.6172);
			SetPlayerVirtualWorld(playerid, 0);
			HackerJob[playerid] = 0;
			SetPlayerInterior(playerid, 0);
			TogglePlayerControllable(playerid,true);
			SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
			return 1;
		}
	    if(dialogid == 1998)
		{
       		if(strfind(inputtext,"began") != -1)
       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,2);
	       		    SetPlayerPos(playerid, 2549.7 +2,-1297.8,1060.9);
	           		SetPlayerFacingAngle(playerid, 92.0);
		   			SetPlayerCameraPos(playerid, 2551.4,-1297.8,1062.1);
		   			SetPlayerCameraLookAt(playerid, 2549.7,-1297.8,1061);
		   			TogglePlayerControllable(playerid,false);
				 	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerTwo", 6000, 0, "d", playerid);
   			}
			else
			{

				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");

					return 1;
			}
		}
	    if(dialogid == 1999)
		{
			if(strfind(inputtext,"keygen") != -1)
       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,3);
	       		    SetPlayerPos(playerid, 830.7 +2,-0.2,1004.1);
	           		SetPlayerFacingAngle(playerid, 178.9);
	  				SetPlayerCameraPos(playerid, 830.7,0.3,1005.2);
	  				SetPlayerCameraLookAt(playerid, 830.7,-0.2,1004.8);
	  				TogglePlayerControllable(playerid,false);
		 			GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerThree", 6000, 0, "d", playerid);
  	 		}
			else
			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
	    if(dialogid == 2000)
		{
			if(strfind(inputtext,"cracked") != -1)
       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,6);
	       		    SetPlayerPos(playerid, 231.6 +2,80.3,1005.0);
	  				SetPlayerFacingAngle(playerid, 46.3);
				   	SetPlayerCameraPos(playerid, 232.7,79.4,1005.6);
				   	SetPlayerCameraLookAt(playerid, 231.6,80.3,1005.0);
				   	TogglePlayerControllable(playerid,false);
				   	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerFour", 6000, 0, "d", playerid);
   			}
			else
			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
	    if(dialogid == 2001)
		{
			if(strfind(inputtext,"worm") != -1)
			{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,2);
	       		    SetPlayerPos(playerid, 2572.1 -2,-1291.3,1037.7);
	  				SetPlayerFacingAngle(playerid, 276.5);
	  				SetPlayerCameraPos(playerid, 2571.3,-1291.3,1038.3);
	  				SetPlayerCameraLookAt(playerid, 2572.1,-1291.3,1038.4);
	  				TogglePlayerControllable(playerid,false);
	  				GameTextForPlayer(playerid,"~p~hacking...",6000,6);
				 	return SetTimerEx("HackerFive", 6000, 0, "d", playerid);
     		}
			else
			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
		if(dialogid == 2002)
		{
 			if(strfind(inputtext,"virus") != -1)
  			{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,2);
	       			SetPlayerPos(playerid, 2568.3 -3,-1294.6,1037.7);
 					SetPlayerFacingAngle(playerid, 207.0);
		   			SetPlayerCameraPos(playerid, 2568.0,-1293.7,1038.6);
				 	SetPlayerCameraLookAt(playerid, 2568.8,-1294.6,1038.3);
		   			TogglePlayerControllable(playerid,false);
				 	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
	 				return SetTimerEx("HackerSix", 6000, 0, "d", playerid);
   			}
 			else
 			{
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
			}
		}
		if(dialogid == 2003)
		{
	  		for(new i = 0; i < strlen(inputtext); i++)
	        {
	        	if(strfind(inputtext,"trojan") != -1)
	       		{
	       		    SetPlayerVirtualWorld(playerid, playerid+1);
	       		    SetPlayerInterior(playerid,0);
	       			SetPlayerPos(playerid, 212.4 +10,1822.9,6.4);
					SetPlayerFacingAngle(playerid, 89.7);
		   			SetPlayerCameraPos(playerid, 216.4,1823.1,7.8);
		   			SetPlayerCameraLookAt(playerid, 212.4,1822.9,6.4);
		   			TogglePlayerControllable(playerid,false);
				 	GameTextForPlayer(playerid,"~p~hacking...",6000,6);
	 				return SetTimerEx("HackerSeven", 6000, 0, "d", playerid);
	     		}
    	 		else
	  			{
/*					SpawnPlayer(playerid);
          			SetPlayerPos(playerid, -91.1709,-1576.5309,2.6172);
		   		    KillTimer(HJLimitTimer);
		   		    ShowPlayerDialog(playerid,-1,0,"","","","");
			    	SetPlayerVirtualWorld(playerid, 0);
			    	SetPlayerInterior(playerid,0);
					HackerJob[playerid] = 0;
					SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");*/
				 	SpawnPlayer(playerid);
				 	SetPPos(playerid, -91.1709,-1576.5309,2.6172);
				 	SetPlayerVirtualWorld(playerid, 0);
				 	HackerJob[playerid] = 0;
				 	SetPlayerInterior(playerid, 0);
				 	TogglePlayerControllable(playerid,true);
				 	SendClientMessage(playerid, 0xFF0000AA, "You have failed to do the hacks.");
					return 1;
				}
	      	}
		}
	}
	if(dialogid == 5451)
	{
	    if(response)
	    {
	        if(PlayerInfo[playerid][pCash] < 2500000) return SendClientMessage(playerid, COLOR_WHITE, "{2cdb0d}You don't have enough money!");
            PlayerInfo[playerid][pMedCard] = 1;
            SendClientMessage(playerid, -1, "{FFFF00}Med-card purchased successfully!");
            PlayerInfo[playerid][pCash] -= 2500000;
        }
	}

	new gun,ammo, money;
	new gunname[32];
	{
	    switch(dialogid)
		{
		case 1:
		{
	    	if(!response || strlen(inputtext) < 6 || strlen(inputtext) > 64)
			{
				new string[256];
				format(string, sizeof(string), "{FFFFFF}That username is registered, please enter your password below.\n\n{32a84e}Username: {ffffff}%s \n\n{32a84e}Password:", PlayerInfo[playerid][pNames]);
                return ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Login | Asian city Role-Play", string, "Login", "Quit");
			}
			strmid(CheckPass[playerid], inputtext, 0, strlen(inputtext), 65);
			new hash[65];
			SHA256_PassHash(CheckPass[playerid], PlayerInfo[playerid][pSalt], hash, 65);
			if(!strcmp(hash, PlayerInfo[playerid][pPassword]))
			{
				CheckPass[playerid][0] = 0;
				mysql_format(connects, mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_ACCOUNT"` WHERE `Name` = '%e' LIMIT 1", PlayerInfo[playerid][pNames]);
				print(mysql_query_);
				mysql_tquery(connects, mysql_query_, "LoginCallback", "i", playerid);
			}
			else
			{
				if(GetPVarInt(playerid, "wrongPass") == 2)
				{
					SendClientMessage(playerid,COLOR_GREY,"You are kicked from the server for entering your password incorrectly. Please try again later!");
					return KickEx(playerid);
				}
				new string[256];
				SetPVarInt(playerid, "wrongPass", GetPVarInt(playerid, "wrongPass")+1);
				format(stringer1,sizeof(stringer1),"Login | Wrong Password: %d", (3 - GetPVarInt(playerid, "wrongPass")));
                format(string, sizeof(string), "{FFFFFF}That username is registered, please enter your password below.\n\n{32a84e}Username: {ffffff}%s \n\n{32a84e}Password:", PlayerInfo[playerid][pNames]);
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "Login | Asian city Role-Play", string, "Login", "Quit");
				SendClientMessage(playerid, 0xE93636AA, stringer1);
			}
			return 1;
		}
		case 2:
		{
			if(!response) return KickEx(playerid);
		    else if(PlayerRegMode[playerid] == 1)
		    {
		        if(strlen(inputtext) < 5 || strlen(inputtext) > 40 || !IsValidEmail(inputtext))
				{
					ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{FFFF00}E-Mail {FFFFFF}| Registration","{FFFFFF}Please enter your valid email address.\nBy confirming your email address in the future, you will have additional options.","Next","");
					return SendClientMessage(playerid, 0xE93636AA,"Mail is misspelled.");
				}
				strmid(PlayerInfo[playerid][pEmail], inputtext, 0, strlen(inputtext), 65);

				PlayerRegMode[playerid] = 3;

				ShowPlayerDialog(playerid,2,DIALOG_STYLE_LIST,"{FFFF00}Gender selection {FFFFFF}| Registration","Male\nFemale","Next","");
		    }
			else if(PlayerRegMode[playerid] == 2)
			{
				if(strlen(inputtext) < 6 || strlen(inputtext) > 64)
				{
					ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT, "{FFFF00}Account registration {FFFFFF}| AP-RP", "{FFFFFF}Welcome to the server — {3399FF}"NAME_SERVER" Role Play{FFFFFF}\nThis account {00ff00}free {FFFFFF}for registration\n\nEnter the password for your account\nIt will be requested every time you log into the server\n\n\t{FF0000}Important:\n\t{FFFFFF}— Password length from 6 to 15 characters\n\t— The password can consist of Russian and Latin characters\n\t— Password is case sensitive", "Next", "");
					return SendClientMessage(playerid, 0xE93636AA,"Available password range: 6 - 64.");
				}
				strmid(CheckPass[playerid], inputtext, 0, strlen(inputtext), 65);
				PlayerRegMode[playerid] = 1;
    			ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{FFFF00}E-Mail {FFFFFF}| Registration","{FFFFFF}Enter your valid email address.\nBy confirming the email address in the future, you will have additional opportunities.","Next","");
			}
			else if(PlayerRegMode[playerid] == 3)
			{
				PlayerInfo[playerid][pSex] = listitem+1;
				PlayerRegMode[playerid] = 4;
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_LIST,"{FFFF00}Choice of nationality {FFFFFF}| Registration","{FFFFFF}Egypt\nIraq\nAmerican\nRussian\nEuropa\nMalaysian\nIndonesian\nBangladesh","Next","");
			}
			else if(PlayerRegMode[playerid] == 4)
			{
				PlayerInfo[playerid][pNational] = listitem+1;
				PlayerRegMode[playerid] = 5;
				ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{FFFF00}Character age {FFFFFF}| Registration","{FFFFFF}Enter the age of your avatar from 13 to 90 years old","Next","");
			}
			else if(PlayerRegMode[playerid] == 5)
			{
				if(strval(inputtext) < 13 || strval(inputtext) > 90)
				{
					ShowPlayerDialog(playerid,2,DIALOG_STYLE_INPUT,"{0099CC}Character age","{FFFFFF}Enter the age of your avatar from 13 to 90 years old","Next","");
		            return 1;
		        }
 				PlayerInfo[playerid][pAge] = strval(inputtext);
				PlayerRegMode[playerid] = 0;
				SetPVarInt(playerid, "Registration", 1);
				SpawnPlayer(playerid);
				SetPlayerVirtualWorldEx(playerid, playerid + 10);
				SetPlayerInteriorEx(playerid,0);
				if(PlayerInfo[playerid][pSex] == 1)
				{
					new ran = random(7);
     				SetPlayerSkin(playerid, SkinMen[ran][0]);
				}
				else
				{
					new ran = random(5);
					SetPlayerSkin(playerid, SkinMale[ran][0]);
				}
				TogglePlayerControllable(playerid, true);
				PlayerInfo[playerid][pChar] = GetPlayerSkin(playerid);
				PlayerRegisterMySQL(playerid);
			}
			return 1;
		}
		case 3:
		{
			if(PlayerRegStep[playerid] != 2) return true;
			else if(!response) PlayerRegMode[playerid] = 0;
		    else if(PlayerRegMode[playerid] == 1)
		    {
		        PlayerInfo[playerid][pSex] = listitem+1;
				PlayerRegMode[playerid] = 0;
				PlayerTextDrawSetString(playerid, PTD_Reg2[playerid][1], (!listitem) ? ("MALE") : ("FEMALE"));
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][1]);
		    }
		    else if(PlayerRegMode[playerid] == 2)
		    {
		        PlayerInfo[playerid][pNational] = listitem+1;
				PlayerRegMode[playerid] = 0;
				new NameNationalsEng[8][11] = {	"American", "Russian", "Malaysian", "Indonesian", "Bangladesh", "Europian", "Arabian", "Japanese" };
				PlayerTextDrawSetString(playerid, PTD_Reg2[playerid][2], NameNationalsEng[listitem]);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][2]);
		    }
		    else if(PlayerRegMode[playerid] == 3)
		    {
		        if(strval(inputtext) < 13 || strval(inputtext) > 90) {
					ShowPlayerDialog(playerid, 3, DIALOG_STYLE_INPUT, "{0099CC}Character age","{FFFFFF}Enter the age of your avatar from 15 to 90 years old", "Put", "Close");
		            return 1;
		        }
				PlayerInfo[playerid][pAge] = strval(inputtext);
				PlayerRegMode[playerid] = 0;
				new age[2];
				valstr(age, PlayerInfo[playerid][pAge]);
				PlayerTextDrawSetString(playerid, PTD_Reg2[playerid][3], age);
				PlayerTextDrawShow(playerid, PTD_Reg2[playerid][3]);
		    }
		    return true;
		}
		case 2323:
			{
				new x;
				switch(GetPVarInt(playerid,"AutoShop"))
				{
					case 3,4: x = 2;
				}
				if(response) SetPVarInt(playerid,"CarShop",x+1);
				else SetPVarInt(playerid,"CarShop",x+2);
				ShowBuyCar(playerid);
				return true;
			}
		case 2324:
			{
				if(!response)
				{
					if(PlayerInfo[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1]) return SendClientMessage(playerid,COLOR_WHITE,"There is not enough money in your bank account!");
					PlayerInfo[playerid][pCar2] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
					cColor[playerid][1][0] = GetPVarInt(playerid,"BuyColor");
				    cColor[playerid][1][1] = GetPVarInt(playerid,"BuyColor1");
					PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
    				if(PlayerInfo[playerid][pQuest3] == 0)
             		{
             			PlayerInfo[playerid][pQuest3] = 1;
	             		UpdatePlayerData(playerid, "pQuest3", PlayerInfo[playerid][pQuest3]);
             		}
					ExitCar(playerid);
					SaveVehicleColor(playerid, 1);
					return true;
				}
				if(PlayerInfo[playerid][pBank] < ShopCar[GetPVarInt(playerid, "SelectAvto")][1]) return SendClientMessage(playerid,COLOR_WHITE,"There is not enough money in your bank account!");
				PlayerInfo[playerid][pCar] = ShopCar[GetPVarInt(playerid, "SelectAvto")][0];
				cColor[playerid][0][0] = GetPVarInt(playerid,"BuyColor");
				cColor[playerid][0][1] = GetPVarInt(playerid,"BuyColor1");
				PlayerInfo[playerid][pBank] -= ShopCar[GetPVarInt(playerid, "SelectAvto")][1];
				if(PlayerInfo[playerid][pQuest3] == 0)
  				{
   					PlayerInfo[playerid][pQuest3] = 1;
  					UpdatePlayerData(playerid, "pQuest3", PlayerInfo[playerid][pQuest3]);
  				}
				ExitCar(playerid);
				SaveVehicleColor(playerid, 0);
				return true;
			}
		case 22800:
			{
			    if(response != 1)
			        return true;

				TogglePlayerControllable(playerid, 0);
				SetTimerEx("CreatingBreak", 3000, false, "i", playerid);
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 0, 3000, 1);

				SetPVarInt(playerid, "BreakID", listitem + 1);
				return true;
			}
		case 2425:
			{
				if(!response) return true;
				ExitCar(playerid);
				return true;
			}
		case 1939:
		    {
		        if(response)
		        {
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInteriorEx(playerid, 6);
					SetPlayerFacingAngle(playerid, 87.0766);
					DestroyVehicleEx(vehiclerc[playerid]);
					DeletePVar(playerid, "rentrc");
					SendClientMessage(playerid, 0xafafafff, "You refuse to rent a vehicle");
				}
			}
		case 2250:
			{
				if(response)
				{
				    if(PlayerInfo[playerid][pOdet] == 1) return SendClientMessage(playerid,COLOR_WHITE,"You are already in service!");
					SetPlayerSkinEx(playerid,PlayerInfo[playerid][pModel]);
					SendClientMessage(playerid,COLOR_WHITE,"You changed into work uniform.");
					SetPlayerToTeamColor(playerid);
					PlayerInfo[playerid][pOdet] = 1;
				}
				else
				{
				    if(PlayerInfo[playerid][pOdet] == 0) return SendClientMessage(playerid,COLOR_WHITE,"You are already not work!");
					SetPlayerSkinEx(playerid,PlayerInfo[playerid][pChar]);
					SendClientMessage(playerid,COLOR_WHITE,"You have changed into your regular clothes.");
					SetPlayerColor(playerid, 0xe6e6e6FF);
					PlayerInfo[playerid][pOdet] = 0;
				}
				format(mysql_query_, sizeof(mysql_query_), "UPDATE `"TABLE_ACCOUNT"` SET `odet` = '%d' WHERE `pID` = '%d'",PlayerInfo[playerid][pOdet],PlayerInfo[playerid][pID]);
				mysql_function_query(connects, mysql_query_, false, "", "");
				return true;
			}
	 	case 1653:
			{
		    	if(response)
		    	{
		        	PlayerInfo[playerid][pType] = listitem;
          			switch(listitem)
		        	{
		            	case 0: PlayerInfo[playerid][pType2]=4;
		            	case 1: PlayerInfo[playerid][pType2]=0;
		            	case 2: PlayerInfo[playerid][pType2]=0;
		            	case 3: PlayerInfo[playerid][pType2]=0;
		            	case 4: PlayerInfo[playerid][pType2]=0;
		            	case 5: PlayerInfo[playerid][pType2]=0;
		            	case 6: PlayerInfo[playerid][pType2]=0;
		            	case 7: PlayerInfo[playerid][pType2]=1;
		            	case 8: PlayerInfo[playerid][pType2]=3;
		            	case 9: PlayerInfo[playerid][pType2]=0;
		            	case 10: PlayerInfo[playerid][pType2]=2;
		            	case 11: PlayerInfo[playerid][pType2]=5;
		            	case 12: PlayerInfo[playerid][pType2]=0;
		            	case 13: PlayerInfo[playerid][pType2]=0;
		        	}
          			SetPlayerBuyItem(playerid);
		    	}
			}
		case 3333:
        {
            if(!response) return true;
			new Float:Coords[3], in = GetPlayerInterior(playerid), vw = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, Coords[0], Coords[1], Coords[2]);
			SetPVarFloat(playerid, "BackX", Coords[0]), SetPVarFloat(playerid, "BackY", Coords[1]), SetPVarFloat(playerid, "BackZ", Coords[2]), SetPVarInt(playerid, "BackIn", in), SetPVarInt(playerid, "BackVw", vw);
            SetPPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
            SetPlayerInteriorEx(playerid, TeleportInfo[0]);
            SetPlayerVirtualWorldEx(playerid, TeleportInfo[1]);
            SendClientMessage(playerid,COLOR_BLUE,"You were successfully teleported to the event location.");
	        SendClientMessage(playerid,COLOR_BLUE,"Use the '/back' command to go back.");
            return true;
        }
    	case 1691:
			{
		    	if(!response) return MainMenuPl(playerid);
	        	switch(listitem)
	        	{
	            	case 0:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
                    	PlayerInfo[playerid][pType2] = 0;
                    	ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessory Inventory","{FFFFFF}Item: {F39F3F}Headdress{FFFFFF}\nUsed cell: {F39F3F}1{FFFFFF}\n\nTo discard an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 1:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 1;
	                	ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessory Inventory","{FFFFFF}Item: {F39F3F}Glasses{FFFFFF}\nUsed cell: {F39F3F}2{FFFFFF}\n\nTo throw away an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 2:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 2;
              			ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessories Inventory","{FFFFFF}Item: {F39F3F}Wristwatch{FFFFFF}\nUsed cell: {F39F3F}3{FFFFFF}\n\nTo discard an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 3:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 3;
						ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessories Inventory","{FFFFFF}Item: {F39F3F}Bandana{FFFFFF}\nUsed cell: {F39F3F}4{FFFFFF}\n\nTo throw away an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 4:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 4;
						ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessory Inventory","{FFFFFF}Item: {F39F3F}Headphones{FFFFFF}\nUsed cell: {F39F3F}5{FFFFFF}\n\nTo throw away an item, press ENTER or Back to return to the menu.","Accept","Back");
	            	}
	            	case 5:
	            	{
	                	if(PlayerInfo[playerid][pSlotItem][listitem]==0) return Myitems(playerid),SendClientMessage(playerid,COLOR_RED,"[ERROR] {FFFFFF}This cell is empty, you can buy the item in the accessories store!");
	                	PlayerInfo[playerid][pType2] = 5;
						ShowPlayerDialog(playerid,1692,0,"{FFD700}Accessories Inventory","{FFFFFF}Item: {F39F3F}Bags{FFFFFF}\nUsed cell: {F39F3F}6{FFFFFF}\n\nTo discard an item press ENTER or Back to return to the menu.","Accept","Back");
	            	}
				}
			}
/*		case 24123:
		{
			if(!response) return DeletePVar(playerid, "arena_pick");
			new arena;
			if(sscanf(inputtext, "d", arena))
			{
				return ShowPlayerDialog(playerid, 24123, DIALOG_STYLE_INPUT, "{ffffff}Âûáîð ëîêàöèè", "{ffffff}Enter íîìåð ëîêàöèè (0-15):", "Next", "Cancle");
			}
			if(arena < 0 || arena > 15)
			{
				SendClientMessage(playerid, COLOR_GREY, "Enter íîìåð àðåíû îò 0 äî 15!");
				return ShowPlayerDialog(playerid, 24123, DIALOG_STYLE_INPUT, "{ffffff}Âûáîð ëîêàöèè", "{ffffff}Enter íîìåð ëîêàöèè (0-15):", "Next", "Cancle");
			}
			SetPVarInt(playerid, "arena_id_player", arena);
			ShowPlayerDialog(playerid, 24124, DIALOG_STYLE_LIST, "{ffffff}Âûáîð îðóæèÿ", "{ffffff}Deagle + Shotgun\nDeagle + M4\nDeagle + Rifle", "Next", "Cancle");
			return true;
		}*/
		case 24123:
		{
			if(!response) return DeletePVar(playerid, "arena_pick");
			new arena;
			SetPVarInt(playerid, "arena_id_player", arena);
			ShowPlayerDialog(playerid, 24124, DIALOG_STYLE_LIST, "{ffffff}Dmzone", "{ffffff}Dmzone {109e12}1\n{ffffff}Dmzone {109e12}2\n{ffffff}Dmzone {109e12}3", "{109e12}Select", "{ffffff}Return");
			return true;
		}
		case 1398:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0: rentrc(playerid,350000,441);
		        case 1: rentrc(playerid,350000,564);
		        case 2: rentrc(playerid,350000,501);
		        case 3: rentrc(playerid,350000,465);
			}
			return true;
		}
		case 1399:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0: rentrc(playerid,60000,550);
				case 1: rentrc(playerid,25000,586);
			}
			return true;
		}
		case 24151: {
			if(!response) return true;
			new itters = 0;
			for(new i = 1; i < TOTALBIZZ + 1; i++)
			{
				if(!strcmp(BizzInfo[i][bOwner], "None", true)) itters++;
				if(itters == listitem) {
					SetPlayerCheckpoint(playerid, BizzInfo[i + 1][bEntrx],BizzInfo[i + 1][bEntry],BizzInfo[i + 1][bEntrz], 5.0);
					SetPVarInt(playerid, "FindBizz", 1), SetPVarFloat(playerid, "CoordX", BizzInfo[i + 1][bEntrx]), SetPVarFloat(playerid, "CoordY", BizzInfo[i + 1][bEntry]), SetPVarFloat(playerid, "CoordZ", BizzInfo[i + 1][bEntrz]);
					SendClientMessage(playerid, -1, "Business marked on {FF0000} map!");
					break;
				}
			}
			return true;
		}
		case 24124:
		{
			if(!response) return DeletePVar(playerid, "arena_pick");
			SetPlayerVirtualWorldEx(playerid, GetPVarInt(playerid, "arena_id_player") + 1337);
			SetPlayerInteriorEx(playerid, 0);
			switch(random(5))
			{
				case 0: SetPPos(playerid, -384.4847,2238.7910,42.0938);
				case 1: SetPPos(playerid, -413.7166,2271.1560,42.1350);
				case 2: SetPPos(playerid, -413.7879,2270.6309,42.1530);
				case 3: SetPPos(playerid, -445.7326,2221.9536,42.4297);
				case 4: SetPPos(playerid, -389.9460,2194.2104,42.4159);
			}
			SetPVarFloat(playerid, "Health", GetPlayerHealth(playerid)), SetPVarFloat(playerid, "Armour", GetPlayerArmour(playerid));
			ResetPlayerWeapons(playerid);
			switch(listitem)
			{
				case 0:
				{
					GiveWeapon(playerid, 24, 1000);
//					GiveWeapon(playerid, 25, 1000);
				}
				case 1:
				{
					GiveWeapon(playerid, 24, 1000);
					GiveWeapon(playerid, 25, 999);
				}
				case 2:
				{
					GiveWeapon(playerid, 24, 1000);
					GiveWeapon(playerid, 31, 1000);
				}
				case 3:
				{
					GiveWeapon(playerid, 24, 1000);
					GiveWeapon(playerid, 33, 999);
				}
			}
			SetPVarInt(playerid, "arena_weapon_set", listitem);
			SetPVarInt(playerid, "on_dmarena", 1);
			SendClientMessage(playerid, -1, "Don't use cheats in {b8b5ff}Dmzone {FFFFFF}or you will get BAN {FFFF00} to leave /dmexit {2cdb0d}/rep admins will help you soon {FF0000}adminstrators");
			return true;
		}
		case 1692:
			{
		    	if(response)
		    	{
		        	if(PlayerInfo[playerid][pSlotItem][PlayerInfo[playerid][pType2]]==0) return Myitems(playerid);
		        	switch(PlayerInfo[playerid][pType2])
                	{
                    	case 0: if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
                    	case 1: if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						case 2: if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
						case 3: if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
						case 4: if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
						case 5: if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
                	}
                	PlayerInfo[playerid][pSlotItem][PlayerInfo[playerid][pType2]]=0;
                	format(PlayerInfo[playerid][pSlotItems],64,"%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5]);
					format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_ACCOUNT"` SET `acessories` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pSlotItems], PlayerInfo[playerid][pID]);
                    mysql_tquery(connects, mysql_query_, "", "");
                	FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
                	Myitems(playerid);
				}
				else Myitems(playerid);
				PlayerInfo[playerid][pType2] = -1;
			}
		case 7778:
	        {
	            if(!response) return DeletePVar(playerid,"MarketType");
	            if(PlayerInfo[playerid][pCash] < BazarAcc[GetPVarInt(playerid,"MarketType")][bMoney]) return SendClientMessage(playerid, -1, "• {AC0000}[ERROR] {ffffff}You don't have enough cash in your hand.");
	            CheckItem(playerid);
			    if(BazarAcc[GetPVarInt(playerid,"MarketType")][aID] != 0)
			    {
                    GiveItem(playerid,BazarAcc[GetPVarInt(playerid,"MarketType")][aID]);
				    PlayerInfo[playerid][pSlotItem][0]=BazarAcc[GetPVarInt(playerid,"MarketType")][aID];
			    }
			    else
			    {
			        switch(GetPVarInt(playerid,"MarketType"))
			        {
			            case 0:
			            {
			                new abj = RandomEx(18891,18905);
                            GiveItem(playerid,abj);
						    PlayerInfo[playerid][pSlotItem][0]=abj;
			            }
			        }
			    }
			    FIXES_ApplyAnimation(playerid,"goggles","goggles_put_on",4.1,0,0,0,0,0,1);
			    PlayerInfo[playerid][pCash] -= BazarAcc[GetPVarInt(playerid,"MarketType")][bMoney];
			    format(PlayerInfo[playerid][pSlotItems],64,"%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pSlotItem][0],PlayerInfo[playerid][pSlotItem][1],PlayerInfo[playerid][pSlotItem][2],PlayerInfo[playerid][pSlotItem][3],PlayerInfo[playerid][pSlotItem][4],PlayerInfo[playerid][pSlotItem][5]);
			    format(mysql_query_, sizeof(mysql_query_),"UPDATE `"TABLE_ACCOUNT"` SET `acessories` = '%s' WHERE `pID` = '%d'", PlayerInfo[playerid][pSlotItems], PlayerInfo[playerid][pID]);
                mysql_tquery(connects, mysql_query_, "", "");
			    SendMes(playerid,-1,"You bought %s",BazarAcc[GetPVarInt(playerid,"MarketType")][BName]);
			    DeletePVar(playerid,"MarketType");
	        }
		case 2018:
			{
				if(!response) return true;
				if(PlayerInfo[playerid][pAlcoInvenxua] > 13) return SendClientMessage(playerid, -1, "In general, I have a 13-colored teddy bear!");
				if(PlayerInfo[playerid][pRub] < 1299)
				{
					SendClientMessage(playerid, COLOR_GREY, "You don’t have enough rubles, you can top them up on the website {FFCD00}"PAGE_SITE" -> Donate");
					return MainMenuPl(playerid);
				}
				PlayerInfo[playerid][pRub] -= 1299;
	     		new string[1000];
				PlayerInfo[playerid][pAlcoInvenxua] = 13;
				PlayerInfo[playerid][pVigs] = 0;

				mysql_format(connects,string, 246, "UPDATE `"TABLE_ACCOUNT"` SET `pAlcoInvenxua` = '%d', `vigs` = '0', `pRub` = '%d' WHERE `pID` = '%d'", PlayerInfo[playerid][pAlcoInvenxua], PlayerInfo[playerid][pRub], PlayerInfo[playerid][pID]);
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}You have successfully purchased full access! Sign up to /alogin");
				SendClientMessage(playerid, COLOR_GREEN, "{0099CC}Use {FFD700}/ahelp, {0099CC}To learn about new commands");

			    new CMDaccess[CMD_NUM + 1];
			    cache_get_field_content(0, "CMDaccess", CMDaccess, connects, sizeof(CMDaccess));
			    sscanf("Îñíîâàòåëü", "s[16+1]", PlayerInfo[playerid][pPrefix]);
		    	for(new i = 0; i < sizeof CMD_names; i++)
				{
					CMDaccess[i] = '1';
					PlayerInfo[playerid][aiCMDaccess][i] = '1';
				}
				CMDaccess[CMD_setadmin] = '1';
				PlayerInfo[playerid][aiCMDaccess][CMD_setadmin] = '1';
				new query[144];
				mysql_format(connects, query, sizeof(query), "UPDATE `accounts` SET `CMDaccess` = '%s', `pPrefix` = '%s' WHERE `Name` = '%e'", CMDaccess,PlayerInfo[playerid][pPrefix],PlayerInfo[playerid][pNames]);
				mysql_function_query(connects, query, false, "", "");
				mysql_function_query(connects, string, false, "", "");
			}
		case 56:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SetPlayerColor(playerid,Cvet_0);
					case 1: SetPlayerColor(playerid,0x089401FF);
					case 2: SetPlayerColor(playerid,0x56FB4EFF);
					case 3: SetPlayerColor(playerid,0x49E789FF);
					case 4: SetPlayerColor(playerid,0x2A9170FF);
					case 5: SetPlayerColor(playerid,0x9ED201FF);
					case 6: SetPlayerColor(playerid,0x279B1EFF);
					case 7: SetPlayerColor(playerid,0x51964DFF);
					case 8: SetPlayerColor(playerid,0xFF0606FF);
					case 9: SetPlayerColor(playerid,0xF68F67FF);
					case 10: SetPlayerColor(playerid,0xF45000FF);
					case 11: SetPlayerColor(playerid,0xBE8A01FF);
					case 12: SetPlayerColor(playerid,0xB30000FF);
					case 13: SetPlayerColor(playerid,0x954F4FFF);
					case 14: SetPlayerColor(playerid,0xE7961DFF);
					case 15: SetPlayerColor(playerid,0xE6284EFF);
					case 16: SetPlayerColor(playerid,0xFF9DB6FF);
					case 17: SetPlayerColor(playerid,0x110CE7FF);
					case 18: SetPlayerColor(playerid,0x0CD7E7FF);
					case 19: SetPlayerColor(playerid,0x139BECFF);
					case 20: SetPlayerColor(playerid,0x2C9197FF);
					case 21: SetPlayerColor(playerid,0x114D71FF);
					case 22: SetPlayerColor(playerid,0x8813E7FF);
					case 23: SetPlayerColor(playerid,0xB313E7FF);
					case 24: SetPlayerColor(playerid,0x758C9DFF);
					case 25: SetPlayerColor(playerid,COLOR_YELLOW);
					case 26: SetPlayerColor(playerid,0xFFEE8AFF);
					case 27: SetPlayerColor(playerid,0xDDB201FF);
					case 28: SetPlayerColor(playerid,0xDDA701FF);
					case 29: SetPlayerColor(playerid,0xB0B000FF);
					case 30: SetPlayerColor(playerid,0x868484FF);
					case 31: SetPlayerColor(playerid,0xB8B6B6FF);
					case 32: SetPlayerColor(playerid,0x333333FF);
					case 33: SetPlayerColor(playerid,0xFAFAFAFF);
					}
				}
			}
		case 17504:
		    {
				if(!response) return 1;
				if(GetPVarType(playerid, "PlacedBB")) {
					switch(listitem) {
						case 0: SetPVarString(playerid, "BBStation", "http://e.top4top.io/m_30014ggpv1.mp3");
						case 1: SetPVarString(playerid, "BBStation", "http://e.top4top.io/m_300135e4r1.mp3");
						case 2: SetPVarString(playerid, "BBStation", "http://k.top4top.io/m_3001otz721.mp3");
						case 3: SetPVarString(playerid, "BBStation", "http://c.top4top.io/m_3001as9k11.mp3");
						case 4: SetPVarString(playerid, "BBStation", "http://j.top4top.io/m_30011m6w51.mp3");
						case 5: SetPVarString(playerid, "BBStation", "http://c.top4top.io/m_3001k5h8k1.mp3");
						case 6: SetPVarString(playerid, "BBStation", "http://i.top4top.io/m_3001wvkli1.mp3");
						case 7: return ShowPlayerDialog(playerid,17511,DIALOG_STYLE_INPUT, "{FF6F00}Enter link", "{FFFFFF}Insert link to radio/song", "Enable","Cancel");
						case 8: {
							if(GetPVarType(playerid, "BBArea"))
							{
								format(stringer1, sizeof(stringer1), "{ea8df7}%s turned off the tape recorder", PlayerInfo[playerid][pNames]);
	                            ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
								foreach(new i: Player)
								{
									if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) StopStream(i);
								}
								DeletePVar(playerid, "BBStation");
							}
							return SendClientMessage(playerid, COLOR_WHITE, "You turned off the tape recorder");
						}
					}
					new myzuc[128];
					GetPVarString(playerid, "BBStation", myzuc, sizeof(myzuc));
					foreach(new i: Player)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, myzuc, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
						}
					}
				}
				return true;
			}
		case 1338:
		{
//			if(!response) return callcmd::adonate(playerid);
			new iter = -1;
			for(new i = 0; i < CMD_NUM; i++)
			{
				if(CMD_price[i] > 0) iter++;
				if(iter == listitem)
				{
					listitem = i;
					break;
				}
			}
			if(PlayerInfo[playerid][pRub] < CMD_price[listitem])
			{
//				callcmd::adonate(playerid);
				return SendClientMessage(playerid,COLOR_GREY, "You don’t have enough rubles, you can replenish them on the website {FFCD00}"PAGE_SITE" -> Donate");
			}
			new fstring[512];
			format(fstring, sizeof fstring, "Do you really want to buy the command \"%s\" for %i Ruble?\nWith this command you can:\n%s", CMD_names[listitem], CMD_price[listitem], CMD_desc[listitem]);
			ShowPlayerDialog(playerid, 24142, DIALOG_STYLE_MSGBOX, "Buying a team", fstring, "Buy", "Back");
			SetPVarInt(playerid, "cmd_buy", listitem);
			return true;
		}
		case 378:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, 380, DIALOG_STYLE_LIST, "{9c9c9c}[0] airbreak on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 1: ShowPlayerDialog(playerid, 381, DIALOG_STYLE_LIST, "{9c9c9c}[1] airbreak in the car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 2: ShowPlayerDialog(playerid, 382, DIALOG_STYLE_LIST, "{9c9c9c}[2] Teleport on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 3: ShowPlayerDialog(playerid, 383, DIALOG_STYLE_LIST, "{9c9c9c}[3] Teleport in the car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 4: ShowPlayerDialog(playerid, 384, DIALOG_STYLE_LIST, "{9c9c9c}[4] Teleport to car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 5: ShowPlayerDialog(playerid, 3855, DIALOG_STYLE_LIST, "{9c9c9c}[5] Teleport in the car to the player", "Disable\nReport to chat\nKick", "Next", "Back");
				case 6: ShowPlayerDialog(playerid, 386, DIALOG_STYLE_LIST, "{9c9c9c}[6] Teleport to pickup", "Disable\nReport to chat\nKick", "Next", "Back");
				case 7: ShowPlayerDialog(playerid, 387, DIALOG_STYLE_LIST, "{9c9c9c}[7] Flyhack on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 8: ShowPlayerDialog(playerid, 388, DIALOG_STYLE_LIST, "{9c9c9c}[8] Flyhack in a car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 9: ShowPlayerDialog(playerid, 389, DIALOG_STYLE_LIST, "{9c9c9c}[9] Speedhack on foot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 10: ShowPlayerDialog(playerid, 390, DIALOG_STYLE_LIST, "{9c9c9c}[10] Speedhack in a car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 11: ShowPlayerDialog(playerid, 391, DIALOG_STYLE_LIST, "{9c9c9c}[11] Car repair", "Disable\nReport to chat\nKick", "Next", "Back");
				case 12: ShowPlayerDialog(playerid, 392, DIALOG_STYLE_LIST, "{9c9c9c}[12] Player health", "Disable\nReport to chat\nKick", "Next", "Back");
				case 13: ShowPlayerDialog(playerid, 393, DIALOG_STYLE_LIST, "{9c9c9c}[13] Armor", "Disable\nReport to chat\nKick", "Next", "Back");
				case 14: ShowPlayerDialog(playerid, 394, DIALOG_STYLE_LIST, "{9c9c9c}[14] Money(dollars)", "Disable\nReport to chat\nKick", "Next", "Back");
				case 15: ShowPlayerDialog(playerid, 395, DIALOG_STYLE_LIST, "{9c9c9c}[15] Weapon", "Disable\nReport to chat\nKick", "Next", "Back");
				case 16: ShowPlayerDialog(playerid, 396, DIALOG_STYLE_LIST, "{9c9c9c}[16] Adding Ammo", "Disable\nReport to chat\nKick", "Next", "Back");
				case 17: ShowPlayerDialog(playerid, 397, DIALOG_STYLE_LIST, "{9c9c9c}[17] Endless ammo", "Disable\nReport to chat\nKick", "Next", "Back");
				case 18: ShowPlayerDialog(playerid, 398, DIALOG_STYLE_LIST, "{9c9c9c}[18] Special Actions", "Disable\nReport to chat\nKick", "Next", "Back");
				case 19: ShowPlayerDialog(playerid, 399, DIALOG_STYLE_LIST, "{9c9c9c}[19] GM player", "Disable\nReport to chat\nKick", "Next", "Back");
				case 20: ShowPlayerDialog(playerid, 400, DIALOG_STYLE_LIST, "{9c9c9c}[20] GM car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 21: ShowPlayerDialog(playerid, 401, DIALOG_STYLE_LIST, "{9c9c9c}[21] Invisible", "Disable\nReport to chat\nKick", "Next", "Back");
				case 22: ShowPlayerDialog(playerid, 402, DIALOG_STYLE_LIST, "{9c9c9c}[22] Lagger", "Disable\nReport to chat\nKick", "Next", "Back");
				case 23: ShowPlayerDialog(playerid, 403, DIALOG_STYLE_LIST, "{9c9c9c}[23] tuning", "Disable\nReport to chat\nKick", "Next", "Back");
				case 24: ShowPlayerDialog(playerid, 404, DIALOG_STYLE_LIST, "{9c9c9c}[24] Parkour mod", "Disable\nReport to chat\nKick", "Next", "Back");
				case 25: ShowPlayerDialog(playerid, 405, DIALOG_STYLE_LIST, "{9c9c9c}[25] Quick player turn", "Disable\nReport to chat\nKick", "Next", "Back");
				case 26: ShowCheatSettingsApanel2(playerid);
			}
		}
		case 379:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, 406, DIALOG_STYLE_LIST, "{9c9c9c}[26] Rapid", "Disable\nReport to chat\nKick", "Next", "Back");
				case 1: ShowPlayerDialog(playerid, 407, DIALOG_STYLE_LIST, "{9c9c9c}[27] Fake spawn", "Disable\nReport to chat\nKick", "Next", "Back");
				case 2: ShowPlayerDialog(playerid, 408, DIALOG_STYLE_LIST, "{9c9c9c}[28] Fake kill", "Disable\nReport to chat\nKick", "Next", "Back");
				case 3: ShowPlayerDialog(playerid, 409, DIALOG_STYLE_LIST, "{9c9c9c}[29] please", "Disable\nReport to chat\nKick", "Next", "Back");
				case 4: ShowPlayerDialog(playerid, 410, DIALOG_STYLE_LIST, "{9c9c9c}[30] Running C.J.", "Disable\nReport to chat\nKick", "Next", "Back");
				case 5: ShowPlayerDialog(playerid, 411, DIALOG_STYLE_LIST, "{9c9c9c}[31] CarShot", "Disable\nReport to chat\nKick", "Next", "Back");
				case 6: ShowPlayerDialog(playerid, 412, DIALOG_STYLE_LIST, "{9c9c9c}[32] race car", "Disable\nReport to chat\nKick", "Next", "Back");
				case 7: ShowPlayerDialog(playerid, 413, DIALOG_STYLE_LIST, "{9c9c9c}[33] Unfreeze", "Disable\nReport to chat\nKick", "Next", "Back");
				case 8: ShowPlayerDialog(playerid, 414, DIALOG_STYLE_LIST, "{9c9c9c}[34] AFK Ghost", "Disable\nReport to chat\nKick", "Next", "Back");
				case 9: ShowPlayerDialog(playerid, 415, DIALOG_STYLE_LIST, "{9c9c9c}[35] Full AIM", "Disable\nReport to chat\nKick", "Next", "Back");
				case 10: ShowPlayerDialog(playerid, 416, DIALOG_STYLE_LIST, "{9c9c9c}[36] Fake NPC", "Disable\nReport to chat\nKick", "Next", "Back");
				case 11: ShowPlayerDialog(playerid, 417, DIALOG_STYLE_LIST, "{9c9c9c}[37] Reconnect", "Disconnect\nReport to chat\nKick", "Next", "Back");
				case 12: ShowPlayerDialog(playerid, 418, DIALOG_STYLE_LIST, "{9c9c9c}[38] High ping", "Disable\nReport to chat\nKick", "Next", "Back");
				case 13: ShowPlayerDialog(playerid, 419, DIALOG_STYLE_LIST, "{9c9c9c}[39] Dialogue hack", "Disable\nReport to chat\nKick", "Next", "Back");
				case 14: ShowPlayerDialog(playerid, 420, DIALOG_STYLE_LIST, "{9c9c9c}[40] Sandbox", "Disable\nReport to chat\nKick", "Next", "Back");
				case 15: ShowPlayerDialog(playerid, 421, DIALOG_STYLE_LIST, "{9c9c9c}[41] Invalid version", "Disable\nReport to chat\nKick", "Next", "Back");
				case 16: ShowPlayerDialog(playerid, 422, DIALOG_STYLE_LIST, "{9c9c9c}[42] RCON hack", "Disable\nReport to chat\nKick", "Next", "Back");
				case 17: ShowPlayerDialog(playerid, 423, DIALOG_STYLE_LIST, "{9c9c9c}[43] Tuning crusher", "Disable\nReport to chat\nKick", "Next", "Back");
				case 18: ShowPlayerDialog(playerid, 424, DIALOG_STYLE_LIST, "{9c9c9c}[44] Invalid crusher", "Disable\nReport to chat\nKick", "Next", "Back");
				case 19: ShowPlayerDialog(playerid, 425, DIALOG_STYLE_LIST, "{9c9c9c}[45] Crusher with dialogue", "Disable\nReport to chat\nKick", "Next", "Back");
				case 20: ShowPlayerDialog(playerid, 426, DIALOG_STYLE_LIST, "{9c9c9c}[46] Crusher with objects", "Disable\nReport to chat\nKick", "Next", "Back");
				case 21: ShowPlayerDialog(playerid, 427, DIALOG_STYLE_LIST, "{9c9c9c}[47] Weapon crusher", "Disable\nReport to chat\nKick", "Next", "Back");
				case 22: ShowPlayerDialog(playerid, 428, DIALOG_STYLE_LIST, "{9c9c9c}[48] Invalid connection", "Disconnect\nReport to chat\nKick", "Next", "Back");
				case 23: ShowPlayerDialog(playerid, 429, DIALOG_STYLE_LIST, "{9c9c9c}[49] Function callback", "Disable\nReport to chat\nKick", "Next", "Back");
				case 24: ShowPlayerDialog(playerid, 430, DIALOG_STYLE_LIST, "{9c9c9c}[50] Anti flow", "Disable\nReport to chat\nKick", "Next", "Back");
				case 25: ShowPlayerDialog(playerid, 431, DIALOG_STYLE_LIST, "{9c9c9c}[51] Ddos protection", "Disable\nReport to chat\nKick", "Next", "Back");
				case 26: ShowPlayerDialog(playerid, 43223, DIALOG_STYLE_LIST, "{9c9c9c}[52] Anti-NOP", "Disable\nReport to chat\nKick", "Next", "Back");
				case 27: ShowCheatSettingsApanel(playerid);
			}
		}
		case 380:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][0] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][0] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][0] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 381:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][1] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][1] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][1] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 382:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][2] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][2] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][2] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 383:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][3] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][3] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][3] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 384:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][4] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][4] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][4] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 3855:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][5] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][5] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][5] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 386:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][6] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][6] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][6] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 387:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][7] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][7] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][7] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 388:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][8] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][8] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][8] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 389:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][9] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][9] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][9] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 390:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][10] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][10] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][10] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 391:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][11] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][11] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][11] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 392:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][12] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}

				case 1:
				{
					SettingInfo[CheatSetting][12] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][12] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 393:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][13] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][13] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][13] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 394:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][14] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][14] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][14] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 395:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][15] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][15] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][15] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 396:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][16] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][16] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][16] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 397:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][17] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][17] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][17] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 398:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][18] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][18] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][18] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 399:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][19] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][19] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][19] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 400:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][20] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][20] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][20] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 401:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][21] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][21] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][21] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 402:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][22] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][22] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][22] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 403:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][23] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][23] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][23] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 404:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][24] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][24] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][24] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 405:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][25] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][25] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][25] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 406:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][26] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][26] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][26] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 407:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][27] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][27] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][27] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 408:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][28] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][28] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][28] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 409:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][29] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][29] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][29] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 410:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][30] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][30] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][30] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 411:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][31] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][31] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][31] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 412:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][32] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][32] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][32] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 413:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][33] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][33] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][33] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 414:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][34] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][34] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][34] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 415:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][35] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][35] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][35] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 416:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][36] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][36] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][36] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 417:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][37] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][37] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][37] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 418:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][38] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][38] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][38] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 419:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][39] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][39] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][39] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 420:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][40] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][40] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][40] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 421:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][41] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][41] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][41] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 422:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][42] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][42] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][42] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 423:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][43] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][43] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][43] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 424:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][44] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][44] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][44] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 425:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][45] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][45] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][45] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 426:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][46] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][46] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][46] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 427:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][47] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][47] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][47] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 428:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][48] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][48] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][48] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 429:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][49] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][49] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][49] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 430:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][50] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][50] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][50] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 431:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][51] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 1:
				{
					SettingInfo[CheatSetting][51] = 1;//Ïèñàòü â ÷àò
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][51] = 2;//Êèêàòü
					ShowCheatSettingsApanel(playerid);
					SaveSettings();
				}
			}
		}
		case 43223:
		{
			if(!response) return true;
			switch(listitem)
			{
				case 0:
				{
					SettingInfo[CheatSetting][52] = 0;//Îòêëþ÷åí
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
				case 2:
				{
					SettingInfo[CheatSetting][52] = 2;//Êèêàòü
					ShowCheatSettingsApanel2(playerid);
					SaveSettings();
				}
			}
		}
		case 433:
		{
   			if(!response) return callcmd::anticheat(playerid);
		}
		case 24142: // Ïîäòâåðæäåíèå ïîêóïêè êîìàíäû àäìèíñêîé
		{
			if(!response) return true;
			new i = GetPVarInt(playerid, "cmd_buy"), query[256];
			if(PlayerInfo[playerid][pRub] < CMD_price[i])
			{
//				callcmd::adonate(playerid);
				return SendClientMessage(playerid,COLOR_GREY, "You don’t have enough rubles, you can replenish them on the website {FFCD00}"PAGE_SITE" -> Donate");
			}
			mysql_format(connects, query, sizeof query, "SELECT * FROM `accounts` WHERE `Name` = '%e'", PlayerInfo[playerid][pNames]);
			mysql_function_query(connects, query, true, "BuyCmdCallback", "dd", playerid, i);
			return true;
		}
	    case 17511:
			{
				if(!response) return true;
				if(strfind(inputtext, "http", true) == -1) return ShowPlayerDialog(playerid,17511,DIALOG_STYLE_INPUT, "{FF6F00}Enter link", "{FFFFFF}Insert link to radio/song", "Enable","Cancel");
				if(GetPVarType(playerid, "PlacedBB"))
				{
					foreach(new i: Player)
					{
						if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
						{
							PlayStream(i, (inputtext), GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
						}
					}
					SetPVarString(playerid, "BBStation", (inputtext));
				}
				return SendClientMessage(playerid,-1,"You played the song");
			}
		case 4322:
			{
				if(!response) return true;
				new vod = GetPlayerVehicleID(playerid);
				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "You must be in the driver's seat");
	 			if(IsAPlane(vod) && IsABoat(vod) && IsANoSpeed(vod)) return SendClientMessage(playerid, -1, "Windows cannot be opened on this vehicle.");
		    	new bool:driver, bool:passenger, bool:backleft, bool:backright;
		    	GetVehicleParamsCarWindows(vod, driver, passenger, backleft, backright);
		    	switch(listitem)
		    	{
		    		case 0: driver = !driver ? (true) : (false);
		     		case 1: passenger = !passenger ? (true) : (false);
		      		case 2: backleft = !backleft ? (true) : (false);
		       		case 3: backright = !backright ? (true) : (false);
		   		}
		    	SetVehicleParamsCarWindows(vod, driver, passenger, backleft, backright);
		    	callcmd::window(playerid);
		    	return true;
			}
		case 9643:
		    {
		    	if(!response) return RemoveFromVehicle(playerid);
		    	new arid = GetArendCarID(GetPlayerVehicleID(playerid));
		        if( arid != -1 )
		        {
		        	if(GetPVarInt(playerid, "ArendKey") == -1)
					{
			            if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID]))
			            {
					        if(PlayerInfo[playerid][pCash] >= ArendInfo[arid][aCost])
					        {
					            SetPVarInt(playerid, "ArendKey", arid);
					            PlayerInfo[playerid][pCash] -= ArendInfo[arid][aCost];
					            ArendInfo[arid][aPlayerID] = playerid;
					            SendClientMessage(playerid, 0xFFFFFFFF, "You have successfully rented this vehicle");
					            ShowPlayerDialog(playerid, 0, 0, "You have successfully rented a vehicle", "{FFFFFF}List of available commands:\n\n{9ACD32}/lock 2{FFFFFF} - Close/Open rented vehicle\n{9ACD32}/unrent{FFFFFF} - Refuse rental.\n\n{AFAFAF}If you move 2 km away from the vehicle, the contract is automatically terminated.", "Close", "");
					        }
							else
							{
							    SendClientMessage(playerid, 0xAFAFAFFF, "You don't have enough money");
							    RemoveFromVehicle(playerid);
							}
						}
						else
						{
						    SendClientMessage(playerid, 0xAFAFAFFF, "This vehicle is already rented");
						    RemoveFromVehicle(playerid);
						}
					}
					else
					{
						SendClientMessage(playerid,0xAFAFAFFF,"Are you already renting a vehicle?");
						RemoveFromVehicle(playerid);
					}
				}
		        return 1;
		    }
        case 3245:
            {
                if(!response) return ShowPlayerDialog(playerid, 8810, DIALOG_STYLE_LIST, "Banking services","{ffffff}[1] Account management\n[2] Transfer to business account\n[3] House Tax\n[4] Pick up money for the house\n[5] Order business products\n[6] Buy Gold Limited\n[7] Sell Gold Limited", "Choice", "Close");
                switch(listitem)
                {
                    case 0:
                    {
                        new list[300];
                        format(stringer1, sizeof(stringer1), "{4F94CD}[1] Master account\n"), strcat(list, stringer1);
                        for(new i;i < _PLAYERBANK[playerid];i++)
                        {
                            format(stringer1, sizeof(stringer1), "%i. %s — #%i\n",i+2, _INFONAME[playerid][i], _INFO[playerid][NUMBER][i]), strcat(list, stringer1);
                        }
                        ShowPlayerDialog(playerid, 3246,DIALOG_STYLE_LIST,"{EEEE00}Your bills",list, "Operations", "Back");
                    }
                    case 1: {
                        if(_PLAYERBANK[playerid] >= 3) {
                            ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management", "[1] My accounts\n[2] Open a new account", "Select", "Back");
					        return SendClientMessage(playerid,0xAFAFAFFF,"Unfortunately, no more than 3 accounts can be registered for one name..");
					    }
					    else return ShowPlayerDialog(playerid,3247,DIALOG_STYLE_INPUT,"{EEEE00}Opening a new account","{FFFFFF}Enter a name for the new account.\nMaximum length 20 characters:","Next","Back");
				    }
                }
            }
        case 3246:
            {
                if(!response) return ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management", "[1] My accounts\n[2] Open a new account", "Select", "Back");
                switch(listitem)
                {
                    case 0: ShowPlayerDialog(playerid,3256,DIALOG_STYLE_LIST,"{4F94CD}Master account","[1] Operations history\n[2] Withdraw from bank account\n[3] Put on a bank account\n\
                    [4] Bank account balance\n[5] Top up mobile phone\n[6] Wire transfer", "Select", "Back");
                    default:
                    {
                        SetPVarInt(playerid, "_banklogin",listitem-1);
                        ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN-code {FFFFFF}accounts:","Introduce","Cancle");
                    }
                }
            }
        case 3256:
            {
                if(!response) return ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management","[1] My accounts\n[2] Open a new account", "Select", "Back");
                switch(listitem)
				{
				    case 0:
                    {
                        format(mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_LOGBANK"` WHERE `number` = '%d' ORDER BY `"TABLE_LOGBANK"`.`id` DESC LIMIT 10", PlayerInfo[playerid][pID]);
	  				    return mysql_tquery(connects, mysql_query_, "Logs", "iii", playerid, 1, 0);
                    }
				    case 1:
					{
					    format(stringer1,sizeof(stringer1), "Your account balance: %s Money\nEnter the amount you need", formatInt(PlayerInfo[playerid][pBank]));
						return ShowPlayerDialog(playerid,8814,DIALOG_STYLE_INPUT,"Withdrawal from the account",stringer1,"Next","Back");
					}
					case 2:
					{
						format(stringer,sizeof(stringer), "Your account balance: %s Money\nEnter the amount you need", formatInt(PlayerInfo[playerid][pBank]));
						return ShowPlayerDialog(playerid,8816,DIALOG_STYLE_INPUT,"To deposit",stringer,"Next","Back");
					}
					case 3:
					{
						format(stringer, sizeof(stringer),"{FFFFFF}____________________________________________\n\nAccount number:\t\t{2ADA4A}Without a number\n{FFFFFF}Name:\t{4F94CD}'Master account'\n{FFFFFF}Balance:\t\t%s\n\
                        ____________________________________________",
                        formatInt(PlayerInfo[playerid][pBank]));
                        return ShowPlayerDialog(playerid,8817,DIALOG_STYLE_MSGBOX,"{4F94CD}Information", stringer,"Return","");
					}
					case 4:
					{
						format(stringer,sizeof(stringer), "On your phone account: %d Money\nEnter the amount you want to put on your phone",PlayerInfo[playerid][pMobile]);
					    return ShowPlayerDialog(playerid,9999,DIALOG_STYLE_INPUT,"Mob account phone",stringer,"Next","Back");
					}
					case 5:
					{
						if(PlayerInfo[playerid][pPayDayHad] < 3) return SendClientMessage(playerid, COLOR_GREY, "The transfer function is available from 2 played hours.");
						return ShowPlayerDialog(playerid, 8831, 1, "Translation", "Enter the player's ID or name and the Money amount separated by a space\n\nExample: 46 15761", "Accept", "Back");
					}
				}
                return true;
            }
        case 3247:
            {
                if(!response) return ShowPlayerDialog(playerid, 3245, DIALOG_STYLE_LIST,"Account management","[1] My accounts\n[2] Open a new account", "Select", "Back");
                if(strlen(inputtext) < 1 || strlen(inputtext) > 20 || !strlen(inputtext))
                {
                    SendClientMessage(playerid, COLOR_GREY, "The number of characters must not be less than 1 and more than 20!");
                    return ShowPlayerDialog(playerid,3247,DIALOG_STYLE_INPUT,"{EEEE00}Opening a new account","{FFFFFF}Enter a name for the new account.\n{4F94CD}Maximum length 20 characters:","Next","Cancle");
                }
                TOTALBANK++;
                strmid(_INFONAME[playerid][_PLAYERBANK[playerid]], inputtext, 0, strlen(inputtext), 20);
                strmid(_INFO[playerid][OWNER][_PLAYERBANK[playerid]], PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), 20);
                _INFO[playerid][NUMBER][_PLAYERBANK[playerid]] = 1000+TOTALBANK;
                _INFO[playerid][ID][_PLAYERBANK[playerid]] = TOTALBANK;
                _INFO[playerid][PASSWORD][_PLAYERBANK[playerid]] = 0000;
                _INFO[playerid][BALANCE][_PLAYERBANK[playerid]] = 0;
                mysql_format(connects,mysql_query_,sizeof(mysql_query_),"INSERT INTO `"TABLE_BANK"` (`account`,`name`,`number`,`owner`,`balance`,`password`) VALUES ('%i','%e','%i','%e','0','0000')", PlayerInfo[playerid][pID],
				_INFONAME[playerid][_PLAYERBANK[playerid]], _INFO[playerid][NUMBER][_PLAYERBANK[playerid]], PlayerInfo[playerid][pNames]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                _PLAYERBANK[playerid]++;
                ShowPlayerDialog(playerid,000,DIALOG_STYLE_MSGBOX,"{EEEE00}Account created",
                "{FFFFFF}You have created a new bank account.\n\nTo access it use {4F94CD}PIN code 0000. {FFFFFF}After logging in\n\
                we strongly recommend changing it to a more complex one.\n\
                This will help protect your account from unauthorized access..","Ready","");
                return true;
            }
        case 3257:
            {
                if(!response) return DialogBank(playerid);
                if(strlen(inputtext) < 1 || strlen(inputtext) > 20 || !strlen(inputtext))
                {
                    SendClientMessage(playerid, COLOR_GREY, "The number of characters should not be less than 1 or more 20!");
                    return ShowPlayerDialog(playerid,3257,DIALOG_STYLE_INPUT,"{EEEE00}Opening a new account","{FFFFFF}Enter a new name for the account.\n{4F94CD}Maximum length 20 characters:","Next","Back");
                }
                strmid(_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], inputtext, 0, strlen(inputtext), 20);
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `name` = '%e' WHERE `number` = '%i'",
                _INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                SendMes(playerid, COLOR_GREY, "New account name #%d: {EEEE00}%s", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")],_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")]);
                return DialogBank(playerid);
            }
        case 3258:
            {
                if(!response) return DialogBank(playerid);
                new price;
		    	if(sscanf(inputtext, "i", price) || strlen(inputtext) != 4) {
                    SendClientMessage(playerid, COLOR_GREY, "PIN must be 4 digits!");
                    return ShowPlayerDialog(playerid,3258,DIALOG_STYLE_INPUT,"{EEEE00}Change PIN","{FFFFFF}Enter a new PIN.\n{4F94CD}PIN must be 4 digits:","Next","Back");
                }
                _INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] = price;
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `password` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                SendMes(playerid, COLOR_GREY, "Your new account PIN #%d: {EEEE00}%d", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")],_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")]);
                return DialogBank(playerid);
            }
        case 3248:
            {
                if(!response) return true;
                switch(listitem)
                {
                    case 0:
                    {
                        format(stringer, sizeof(stringer),"{FFFFFF}____________________________________________\n\nAccount number:\t\t{2ADA4A}%i\n{FFFFFF}Name:\t{4F94CD}'%s'\n{FFFFFF}Balance:\t\t%i$\n\
                        ____________________________________________",
                        _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")],_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")],
                        _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")]);
                        ShowPlayerDialog(playerid,3250,DIALOG_STYLE_MSGBOX,"{4F94CD}Information",stringer,"Return","");
                    }
                    case 1:
                    {
                        format(mysql_query_, sizeof(mysql_query_), "SELECT * FROM `"TABLE_LOGBANK"` WHERE `number` = '%i' ORDER BY `"TABLE_LOGBANK"`.`id` DESC LIMIT 10", _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
	  				    return mysql_tquery(connects, mysql_query_, "Logs", "iii", playerid, 1, 0);
                    }
                    case 2: ShowPlayerDialog(playerid,3251,DIALOG_STYLE_INPUT,"{4F94CD}Withdraw money","{FFFFFF}Enter the amount you want to withdraw:","Withdraw","Back");
                    case 3: ShowPlayerDialog(playerid,3252,DIALOG_STYLE_INPUT,"{4F94CD}Deposit money","{FFFFFF}Enter the amount you want to deposit:","Deposit","Back");
                    case 4: ShowPlayerDialog(playerid,3253,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF}¬enter the account number to which\nyou want to transfer funds:","Next","Back");
                    case 5: ShowPlayerDialog(playerid,3257,DIALOG_STYLE_INPUT,"{EEEE00}Rename account","{FFFFFF}Enter a new name for the account.\nMaximum length 20 characters:","Next","Back");
                    case 6: ShowPlayerDialog(playerid,3258,DIALOG_STYLE_INPUT,"{EEEE00}Change PIN","{FFFFFF}Enter a new PIN.\nPIN must be 4 digits:","Next","Back");
                }
            }
        case 3249:
            {
                if(!response) return 1;
                if(strlen(inputtext) < 4 || strlen(inputtext) > 8 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN code of {FFFFFF}account:","Introduce","Cancle");
                if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0)
                {
                    if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == 0 && strval(inputtext) == 0000) return DialogBank(playerid);
                    else ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN code of {FFFFFF}account:\n{FF0000}Account password is incorrect!","Introduce","Cancle");
                }
                else
                {
                    if(_INFO[playerid][PASSWORD][GetPVarInt(playerid, "_banklogin")] == strval(inputtext)) return DialogBank(playerid);
                    else ShowPlayerDialog(playerid,3249,DIALOG_STYLE_INPUT,"{4F94CD}Authorization","{FFFFFF}Enter {4F94CD}PIN code of {FFFFFF}account:\n{FF0000}The account password is incorrect!","Introduce","Cancle");
                }
            }
        case 3250: if(response) return DialogBank(playerid);
        case 3251:
            {
                if(!response) return DialogBank(playerid);
                if(strval(inputtext) <= 0 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3251,DIALOG_STYLE_INPUT,"{4F94CD}Withdraw money","{FFFFFF}Enter the amount you want to withdraw:","Withdraw","Back");
                if(_INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] < strval(inputtext)) return ShowPlayerDialog(playerid,3251,DIALOG_STYLE_INPUT,"{4F94CD}Withdraw money","{FFFFFF}Enter the amount you want to withdraw:\n{FF0000}On your account Insufficient funds!","Withdraw","Back");
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] -= strval(inputtext) , GiveMoney(playerid, strval(inputtext));
                SendMes(playerid, COLOR_WHITE, "{FFCE05}'%s' has been withdrawn from your account %s",_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], formatInt(strval(inputtext)));
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                Transfer_Log(playerid, _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], 1, strval(inputtext), 0, PlayerInfo[playerid][pNames]); // ËÎÃ
                DialogBank(playerid);
                return 1;
            }
        case 3252:
            {
                if(!response) return DialogBank(playerid);
                if(strval(inputtext) <= 0 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3252,DIALOG_STYLE_INPUT,"{4F94CD}Deposit money","{FFFFFF}Enter the amount you want to deposit:","Deposit","Back");
                if(PlayerInfo[playerid][pCash] < strval(inputtext)) return ShowPlayerDialog(playerid,3252,DIALOG_STYLE_INPUT,"{4F94CD}Deposit money","{FFFFFF}Enter the amount you want to deposit:\n{FF0000}You have Insufficient funds on hand!","Deposit","Back");
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] += strval(inputtext) , PlayerInfo[playerid][pCash] -= strval(inputtext);
                SendMes(playerid, COLOR_WHITE, "{2ADA4A}Your account '%s' has been replenished by %s",_INFONAME[playerid][GetPVarInt(playerid, "_banklogin")], formatInt(strval(inputtext)));
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                Transfer_Log(playerid, _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], 0, strval(inputtext), 0, PlayerInfo[playerid][pNames]); // ËÎÃ
                DialogBank(playerid);
                return 1;
            }
        case 3253:
            {
                if(!response) return DialogBank(playerid);
                if(strlen(inputtext) < 4 || strlen(inputtext) > 5 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3253,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF}¬enter the account number to which\nyou want to transfer funds:","Next","Back");
                mysql_format(connects,mysql_query_,sizeof(mysql_query_),"SELECT `owner`, `balance` FROM `"TABLE_BANK"` WHERE `number` = '%i' LIMIT 1", strval(inputtext));
                mysql_function_query(connects,mysql_query_,sizeof(mysql_query_), "CheckNumber", "ii", playerid, strval(inputtext));
                return 1;
            }
        case 3254:
            {
                if(!response)
                {
                    DeletePVar(playerid, "_banknumber");
                    _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")] = 0;
                    _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")] = 0;
                    return DialogBank(playerid);
                }
                if(strval(inputtext) <= 0 || !strlen(inputtext)) return ShowPlayerDialog(playerid,3254,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF} Enter the amount of money you want to transfer to the account you entered:","Next","Back");
                if(_INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] < strval(inputtext)) return ShowPlayerDialog(playerid,3254,DIALOG_STYLE_INPUT,"{4F94CD}Transfer of funds","{FFFFFF}Enter the amount of money you\nwant to transfer to the account you entered:\n{FF0000}Your account does not have enough funds for the transfer!","Next","Back");
                format(stringer, sizeof(stringer),"{FFFFFF}You are about to transfer {2ADA4A}%s {FFFFFF} to another character's account.\n\n\
                {4F94CD}Information About the Transfer:\n\n\
                {FFFFFF}Receiver name: {4F94CD}%s\n\
                {FFFFFF}Account number: {4F94CD}%i\n\n\
                You confirm the transfer of funds?",formatInt(strval(inputtext)),
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")], GetPVarInt(playerid, "_banknumber"));
                ShowPlayerDialog(playerid,3255,DIALOG_STYLE_MSGBOX,"{4F94CD}Transfer of funds",stringer,"Accept","Cancle");
                SetPVarInt(playerid, "_banksumma",strval(inputtext));
                return 1;
            }
        case 3255:
            {
                if(!response)
                {
                    DeletePVar(playerid, "_banknumber");
                    DeletePVar(playerid, "_banksumma");
                    _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")] = 0;
                    _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")] = 0;
                    return DialogBank(playerid);
                }
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")]+GetPVarInt(playerid, "_banksumma"), GetPVarInt(playerid, "_banknumber"));
                mysql_function_query(connects, mysql_query_, false, "", "");
                new _playerid = GetPlayerID(_INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")]);
                if(IsPlayerConnected(_playerid))
                {
                    SendMes(_playerid, COLOR_GREY, "{2ADA4A}A transfer in the amount of %s was made to your account. Sender: %s", formatInt(GetPVarInt(playerid, "_banksumma")), PlayerInfo[playerid][pNames]);
                    for(new i;i < _PLAYERBANK[_playerid];i++)
                    {
                        if(_INFO[_playerid][NUMBER][i] != GetPVarInt(playerid, "_banknumber")) continue;
                        _INFO[_playerid][BALANCE][i] += GetPVarInt(playerid, "_banksumma");
                    }
                }
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")] -= GetPVarInt(playerid, "_banksumma");
                mysql_format(connects,mysql_query_,sizeof(mysql_query_), "UPDATE `"TABLE_BANK"` SET `balance` = '%i' WHERE `number` = '%i'",
                _INFO[playerid][BALANCE][GetPVarInt(playerid, "_banklogin")], _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")]);
                mysql_function_query(connects, mysql_query_, false, "", "");
                new year,month,day,hour,minuite;
                getdate(year, month, day), gettime(hour,minuite);
                new mtext[20];
                switch(month)
                {
                    case 1: mtext = "January";
                    case 2: mtext = "February";
                    case 3: mtext = "March";
                    case 4: mtext = "April";
                    case 5: mtext = "May";
                    case 6: mtext = "June";
                    case 7: mtext = "July";
                    case 8: mtext = "August";
                    case 9: mtext = "September";
                    case 10: mtext = "October";
                    case 11: mtext = "November";
                    case 12: mtext = "December";
                }
                if (minuite < 10)    format(stringer, sizeof(stringer),"{FFFFFF}Your transfer has been successfully sent to the recipient.\n\nRecipient: {4F94CD}%s\n\
                {FFFFFF}Bank account number: {4F94CD}%i\n{FFFFFF}Transfer amount: {2ADA4A}%s\n\n{FFFFFF}Date and time of transfer: {2ADA4A}%i %s %i ã.\t%i:0%i",
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")],GetPVarInt(playerid, "_banknumber"),formatInt(GetPVarInt(playerid, "_banksumma")),day,mtext,year,hour,minuite);
                else format(stringer, sizeof(stringer),"{FFFFFF}Your transfer has been successfully sent to the recipient.\n\nRecipient: {4F94CD}%s\n\
                {FFFFFF}Bank account number: {4F94CD}%i\n{FFFFFF}Transfer amount: {2ADA4A}%s\n\n{FFFFFF}Date and time of transfer: {2ADA4A}%i %s %i ã.\t%i:%i",
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")],GetPVarInt(playerid, "_banknumber"),formatInt(GetPVarInt(playerid, "_banksumma")),day,mtext,year,hour,minuite);
                ShowPlayerDialog(playerid,000,DIALOG_STYLE_MSGBOX,"{4F94CD}Money transaction",stringer,"Ready","");
                Transfer_Log(playerid, _INFO[playerid][NUMBER][GetPVarInt(playerid, "_banklogin")], 2, GetPVarInt(playerid, "_banksumma"), GetPVarInt(playerid, "_banknumber"), _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")]); // ËÎÃ
                DeletePVar(playerid, "_banknumber");
                DeletePVar(playerid, "_banksumma");
                _INFO[playerid][gOWNER][GetPVarInt(playerid, "_banklogin")] = 0;
                _INFO[playerid][gBALANCE][GetPVarInt(playerid, "_banklogin")] = 0;
                return DialogBank(playerid);
            }
		case 1001:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: ShowPlayerDialog(playerid, 20011, DIALOG_STYLE_LIST, "Adminstrators Commands", "- 1 Level\n- 2 Level\n- 3 Level\n- 4 Level\n- 5 Level\n- 6 Level\n- 7 Level\n- 8 Level\n- 9 Level\n- 10 Level\n- 11 Level", "Select", "Menu");
					case 1: ShowPlayerDialog(playerid, 9000, DIALOG_STYLE_LIST, "Teleportation Menu", "Admin Zone\n{FFCC00}activity >>\nOrganizations bases >>{FFFFFF}\nVinewood\nSan Fierro Center\nLas Venturas Center\nFBI\nMovers work\nGhetto Center\nDriving school\nForest\nBus station-2\nCity Hall\nSign Near City Hall\nZone 51 checkpoint\nCasino Four Dragons\nCasino Caligulas\nAmmo LS\nAircraft carrier parking\nArmy area 51\nCar park\nRace", "Select", "Cancle");
					case 2: ShowPlayerDialog(playerid, 3725, DIALOG_STYLE_LIST, "Choose an action", "[0] Sell ??all houses\n[1] Set home interior\n[2] Distribute all houses by class\n[3] Distribute by interiors\n[4] Clean houses for $ 0\n[5] Distribute the price of houses\n[6] Sell All Owned Business!", "Select", "Menu");
					case 3: if(PlayerInfo[playerid][pAlcoInvenxua] >= 3) ShowPlayerDialog(playerid, 6050, DIALOG_STYLE_LIST, "Choose an action", "[0] Clear chat\n[1] To get a job\n[2] Check faction warehouses\n[3] Set the weather\n[4] Set time of day", "Select", "Menu");
					case 4: ShowPlayerDialog(playerid, 6019, DIALOG_STYLE_LIST, "Choose an action", "{7FB151}[1] Save all files\n{FFFFFF}[2] Save homes and businesses\n{FFFFFF}[3] Enable PayDay\n{FFFFFF}[4] Optimize graffiti\n{FFFFFF}[4] Anti-cheat: setting", "Select", "Menu");
					}
				}
			}
		case 589:
			{
				if(!response) return true;
				SetPVarInt(playerid, "DrugsMenuDialog", listitem);
				format(stringer, sizeof stringer, "%s: %d Gr.", Drugs[listitem+1][d_name], PlayerInfo[playerid][p_drugs][listitem]);
				return ShowPlayerDialog(playerid, 590, DIALOG_STYLE_LIST, stringer, "[1] Use\n[2] Transfer\n[3] Throw away", "Select","Go out");
			}
		case 590:
			{
				if(!response) return true;
				new itemID = GetPVarInt(playerid, "DrugsMenuDialog");
				switch(listitem) {
					case 0 : { // Èñïîëüçîâàòü
						OnPlayerUseDrug(playerid, itemID, 1);
					}
					case 1 : { // Ïåðåäàòü
						if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
						format(stringer1, sizeof stringer1, "Hand over %s", Drugs[GetPVarInt(playerid, "DrugsMenuDialog")+1][d_name]);
						ShowPlayerDialog(playerid, 591, DIALOG_STYLE_INPUT, stringer1, "\nEnter the number of grams\n", "Select", "Go out");
					}
					case 2 : { // Âûáðîñèòü
						if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
						format(stringer1, sizeof stringer1, "Throw away %s", Drugs[itemID+1][d_name]);
						ShowPlayerDialog(playerid, 593, DIALOG_STYLE_INPUT, stringer1, "Enter the amount you want to throw away", "Select","Go out");
					}
				}
				return true;
			}
		case 591:
			{
				if(!response) return callcmd::drugs(playerid, "");
				new itemID = GetPVarInt(playerid, "DrugsMenuDialog"), level;
				if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
				format(stringer1, sizeof stringer1, "Hand over %s", Drugs[itemID+1][d_name]);
				if(!strlen(inputtext)) {
					ShowPlayerDialog(playerid, 591, DIALOG_STYLE_INPUT, stringer1, "\nEnter the number of grams\n", "Select", "Go out");
					return true;
				}
				level = strval(inputtext);
				if(level < 0 || level > PlayerInfo[playerid][p_drugs][itemID]) {
					format(stringer1, sizeof stringer1, "Quantity from 1 to %d!", PlayerInfo[playerid][p_drugs][itemID]);
					SendClientMessage(playerid, COLOR_WHITE, stringer1);
					return true;
				}
				SetPVarInt(playerid, "TransferDrugsQuantity", level);
				ShowPlayerDialog(playerid, 592, DIALOG_STYLE_INPUT, stringer1, "\nEnter your player ID\n", "Select", "Go out");
		    }
        case 592:
        	{
        		if(!response) return callcmd::drugs(playerid, "");
				new itemID = GetPVarInt(playerid, "DrugsMenuDialog"), user;
				if(!PlayerInfo[playerid][p_drugs][itemID]) return SendClientMessage(playerid, COLOR_WHITE, "* This slot is empty!");
				format(stringer1, sizeof stringer1, "Hand over %s", Drugs[itemID+1][d_name]);
				if(!strlen(inputtext)) {
					ShowPlayerDialog(playerid, 592, DIALOG_STYLE_INPUT, stringer1, "\nEnter your player ID\n", "Select", "Go out");
					return true;
				}
				user = strval(inputtext);
				if(!IsPlayerConnected(user) || user == INVALID_PLAYER_ID || user == playerid) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist or is it you");
	            if(!ProxDetectorS(3.0, playerid, user)) return SendClientMessage(playerid, COLOR_GREY, "This player is not near you !");
				if(PlayerInfo[user][p_drugs][itemID] >= 200) return SendClientMessage(playerid, COLOR_WHITE, " Player has no space, maximum quantity 200 grams!");
				TransferDrugsPlayer(playerid, user, itemID, GetPVarInt(playerid, "TransferDrugsQuantity"));
			}
	    case 593:
	    	{
	    		if(!response) return true;
				new itemID = GetPVarInt(playerid,"DrugsMenuDialog");
				if(!strlen(inputtext)) {
					format(stringer1, sizeof stringer1, "Throw away %s", Drugs[itemID+1][d_name]);
					ShowPlayerDialog(playerid, 593, DIALOG_STYLE_INPUT, stringer1, "Enter the amount you want to throw away", "Select","Go out");
					return true;
        		}
				DropDrugPlayer(playerid, itemID, strval(inputtext));
			}
		case 594:
			{
				if(!response) return true;
				switch(listitem) {
					case 0 : {
						new shovel = GetPlayerWeapon(playerid);
						if(shovel != 6) return SendClientMessage(playerid, COLOR_WHITE, "You don't have a shovel!");

						if(PlayerInfo[playerid][p_drugs][0] <= 0) return SendClientMessage(playerid, COLOR_WHITE, "You don't have any seeds!");
						if(GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GREY, "There is too little light in the room ;(");

						new o = FreeSlotForPlant();
						if(o == 0) return SendClientMessage(playerid, COLOR_WHITE, " There is a maximum number of bushes on the server!");

						PlayerInfo[playerid][p_drugs][0]--;

						new Float:pos[3];
						GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
						PlantInfo[o][plant_status] = 1;
						PlantInfo[o][plant_pos][0] = pos[0];
						PlantInfo[o][plant_pos][1] = pos[1];
						PlantInfo[o][plant_pos][2] = pos[2];
						PlantInfo[o][plant_int] = GetPlayerInterior(playerid);
						PlantInfo[o][plant_vw] = GetPlayerVirtualWorld(playerid);
						PlantInfo[o][plant_prog] = 1;
						PlantInfo[o][plant_owner] = PlayerInfo[playerid][pID];
						PlantInfo[o][plant_obj_id] = CreateDynamicObject(19473, PlantInfo[o][plant_pos][0], PlantInfo[o][plant_pos][1], PlantInfo[o][plant_pos][2]-1.2, 0.0, 0.0, 0.0, PlantInfo[o][plant_vw], PlantInfo[o][plant_int], -1, 150);
						PlantInfo[o][plant_3DText] = CreateDynamic3DTextLabel("The bush is not yet ripe", COLOR_WHITE, PlantInfo[o][plant_pos][0], PlantInfo[o][plant_pos][1], PlantInfo[o][plant_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, PlantInfo[o][plant_vw], PlantInfo[o][plant_int], -1, 10.0+1.0);
						FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
						format(stringer1, sizeof(stringer1), "%s digs up the ground and plants something.",PlayerInfo[playerid][pNames]);
			            ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
						CreatePlant(o);
					}
					case 1 : {
						new o = -1;
						for(new i = 0; i < MAX_PLANTS; i++) {
							if(PlantInfo[i][plant_status] == 2) {
								if(IsPlayerInRangeOfPoint(playerid, 2.0, PlantInfo[i][plant_pos][0], PlantInfo[i][plant_pos][1], PlantInfo[i][plant_pos][2])) {
									o = i;
								}
							}
						}
						if(o == -1) return SendClientMessage(playerid, COLOR_WHITE, " There is no ripe bush near you!");

						new randrug = 2 + random(3);
						if(PlayerInfo[playerid][p_drugs][6] >= 500) return SendClientMessage(playerid, COLOR_WHITE, " There is no space in your slot!");
						PlayerInfo[playerid][p_drugs][6] += randrug;
						PlantInfo[o][plant_status] = 0;
						DestroyDynamicObject(PlantInfo[o][plant_obj_id]);
						DestroyDynamic3DTextLabel(PlantInfo[o][plant_3DText]);
						FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
						format(stringer1, sizeof(stringer1), "%s plucks a bush and reaps the harvest.",PlayerInfo[playerid][pNames]);
			            ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
						DeletePlants(o);
					}
					case 2 : {
						new o = -1;
						for(new i = 0; i < MAX_PLANTS; i++) {
							if(IsPlayerInRangeOfPoint(playerid, 2.0, PlantInfo[i][plant_pos][0], PlantInfo[i][plant_pos][1], PlantInfo[i][plant_pos][2])) {
								o = i;
							}
						}
						if(o == -1) return SendClientMessage(playerid, COLOR_WHITE, "* There is no bush near you!");
						PlantInfo[o][plant_status] = 0;
						DestroyDynamicObject(PlantInfo[o][plant_obj_id]);
						DestroyDynamic3DTextLabel(PlantInfo[o][plant_3DText]);
						FIXES_ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0, 1);
						format(stringer1, sizeof(stringer1), "%s tramples a bush.",PlayerInfo[playerid][pNames]);
			            ProxDetector(playerid, 30.0, COLOR_YELLOW, stringer1);
						DeletePlants(o);
					}
				}
			}
		case 5912: {
			if(!response) return true;
			switch(listitem) {
				case 0: {//Èçìåíèòü íàçâàíèÿ
					new dialog[300];
					format(dialog, sizeof(dialog), "[1] %s\n[2] %s\n[3] %s", ServerName[0], ServerName[1], ServerName[2]);
					ShowPlayerDialog(playerid, 5913, DIALOG_STYLE_LIST, "HostName's", dialog, "Change", "Cancle");
				}
				case 1: {//Âêëþ÷èòü/âûêëþ÷èòü
					new dialog[300];
					format(dialog, sizeof(dialog), "[1] %s\n[2] %s\n[3] %s", ServerName[0], ServerName[1], ServerName[2]);
					ShowPlayerDialog(playerid, 5915, DIALOG_STYLE_LIST, "HostName's", dialog, "On/Off", "Cancle");
				}
				case 2: {//Ñáðîñ
					new query[500];
					ServerName[0] = "hostname [ENG] Asian city Role-Play | Advanced VIP System ", NameEnabled[0] = 1;
					ServerName[1] = "hostname [ENG] Asian city Role-Play | Gangs/Factions/Jobs ", NameEnabled[1] = 1;
					ServerName[2] = "hostname [ENG] Asian city Role-Play | Payday Boost x4 ", NameEnabled[2] = 1;
					format(query, sizeof(query), "UPDATE `hostnames` SET `one_name` = '%s', `two_name` = '%s', `three_name` = '%s', `one_enbl` = '1', `two_enbl` = '1', `three_enbl` = '1'", ServerName[0], ServerName[1], ServerName[2]);
					mysql_function_query(connects, query, false, "", "");
					SendClientMessage(playerid, -1, "Successfully reset the server name to Default!");
				}
			}
			return true;
		}
		case 5913: {
			if(!response) return true;
			switch(listitem) {
				case 0: SetPVarInt(playerid, "ItemL", 1);
				case 1: SetPVarInt(playerid, "ItemL", 2);
				case 2: SetPVarInt(playerid, "ItemL", 3);
			}
			ShowPlayerDialog(playerid, 5914, DIALOG_STYLE_INPUT, "Change name", "Enter a new server name:\n\nAttention: The name structure should look like this:\nhostname Your text", "Next", "Cancle");
			return true;
		}
		case 5914: {
			if(!response) return DeletePVar(playerid, "ItemL");
			new host[64];
			if(sscanf(inputtext, "s[64]", host)) return ShowPlayerDialog(playerid, 5914, DIALOG_STYLE_INPUT, "Change name", "Enter a new server name:\n\nAttention: The name structure should look like this:\nhostname Your text", "Next", "Cancle");
			if(strlen(host) < 15) return ShowPlayerDialog(playerid, 5914, DIALOG_STYLE_INPUT, "Change name", "Enter a new server name:\n\nAttention: The name structure should look like this:\nhostname Your text", "Next", "Cancle");
			new query[144];
			sscanf(host, "s[64]", ServerName[GetPVarInt(playerid, "ItemL") - 1]);
			switch(GetPVarInt(playerid, "ItemL") - 1) {
				case 0: format(query, sizeof(query), "UPDATE `hostnames` SET `one_name` = '%s'", ServerName[0]);
				case 1: format(query, sizeof(query), "UPDATE `hostnames` SET `two_name` = '%s'", ServerName[1]);
				case 2: format(query, sizeof(query), "UPDATE `hostnames` SET `three_name` = '%s'", ServerName[2]);
			}
			mysql_function_query(connects, query, false, "", "");
			DeletePVar(playerid, "ItemL");
			SendClientMessage(playerid, -1, "Name saved successfully!");
			return true;
		}
		case 5915: {
			if(!response) return true;
			if(NameEnabled[listitem] == 1) NameEnabled[listitem] = 0, SendClientMessage(playerid, -1, "Turned off!");
			else NameEnabled[listitem] = 1, SendClientMessage(playerid, -1, "turned on!");
			new query[144];
			format(query, sizeof(query), "UPDATE `hostnames` SET `one_enbl` = '%d', `two_enbl` = '%d', `three_enbl` = '%d'", NameEnabled[0], NameEnabled[1], NameEnabled[2]);
			mysql_function_query(connects, query, false, "", "");
			return true;
		}
		case 7000:
			{
				if(response)
				{
					switch(listitem)
					{
					case 0: SendClientMessage(playerid,0x6495EDFF,"<1> /pm | /c");
					case 1: SendClientMessage(playerid,0x6495EDFF,"<2> /pm | /c | /gg");
					case 2: SendClientMessage(playerid,0x6495EDFF,"<3> /pm | /c | /gg | /togphone");
					case 3: SendClientMessage(playerid,0x6495EDFF,"<4> /pm | /c | /gg | /togphone | /rmute");
					case 4: SendClientMessage(playerid,0x6495EDFF,"<5> /pm | /c | /gg | /togphone | /rmute | /mute");
					case 5: SendClientMessage(playerid,0x6495EDFF,"<6> /pm | /c | /gg | /togphone | /rmute | /mute | /mutelist");
					case 6: SendClientMessage(playerid,0x6495EDFF,"<7> /pm | /c | /gg | /togphone | /rmute | /mute | /mutelist | /hcheck");
					case 7: SendClientMessage(playerid,0x6495EDFF,"<8> /pm | /c | /gg | /togphone | /rmute | /mute | /mutelist | /hcheck | /offhelper | /sethelper");
					}
				}
				return true;
			}
		case 245:
			{
				if(!response) return true;
				switch(listitem)
				{
				case 0: PlayAudioStreamForPlayer(playerid, "http://g.top4top.io/m_2919cd7mp1.mp3)");
				case 1: PlayAudioStreamForPlayer(playerid, "http://k.top4top.io/m_2928g55ej1.mp3");
				case 2: PlayAudioStreamForPlayer(playerid, "http://a.top4top.io/m_292869ccw1.mp3");
				case 3: PlayAudioStreamForPlayer(playerid, "http://c.top4top.io/m_2970lrbrt1.mp3");
				case 4: PlayAudioStreamForPlayer(playerid, "http://k.top4top.io/m_2970fnklp1.mp3");
				case 5: PlayAudioStreamForPlayer(playerid, "http://e.top4top.io/m_29282d8wr1.mp3");
				case 6: PlayAudioStreamForPlayer(playerid, "http://e.top4top.io/m_2928ha8p81.mp3");
				}
				SetPlayerAttachedObject(playerid, 3, 19424, 2,0.05,0.0,0.0,90.0,360.0,270.0);
				SendClientMessage(playerid, -1, "{66CC00}Online radio is switched on");
				SendClientMessage(playerid, -1, "{66CC00}Use /head to remove or put on headphones");
				playerradio[playerid] = 1;
			}
		case 9150:
			{
		    	if(!response) return true;
		    	switch(listitem)
		    	{
		        	case 0: format(addbizz[playerid],256,"-2240.7820,137.2150,1035.4141,-2237.0664,130.2340,1035.4141,6,0,1");
		       	 	case 1: format(addbizz[playerid],256,"0.0,0.0,0.0,0.0,0.0,0.0,0,42,2");
		        	case 2: format(addbizz[playerid],256,"372.3061,-133.5236,1001.4922,374.7469,-119.3624,1001.4995,5,29,3");
		        	case 3: format(addbizz[playerid],256,"362.8425,-75.1392,1001.5078,377.3217,-67.8903,1001.5151,10,10,3");
		        	case 4: format(addbizz[playerid],256,"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,3");
		        	case 5: format(addbizz[playerid],256,"493.3561,-24.8449,1000.6797,499.2758,-20.7244,1000.6797,17,48,4");
		        	case 6: format(addbizz[playerid],256,"-2636.6792,1402.4634,906.4609,-2659.1587,1416.9315,906.2734,3,48,4");
		        	case 7: format(addbizz[playerid],256,"1204.7395,-13.8515,1000.9219,1214.1865,-12.9937,1000.9219,2,48,4");
		        	case 8: format(addbizz[playerid],256,"501.9752,-67.5652,998.7578,496.4381,-75.5758,998.7578,11,49,5");
		        	case 9: format(addbizz[playerid],256,"207.6152,-111.2655,1005.1328,207.5049,-100.3288,1005.2578,15,45,6");
		        	case 10: format(addbizz[playerid],256,"227.4678,-8.2005,1002.2109,210.2596,-8.2212,1005.2109,5,45,6");
		        	case 11: format(addbizz[playerid],256,"285.6278,-41.8042,1001.5156,295.8984,-38.5138,1001.5156,1,6,7");
		        	case 12: format(addbizz[playerid],256,"285.8170,-86.7527,1001.5229,295.6908,-80.8089,1001.5156,4,6,7");
		        	case 13: format(addbizz[playerid],256,"296.9726,-112.0702,1001.5156,287.2077,-106.3636,1001.5156,6,6,7");
		        	case 14: format(addbizz[playerid],256,"-401.7134,2227.2317,1801.0859,-398.3685,2229.9114,1800.10,1,7,9");
		    	}
		    	ShowPlayerDialog(playerid, 9151, 1, "IMPORTANT", "IMPORTANT: Price , Name\n\nEXAMPLE: 100000 , Idlewood Gas", "Accept", "Cancle");
			}
		case 9151:
			{
		    	if(!response) return true;
  				new price,name[32];
  				if(sscanf(inputtext,"p<,>is[32]",price,name)) return ShowPlayerDialog(playerid, 9151, 1, "Business", "IMPORTANT: Price , Name\n\nEXAMPLE: 100000 , Idlewood Gas", "Accept", "Cancle");
				if(price < 1) return ShowPlayerDialog(playerid, 9151, 1, "Business", "IMPORTANT: Price , Name\n\nEXAMPLE: 100000 , Idlewood Gas", "Accept", "Cancle");
				TOTALBIZZ++;
            	sscanf(addbizz[playerid],"p<,>ffffffiii",
            	BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
            	BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],
				BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bMIcon], BizzInfo[TOTALBIZZ][bType]);
		    	GetPlayerPos(playerid,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
				strmid(BizzInfo[TOTALBIZZ][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
            	strmid(BizzInfo[TOTALBIZZ][bName], name, 0, strlen(name), MAX_PLAYER_NAME);
            	BizzInfo[TOTALBIZZ][bVirtual] = TOTALBIZZ;
            	BizzInfo[TOTALBIZZ][bPrice] = price;
				BizzInfo[TOTALBIZZ][bEnter] = 100;
				BizzInfo[TOTALBIZZ][bTill] = 50;
				BizzInfo[TOTALBIZZ][bID] = TOTALBIZZ;
				BizzInfo[TOTALBIZZ][bMafia] = 0;
				if(BizzInfo[TOTALBIZZ][bType] > 2) BizzInfo[TOTALBIZZ][bIcon] = CreateDynamicMapIcon(BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz], BizzInfo[TOTALBIZZ][bMIcon], 0,-1,-1,-1,200.0);
            	if(BizzInfo[TOTALBIZZ][bType] != 2 && BizzInfo[TOTALBIZZ][bType] != 8)
				{
			    	format(stringer, 100, "{ffff00}%s (# %i)\n{0eaa07}Business is for sale\nBusiness price: %d$", BizzInfo[TOTALBIZZ][bName], TOTALBIZZ, BizzInfo[TOTALBIZZ][bPrice]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1, 100.0);
			 		BizzInfo[TOTALBIZZ][bPickup] = CreatePickupAC(19132,1, BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
		 			BizzInfo[TOTALBIZZ][bPickupExit] = CreatePickupAC(19132, 1, BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz], BizzInfo[TOTALBIZZ][bVirtual]);
                	if(BizzInfo[TOTALBIZZ][bType] == 1) {
						BizzInfo[TOTALBIZZ][bMenu] = CreatePickupAC(2663, 1, BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz], BizzInfo[TOTALBIZZ][bVirtual]);
						CreateDynamic3DTextLabel("{0aa40d}List\ngoods",-1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],4.0);
					} else {
						BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicCP(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz], 1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
					}
				}
				else
				{
			    	if(BizzInfo[TOTALBIZZ][bType] == 2) format(stringer, 200, "{076bcc}Gas station\n{0eaa07}Business is for sale\nBusiness price: %d$\n{FFFFFF}Price for 1 liter - {f9f906}%i$", BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bTill] / 3);
			    	else format(stringer, 90, "{0eaa07}Business is for sale\nBusiness price: %d$\nName: %s", BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(stringer,0xFFFFFFFF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0,0,-1, 100.0);
				}
				mysql_format(connects,mysql_query_, sizeof(mysql_query_), "INSERT INTO "TABLE_BIZZ" (`bType`, `bPrice`, `bEntrx`, `bEntry`, `bEntrz`, `bExitx`, `bExity`, `bExitz`, `bMenux`, `bMenuy`, `bMenuz`, `bInt`, `bVirtual`, `bMIcon`, `bName`) VALUES ('%d','%d','%f','%f','%f','%f','%f','%f','%f','%f','%f','%d','%d','%d','%e')",
				BizzInfo[TOTALBIZZ][bType],BizzInfo[TOTALBIZZ][bPrice],BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz],BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
				BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bMIcon],BizzInfo[TOTALBIZZ][bName]);
				mysql_function_query(connects, mysql_query_, false, "", "");
            	SendMes(playerid,COLOR_WHITE,"Business number %i created",TOTALBIZZ);
            	return SaveBizz(TOTALBIZZ);
			}
		case 9152:
			{
				if(!response) return true;
		    	new idx = GetPVarInt(playerid, "PlayerBizz");
		    	if(strcmp(BizzInfo[idx][bOwner],"None",true) != 0) return SendClientMessage(playerid,COLOR_GREY,"The business already has an owner!");
		    	PlayerInfo[playerid][pBank] -= BizzInfo[idx][bPrice];
				BizzInfo[idx][bBuyPrice] = BizzInfo[idx][bPrice];
				BizzInfo[idx][bTill] = 50;
				PlayerPlaySound(playerid, 31204, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_WHITE, "Congratulations! You bought a business");
				SendClientMessage(playerid, 0x66cc00ff, "{66cc00}Write {2c9cce}/business, {66cc00}to find out about the possibilities");
    			if(PlayerInfo[playerid][pQuest11] == 0)
       			{
      				PlayerInfo[playerid][pQuest11] = 1;
       				UpdatePlayerData(playerid, "pQuest11", PlayerInfo[playerid][pQuest11]);
    			}
				ShowPlayerDialog(playerid, 228, DIALOG_STYLE_MSGBOX, "{FFD700}New business", "{FFFFFF}You need to pay for the rent of the business at the nearest bank branch {dba002}(/gps)", "Ok", "");
				strmid(BizzInfo[idx][bOwner],PlayerInfo[playerid][pNames], 0, strlen(PlayerInfo[playerid][pNames]), MAX_PLAYER_NAME);
				SaveBizz(idx);
				UpdateBizz(idx);
			}
		case 9122: {
			if(!response) return DeletePVar(playerid, "IdReport"); //
			new idx = GetPVarInt(playerid, "IdReport") - 1;
			switch(listitem) {
				case 0: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, I'm watching the player. Have a nice game on the. "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 1: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: No fouls were noted on the player. Good game. "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 2: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: The player was punished, thanks for the information. | Have a nice game "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 3: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, please don't Clutter The Reports. | Have a nice game "NAME_SERVER" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 4: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Post Your Gameplay In Our Forum Get Some Rewards. - "PAGE_FORUM"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 5: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, You Can Boost Our Discord To Get Rewards "PAGE_SITE" ! :)", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 6: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: To Report Open Ticket In Discord With Screenshot — "PAGE_SITE"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 7: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Our website — "PAGE_SITE" / IN CONTACT. — "PAGE_VK"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 8: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Hello, you can file a complaint with the group in the cell. - "PAGE_FORUM"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 9: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: You Can Contact the Founders of the project in Discord "PAGE_SITE".", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 10: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Thank You For Playing On Our Server We Wish Plesant Game — "NAME_SERVER"", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
				case 11: format(stringer1, sizeof(stringer1), "Adminstrator: %s[%d] To %s[%d]: Refill the account on the Discord "PAGE_SITE" and buy in /mm > In addition", PlayerInfo[playerid][pNames],playerid,PlayerInfo[idx][pNames],idx);
			}
			PlayerInfo[playerid][pRepAdm]++;
			SendClientMessage(idx, 0xff9945FF, stringer1);
			DeletePVar(idx, "RepUn"), DeletePVar(playerid, "IdReport");
			SCMAH(0xff9945FF, stringer1);
			return true;
		}
		case 9199: {
			if(!response) return true;
			new idx = GetPVarInt(playerid, "PlayerBizz");
			if(BizzInfo[idx][bType] == 2) format(stringer, 256, "[1] Business Information\n[2] Start business\n[3] Set a price for an item\n[4] Withdraw money from business\n[5] Sell business\n[6] Business advertising");
			else format(stringer, 256, "[1] Business Information\n[2] Start business\n[3] Set a price for an item\n[4] Set entry price\n[5] Withdraw money from business\n[6] Sell ??business\n[7] Business advertising");
			ShowPlayerDialog(playerid, 9153, 2, "Panel", stringer, "Select", "Cancle");
		}
		case 9153:
			{
		    	if(!response) return true;
		    	new i = GetPVarInt(playerid, "PlayerBizz");
				if(BizzInfo[i][bType] == 2) {
					switch(listitem)
					{
						case 0: BizzStats(playerid, i);
						case 1:
						{
							if(BizzInfo[i][bLock] == 0) return SendClientMessage(playerid, COLOR_GREY,"The business is already open!");
							if(BizzInfo[i][bProduct] <= 50 || BizzInfo[i][bLic] == 0) return SendClientMessage(playerid, COLOR_GREY,"There are no products in the business or no license!");
							BizzInfo[i][bLock] = 0;
							BizzInfo[i][bLockTime] = 0;
							SaveBizz(i);
							SendClientMessage(playerid, COLOR_LIGHTRED, "You started a business. Always keep an eye on the status of products and licenses");
							SendClientMessage(playerid, COLOR_LIGHTRED, "Otherwise, you may lose your business.");
						}
						case 2: ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
						case 3: ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
						case 4: ShowPlayerDialog(playerid, 9159, 0, "Sell business", "{ffffff}Do you want to sell your business?\n{AFAFAF}(to sell a business to another player enter /sellbiz [playerid] [Price])\n\n{FF6347}Attention! You will only get half the cost of the business back!", "Yes", "No");
						case 5: ShowPlayerDialog(playerid,5232,DIALOG_STYLE_MSGBOX,"{FFCC00}Business advertising","\n\n{FFFFFF} Advertising cost: {FFCC00}50.000${FFFFFF}\n- You can send an advertisement every 3 minutes.\n- Advertising text is entered by your hands.\n- People only see ads once!\n\nDo you really want to advertise your business?", "Accept", "Cancle");
					}
				} else {
					switch(listitem)
					{
						case 0: BizzStats(playerid, i);
						case 1:
						{
							if(BizzInfo[i][bLock] == 0) return SendClientMessage(playerid, COLOR_GREY,"Business is already open!");
							if(BizzInfo[i][bProduct] <= 50 || BizzInfo[i][bLic] == 0) return SendClientMessage(playerid, COLOR_GREY,"Business has no products or no license!");
							BizzInfo[i][bLock] = 0;
							BizzInfo[i][bLockTime] = 0;
							SaveBizz(i);
							SendClientMessage(playerid, COLOR_LIGHTRED, "You started a business. Always keep an eye on the status of products and licenses");
							SendClientMessage(playerid, COLOR_LIGHTRED, "Otherwise, you may lose your business.");
						}
						case 2: ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
						case 3:
						{
							ShowPlayerDialog(playerid, 9158, 1, "Price", "Enter the entry price in Moneys:", "Accept", "Cancle");
						}
						case 4: ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
						case 5: ShowPlayerDialog(playerid, 9159, 0, "Sell ??business", "{ffffff}Do you want to sell your business?\n{AFAFAF}(to sell a business to another player enter /sellbiz [playerid] [Price])\n\n{FF6347}Attention! You will only get half the cost of the business back!", "Yes", "No");
						case 6: ShowPlayerDialog(playerid,5232,DIALOG_STYLE_MSGBOX,"{FFCC00}Business Advertising ","\n\n{FFFFFF}Advertising cost: {FFCC00}50.000${FFFFFF}\n- You can send an advertisement every 3 minutes.\n- Advertising text is entered by your hands.\n- People only see ads once!\n\nDo you really want to advertise your business?", "Accept", "Cancle");
					}
				}
			}
		case 5232: {
			if(!response) return callcmd::business(playerid);
			if(GetPVarInt(playerid, #rekl_business))
			{
				if(!response) return DeletePVar(playerid, #rekl_business), callcmd::business(playerid);
				if(PlayerInfo[playerid][pCash] < 50000) return SendClientMessage(playerid, -1, "You don't have 50.000$"), DeletePVar(playerid, #rekl_business), callcmd::business(playerid);
				if(IsIpFound(inputtext)) return ShowPlayerDialog(playerid, 5232, DIALOG_STYLE_INPUT, "{FFCC00}Business advertising", "{FFFFFF}Please enter the text of the advertisement without using transliteration!\n- If your text contains insults or similar things, the advertisement will be canceled!", "Submit", "Cancle");
				new string[256], bizz = GetPVarInt(playerid, "PlayerBizz");
				format(string, 256, "{63CB00}[Business advertising: %s]: %s", BizzInfo[bizz][bName], inputtext);
				SendClientMessageToAll(COLOR_ORANGE, string);
				format(string, 144, "{63CB00}Sender: %s[%d]", PlayerInfo[playerid][pNames], playerid);
				SendClientMessageToAll(COLOR_ORANGE, string);
				PlayerInfo[playerid][pCash] -= 50000;
				SetPVarInt(playerid, #reklam_business, gettime()+180);
				return DeletePVar(playerid, #rekl_business), callcmd::business(playerid);
			}
			if(GetPVarInt(playerid, #reklam_business) > gettime()) return callcmd::business(playerid), SendClientMessage(playerid, -1, "You have already advertised your business, the next advertisement can be submitted in 5 minutes!");
			return ShowPlayerDialog(playerid, 5232, DIALOG_STYLE_INPUT, "{FFCC00}Business advertising", "{FFFFFF}Please enter the ad text without using transliteration!\n- If your text contains insults or similar things, the advertisement will be canceled!", "Submit", "Cancle"), SetPVarInt(playerid, #rekl_business, true);
		}
		case 9156:
			{
		    	if(!response || !GetPlayerBizz(playerid)) return true;
		    	new price, i = GetPVarInt(playerid, "PlayerBizz");
		    	if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
				if(price < 1 || price > 10000000 || BizzInfo[i][bMoney] < price) return ShowPlayerDialog(playerid, 9156, 1, "Withdraw money", "Enter the amount to withdraw:", "Accept", "Cancle");
				BizzInfo[i][bMoney]-=price;
				GiveMoney(playerid, price);
				SaveBizz(i);
				SendMes(playerid, COLOR_BLUE, "You have withdrawn %s Money. Balance: %s Money", formatInt(price),formatInt(BizzInfo[i][bMoney]));
			}
		case 9159:
			{
		    	if(!response || !GetPlayerBizz(playerid)) return true;
				new i = GetPVarInt(playerid, "PlayerBizz");
				strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				BizzInfo[i][bLock] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "You sold your business.");
				SendClientMessage(playerid,COLOR_BLUE,"Half of the cost and proceeds are transferred to your bank account");
				GiveBank(playerid, (BizzInfo[i][bBuyPrice] / 2 + BizzInfo[i][bMoney]));
				BizzInfo[i][bBuyPrice] = 0;
				BizzInfo[i][bMoney] = 0;
				BizzInfo[i][bLic] = 0;
				BizzInfo[i][bEnter] = 100;
				BizzInfo[i][bTill] = 50;
				BizzInfo[i][bLockTime] = 0;
				BizzInfo[i][bProduct] = 0;
				SaveBizz(i);
				UpdateBizz(i);
				GameTextForPlayer(playerid,"The busines sold", 3000, 5);
			}
		case 9157:
			{
		    	if(!response) return true;
		    	new price, i = GetPVarInt(playerid, "PlayerBizz");
		    	if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
				if(price < 1 || price > 100) return ShowPlayerDialog(playerid, 9157, 1, "Price", "Enter the price for the item as a percentage:", "Accept", "Cancle");
				BizzInfo[i][bTill] = price;
				SaveBizz(i);
				UpdateBizz(i);
				SendMes(playerid, COLOR_BLUE, "You have set the price for the item: %i percent", price);
				return true;
			}
		case 9158:
			{
				if(!response) return true;
		    	new price, i = GetPVarInt(playerid, "PlayerBizz");
		    	if(sscanf(inputtext, "i",price)) ShowPlayerDialog(playerid, 9158, 1, "Price", "Enter the entry price in Moneys:", "Accept", "Cancle");
				if(price < 0 || price > 10000) return ShowPlayerDialog(playerid, 9158, 1, "Price", "Enter the entry price in Moneys:", "Accept", "Cancle");
				BizzInfo[i][bEnter] = price;
				SaveBizz(i);
				UpdateBizz(i);
				SendMes(playerid, COLOR_BLUE, "You have set the entry price: %i Moneys", price);
				return true;
			}
		case 9291:
			{
		    	if(!response) return true;
		    	new idx = GetPVarInt(playerid, "PlayerBizz");
		    	if(strcmp(BizzInfo[idx][bOwner],"None",true) != 0 && (BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5))
		    	{
		        	if(PlayerInfo[playerid][pCash] < BizzInfo[idx][bEnter]) return SendClientMessage(playerid,COLOR_GREY,"You don't have enough money");
					PlayerInfo[playerid][pCash]-=BizzInfo[idx][bEnter];
					BizzInfo[idx][bMoney]+=BizzInfo[idx][bEnter];
					BizzPay[idx]+=BizzInfo[idx][bEnter];
				}
      			new Float:z;
			    SetPVarInt(playerid,"TIMEPICKUP",3);
			    SetPVarInt(playerid,"OLDPICKUP",BizzInfo[idx][bPickupExit]);
      			SetPPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
				SetPlayerInteriorEx(playerid,BizzInfo[idx][bInt]);
				SetPlayerVirtualWorldEx(playerid,BizzInfo[idx][bVirtual]);
				GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], z);
			}
		case 9292:
			{
		    	if(!response) return true;
		    	new idx = GetPVarInt(playerid, "PlayerBizz");
		    	new Float:z;
			    SetPVarInt(playerid,"TIMEPICKUP",3);
			    SetPVarInt(playerid,"OLDPICKUP",BizzInfo[idx][bPickup]);
       	    	if(idx == 73)
       	    	{
 	    			if(AlhambraDJID == playerid) AlhambraDJID = INVALID_PLAYER_ID, SendClientMessage(playerid,COLOR_GREY,"You were a DJ and you left the club. The stand is free.");
			    	if(Music[playerid] == true)
				    {
			       		Music[playerid] = false;
				        SendClientMessage(playerid,COLOR_GREY,"[PlayList] Music turned off, you left the club.");
				        StopAudioStreamForPlayer(playerid);
				    }
        		}
		        else if(idx == 77)
		        {
			    	if(JizzyDJID == playerid) JizzyDJID = INVALID_PLAYER_ID, SendClientMessage(playerid,COLOR_GREY,"You were a DJ and you left the club. The stand is free.");
				    if(Music[playerid] == true)
				    {
        				Music[playerid] = false;
				        SendClientMessage(playerid,COLOR_GREY,"[PlayList] Music turned off, you left the club.");
				        StopAudioStreamForPlayer(playerid);
					}
     			}
      			SetPPos(playerid,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]);
				SetPlayerInteriorEx(playerid,0);
				SetPlayerVirtualWorldEx(playerid,0);
				GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], z);
			}
		case 9231: {
		    	if(!response) return DeletePVar(playerid,"playerTarget");
				switch(listitem) {
			    	case 0: {
						if(!IsPlayerConnected(GetPVarInt(playerid,"playerTarget"))) return SendClientMessage(playerid, COLOR_WHITE, "ERROR: The player does not exist");
						if(!ProxDetectorS(8.0, playerid, GetPVarInt(playerid,"playerTarget"))) return SendClientMessage(playerid, COLOR_RED, "Man is too far away!");
						new shltext[32];
						if(PlayerInfo[playerid][pGunLic]) { shltext = "There is"; } else { shltext = "No"; }
						SendClientMessage(GetPVarInt(playerid,"playerTarget"),COLOR_GREY, "-----------===[ PASSPORT ]===----------");
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Nickname: %s ",PlayerInfo[playerid][pNames]);
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Age: %d  Telephone: %d",PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pPnumber]);
						if(PlayerInfo[playerid][pFacePass] == 0)//Íàñòîÿøèé ïàñïîðò
						{
							SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: %s",GetPlayerFracName[PlayerInfo[playerid][pMember]]);
							SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: %s",GetPlayerJobName(PlayerInfo[playerid][pJob]));
						}
						else if(PlayerInfo[playerid][pFacePass] == 1)//Ãðàæäàíèíà
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: Citizen");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						else if(PlayerInfo[playerid][pFacePass] == 2)//FBI
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: FBI");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						else if(PlayerInfo[playerid][pFacePass] == 3)//swat
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: S.W.A.T");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						else if(PlayerInfo[playerid][pFacePass] == 4)//Administration of the President
						{
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Faction: Administration of the President");
							SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Job: Unemployed");
						}
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Weapon permit: %s",shltext);
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Crimes: %d",PlayerInfo[playerid][pKills]);
						SendMes(GetPVarInt(playerid,"playerTarget"), COLOR_YELLOW2, "Obedience: %d",PlayerInfo[playerid][pZakonp]);
						if(PlayerInfo[playerid][pWanted] > 0 && PlayerInfo[playerid][pFacePass] == 0) SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_REDD, "Attention! This is a wanted man!");
						SendClientMessage(GetPVarInt(playerid,"playerTarget"),COLOR_GREY, "=============================");
						format(stringer1,sizeof(stringer1), "%s showed his passport %s", PlayerInfo[playerid][pNames], PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames]);
						SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
						format(stringer1, sizeof(stringer1), "%s showed (a) his passport", PlayerInfo[playerid][pNames]);
						ProxDetector(playerid, 10.0, COLOR_PURPLE, stringer1);
			        	DeletePVar(playerid,"playerTarget");
			    	}
			    	case 1: {
						ShowPlayerDialog(playerid,9232,1,"Transferring money","{ffffff}¬enter the amount you want to transfer:","Further","Close");
					}
					case 2: {
				    	if(PlayerCuffed[GetPVarInt(playerid,"playerTarget")] == 0) FIXES_ApplyAnimation(GetPVarInt(playerid,"playerTarget"),"GANGS", "hndshkfa",4.0, 0, 1, 1, 0, 0, 1);
				    	if(PlayerCuffed[playerid] == 0) FIXES_ApplyAnimation(playerid,"GANGS", "hndshkfa",4.0, 0, 1, 1, 0, 0, 1);
				    	format(stringer1,sizeof(stringer1),"%s said hello to %s",PlayerInfo[playerid][pNames],PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames]);
						ProxDetector(playerid, 30.0, COLOR_PURPLE, stringer1);
						DeletePVar(playerid,"playerTarget");
					}
					case 3: {
						format(stringer1,sizeof(stringer1),"%d",GetPVarInt(playerid,"playerTarget")), callcmd::present(playerid, stringer1);
						DeletePVar(playerid,"playerTarget");
					}
				}
			}
		case 9232: {
		    	if(!response) return 1;
		    	new price;
		    	if(sscanf(inputtext,"d",price)) return ShowPlayerDialog(playerid,9232,1,"Transferring money","{ffffff}¬enter the amount you want to transfer:","Further","Close");
		    	if(price < 1 || price > 150000) return SendClientMessage(playerid, COLOR_GRAD1, "You cannot transfer less than 1 Money and more than 150000 Money.");
		    	if(PlayerInfo[playerid][pPayDayHad] < 2) return SendClientMessage(playerid, COLOR_GREY, "You must stay in the game for another 2 hours (/mm - Statistics).");
		    	if(!IsPlayerConnected(GetPVarInt(playerid,"playerTarget"))) return true;
		    	if(GetPVarInt(playerid,"playerTarget") == INVALID_PLAYER_ID) return true;
		    	if(!ProxDetectorS(5.0, playerid, GetPVarInt(playerid,"playerTarget"))) return SendClientMessage(playerid, COLOR_GRAD1, "You're too far away.");
		    	if(PlayerInfo[playerid][pCash] < price) return true;
		    	GiveMoney(GetPVarInt(playerid,"playerTarget"), price);
		    	PlayerInfo[playerid][pCash] -= price;
		    	format(stringer1, sizeof(stringer1), "you passed %s[%i], %s Money.",PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames],GetPVarInt(playerid,"playerTarget"),formatInt(price));
		    	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		    	SendClientMessage(playerid, COLOR_GRAD1, stringer1);
		    	format(stringer1, sizeof(stringer1), "You received %s Money from %s[%i].",formatInt(price),PlayerInfo[playerid][pNames], playerid);
		    	SendClientMessage(GetPVarInt(playerid,"playerTarget"), COLOR_GRAD1, stringer1);
		    	PlayerPlaySound(GetPVarInt(playerid,"playerTarget"), 1052, 0.0, 0.0, 0.0);
		    	format(stringer1,sizeof(stringer1), "took out his wallet and handed over the money %s",PlayerInfo[GetPVarInt(playerid,"playerTarget")][pNames]);
		    	SetPlayerChatBubble(playerid,stringer1,COLOR_PURPLE,30.0,10000);
			}
       case 1746:
	    	{
	        	if(!response) return true;
            	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 552 && ProductInfo[listitem+1][pType] != 2) return SendClientMessage(playerid,COLOR_GREY,"You cannot deliver groceries using this vehicle.!");
				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 440 && ProductInfo[listitem+1][pType] == 2) return SendClientMessage(playerid,COLOR_GREY,"You cannot deliver gasoline with this vehicle.!");
  		  		SetPVarInt(playerid, "ProductID", listitem+1);
  		  		format(stringer, 256, "{ffffff}Order number {8D8DFF}\t\t%i %s\n\n{ffffff}Ordered:\t\t{8D8DFF}%s\n{ffffff}Where:\t\t\t{8D8DFF}%s\n{ffffff}Quantity:\t\t{8D8DFF}%i\n{ffffff}Payment:\t\t{8D8DFF}%s{ffffff} Money",
				listitem+1, (!ProductInfo[listitem+1][pStatus]) ? ("{8D8DFF}(Available)") : ("{FF6347}(Running)"), ProductInfo[listitem+1][pName], BizzInfo[ProductInfo[listitem+1][pBizzid]][bName],ProductInfo[listitem+1][pTill], formatInt(ProductInfo[listitem+1][pPrice]));
		    	return ShowPlayerDialog(playerid, 1747, 0, "Order", stringer, "Accept", "Back");
			}
		case 1747:
			{
		    	if(!response) { DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
				if(strcmp(ProductInfo[GetPVarInt(playerid, "ProductID")][pName], PlayerInfo[playerid][pNames], true) == 0) { DeletePVar(playerid, "ProductID"); ProductList(playerid); return SendClientMessage(playerid, COLOR_GREY, "You can't complete your order!"); }
				if(ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] == true) { SendClientMessage(playerid, COLOR_GREY, "The order is already being fulfilled by someone!"); DeletePVar(playerid, "ProductID"); return ProductList(playerid); }
				new Float:VPos[3], i = ProductInfo[GetPVarInt(playerid, "ProductID")][pBizzid];
				SendMes(playerid, TEAM_BLUE_COLOR, "You have accepted an order from %s. Go to the warehouse to load food/fuel. (/load)", ProductInfo[GetPVarInt(playerid, "ProductID")][pName]);
				GetPlayerPos(playerid, VPos[0], VPos[1], VPos[2]);
	    		DisablePlayerRaceCheckpoint(playerid);
	    		ProductInfo[GetPVarInt(playerid, "ProductID")][pStatus] = true;
				SetPlayerRaceCheckpoint(playerid, 1, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], 0.0,0.0,0.0,6);
  				return SendMes(playerid, COLOR_BLUE, "Marked on the map: %s. Distance: %.1f meters",BizzInfo[i][bName],GetDistanceBetweenPoints(VPos[0], VPos[1], VPos[2], BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
			}
		case 1202:
			{
		    	if(!response) return RemoveFromVehicle(playerid);
			    if(PlayerInfo[playerid][pCash] < 250) return SendClientMessage(playerid,COLOR_GREY,"You don't have enough money!"), RemoveFromVehicle(playerid);
	    		SetPVarInt(playerid,"JobVehicle",GetPlayerVehicleID(playerid));
		    	SendClientMessage(playerid,COLOR_WHITE,"You rented a car!");
		    	PlayerInfo[playerid][pCash]-=250;
		    	SendClientMessage(playerid,COLOR_WHITE,"Enter the command /plist to view orders!");
		   		SendClientMessage(playerid,COLOR_WHITE,"You can also take away products from the warehouse of movers/lumberjacks!");
				SendClientMessage(playerid,COLOR_BLUE,"Available commands: /plist, /load");
		   		return GameTextForPlayer(playerid,"~r~-$250", 5000, 1);
			}
		case 10:
			{
				if(!response) return MainMenuPl(playerid);
				if(!strlen(inputtext))return ShowPlayerDialog(playerid,10,DIALOG_STYLE_INPUT,"{FFD700}Report Message","{ffffff}Enter your report message in the text below.\n\n{63CB00}If you want to supply your player,\nSpecify its ID and reason.","Submit","Back");
				if(PlayerInfo[playerid][pReportTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "You have a report mute!");
				if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendClientMessage(playerid, COLOR_GREY, "there is a time limit for sending a report, please wait.");
				SendMes(playerid,0x00cb00ff,"%s[%d]: {FFCD00}%s", PlayerInfo[playerid][pNames], playerid, (inputtext));
				format(stringer, sizeof(stringer), "%s[%d]: {FFCD00}%s", PlayerInfo[playerid][pNames], playerid, (inputtext));
				SCMAH(0x00cb00ff,stringer);
				strmid(RepInfo[playerid][Reptext], inputtext, 0, Reptext_SIZE, Reptext_SIZE);
				SetPVarInt(playerid,"RepUn",1);
				SendClientMessage(playerid, COLOR_WHITE, "Please wait, the admin will answar you soon.");
				SetPVarInt(playerid,"AntiFloodRep",gettime() + 10);
				return true;
			}
        case D_DUTY:
			{
		    	if(response)
		    	{
		        	switch(StartDuty[playerid])
		        	{
						case 0:
						{
					    	StartDuty[playerid] = 1;
					    	GiveWeapon(playerid, 41, 1000), SetPlayerHealthAC(playerid, 100), SetPlayerArmour(playerid, 100);
					    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "You started your working day");
						}
						case 1:
						{
					    	StartDuty[playerid] = 0;
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "You have finished your working day");
						}
					}
				}
				else return true;
			}
		case D_DICE:
			{
	    		if(response)
	    		{
	        		if(DiceTable[playerid] != -1)
	        		{
		        		if(StartDice[DiceTable[playerid]] != 1)
		        		{
		            		if(ChooseBet[playerid] == 1)
		            		{
								GiveMoney(playerid, DiceTableInfo[DiceTable[playerid]][dBet]);
								DiceTableInfo[DiceTable[playerid]][dBank] -= DiceTableInfo[DiceTable[playerid]][dBet];
								format(stringer1, sizeof(stringer1), "%i$", DiceTableInfo[DiceTable[playerid]][dBank]);
								TextDrawSetString(DiceBankShow[DiceTable[playerid]], stringer1);
							}
						}
						OnPlayerExitDiceTable(playerid, DiceTable[playerid]);
					}
				}
				else return true;
			}
		case D_DICE+1:
			{
	    		if(response)
	    		{
	        		if(DiceTable[playerid] != -1)
	        		{
						OnPlayerExitDiceTable(playerid, DiceTable[playerid]);
					}
				}
				else return true;
			}
		case D_ROULE:
			{
	    		if(response)
	    		{
	        		new bet, tableid = RouleTable[playerid];
					if(ChooseBet[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "You have already placed your bet");
					if(StartRoule[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait until the game ends");
					{
			    		new message[64], limit[2], dialog[128];
			    		switch(tableid)
			    		{
			        		case 0,4,9: limit[0] = 5000000, limit[1] = 10000000;
		        			case 1,5,8: limit[0] = 5000000, limit[1] = 10000000;
		        			case 2,6,11: limit[0] = 1000000, limit[1] = 5000000;
		        			case 3,7,10: limit[0] = 500000, limit[1] = 1000000;
			    		}
						format(message, sizeof(message), "Minimum amount %s Money, maximum- %s Money", formatInt(limit[0]), formatInt(limit[1]));
                		format(dialog, sizeof(dialog), "{FFFFFF}Enter your bid:\n{04B404}Note: minimum amount is %s Money, maximum - %s Money", formatInt(limit[0]), formatInt(limit[1]));
                		if(sscanf(inputtext, "d", bet)) return ShowPlayerDialog(playerid, D_ROULE, DIALOG_STYLE_INPUT, "Bid", dialog, "Next", "Cancle");
			   			if(bet < limit[0] || bet > limit[1]) return SendClientMessage(playerid, COLOR_SILVER, message);
						if(PlayerInfo[playerid][pCash] < bet) return SendClientMessage(playerid, COLOR_SILVER, "You don't have enough money");
						{
				  		    ChooseBet[playerid] = 1;
				  		    RouleBet[playerid] = bet;
				   		    PlayerInfo[playerid][pCash] -= bet;
				  		    DestroyObject(RouleChip[playerid]);
				   		    strmid(RouleNumber[playerid], GetRouleNumber(playerid), 0, strlen(GetRouleNumber(playerid)), sizeof(RouleNumber[]));
	               			TextDrawSetString(RouleNumberShow[tableid][RouleGamer[playerid]], RouleNumber[playerid]);
							format(stringer1, sizeof(stringer1), "~g~%d$", bet);
	               			TextDrawSetString(RouleBetShow[tableid][RouleGamer[playerid]], stringer1);
	               			SendClientMessage(playerid, 0x74A402AA, "Your bet has been accepted");
							switch(Casino[playerid])
							{
	   		                	case 1:
	 				        		{
					        			RouleChip[playerid] = CreateObject(1930, RouleTables[tableid][0]+RouleVertikalCoords[RouleVertikal[playerid]][0], RouleTables[tableid][1]+RouleHorizontCoords[RouleHorizont[playerid]][0], 992.335, 0.0, 0.0, 0.0);
					    			}
					    		case 2:
					    			{
					        			RouleChip[playerid] = CreateObject(1930, RouleTables[tableid][0]-RouleHorizontCoords[RouleHorizont[playerid]][0], RouleTables[tableid][1]+RouleVertikalCoords[RouleVertikal[playerid]][0], 1006.06, 0.0, 0.0, 0.0);
					    			}
							}
						}
					}
				}
	   		    else return true;
			}
		case D_ROULE+1:
			{
	    		if(response)
	    		{
					if(RouleTable[playerid] != -1)
					{
			    		if(StartRoule[RouleTable[playerid]] != 1)
			    		{
                    		GiveMoney(playerid, RouleBet[playerid]);
			    		}
			    		OnPlayerExitRouleTable(playerid, RouleTable[playerid]);
					}
				}
				else return true;
			}
		case D_ROULE+2:
			{
	    		if(response)
	    		{
					if(RouleTable[playerid] != -1)
					{
			    		OnPlayerExitRouleTable(playerid, RouleTable[playerid]);
					}
	    		}
	    		else return true;
			}
 		case D_BLACKJACK:
			{
	    		if(response)
	    		{
		    		if(BlackJackTable[playerid] != -1)
					{
			    		new tableid = BlackJackTable[playerid];
			    		if(StartBlackJack[tableid] != 1)
			    		{
      		            	GiveMoney(playerid, BlackJackBet[playerid]);
			    		}
			    		OnPlayerExitBlackJackTable(playerid, tableid);
					}
				}
				else return true;
			}
		case D_BLACKJACK+1:
			{
				if(response)
				{
	    			if(BlackJackTable[playerid] != -1)
					{
			    		OnPlayerExitBlackJackTable(playerid, BlackJackTable[playerid]);
					}
				}
				else return true;
			}
		case D_BLACKJACK+2:
			{
	    		if(response)
	    		{
	        		new bet, tableid = BlackJackTable[playerid];
					if(ChooseBet[playerid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "You have already placed your bet");
            		if(StartBlackJack[tableid] == 1) return SendClientMessage(playerid, COLOR_SILVER, "Wait until the game ends");
					{
			    		new message[64], limit[2], dialog[128];
			    		switch(BlackJackTable[playerid])
			    		{
			        		case 0,4,8: limit[0] = 1000000, limit[1] = 3000000;
			        		case 1,6,10: limit[0] = 1000000, limit[1] = 3000000;
			        		case 2,5,9: limit[0] = 500000, limit[1] = 1000000;
			        		case 3,7,11: limit[0] = 50000, limit[1] = 500000;
			    		}
			    		format(message, sizeof(message), "Minimum amount %s Money, maximum - %s Money", formatInt(limit[0]), formatInt(limit[1]));
                		format(dialog, sizeof(dialog), "{FFFFFF}Enter your bid:\n{04B404}Note: minimum amount is %s Money, maximum - %s Money", formatInt(limit[0]), formatInt(limit[1]));
						if(sscanf(inputtext, "d", bet)) return ShowPlayerDialog(playerid, D_BLACKJACK+2, DIALOG_STYLE_INPUT, "Bid", dialog, "Next", "Cancle");
						if(bet < limit[0] || bet > limit[1]) return SendClientMessage(playerid, COLOR_SILVER, message);
						if(PlayerInfo[playerid][pCash] < bet) return SendClientMessage(playerid, COLOR_SILVER, "You don't have enough money");
						{
			    			ChooseBet[playerid] = 1;
				    		BlackJackBet[playerid] = bet;
				    		PlayerInfo[playerid][pCash] -= bet;
							format(stringer1, sizeof(stringer1), "%d$", bet);
	               			TextDrawSetString(BlackJackBetShow[tableid][BlackJackGamer[playerid]], stringer1);
	               			SendClientMessage(playerid, 0x74A402AA, "Your bet has been accepted");
						}
					}
				}
			}
